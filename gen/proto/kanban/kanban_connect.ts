// @generated by protoc-gen-connect-es v0.13.0 with parameter "target=ts"
// @generated from file proto/kanban/kanban.proto (package kanban, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import { CreateBoardRequest, CreateBoardResponse, CreateCardRequest, CreateCardResponse, CreateColumnRequest, CreateColumnResponse, DeleteBoardRequest, DeleteBoardResponse, DeleteCardRequest, DeleteCardResponse, DeleteColumnRequest, DeleteColumnResponse, GetBoardRequest, GetBoardResponse, ListBoardsRequest, ListBoardsResponse, MoveCardRequest, MoveCardResponse, MoveColumnRequest, MoveColumnResponse, UpdateBoardRequest, UpdateBoardResponse, UpdateCardRequest, UpdateCardResponse, UpdateColumnRequest, UpdateColumnResponse } from "./kanban_pb.js";
import { MethodKind } from "@bufbuild/protobuf";

/**
 * The Kanban service provides methods for managing kanban boards
 *
 * @generated from service kanban.KanbanService
 */
export const KanbanService = {
  typeName: "kanban.KanbanService",
  methods: {
    /**
     * Board operations
     *
     * @generated from rpc kanban.KanbanService.CreateBoard
     */
    createBoard: {
      name: "CreateBoard",
      I: CreateBoardRequest,
      O: CreateBoardResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc kanban.KanbanService.GetBoard
     */
    getBoard: {
      name: "GetBoard",
      I: GetBoardRequest,
      O: GetBoardResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc kanban.KanbanService.ListBoards
     */
    listBoards: {
      name: "ListBoards",
      I: ListBoardsRequest,
      O: ListBoardsResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc kanban.KanbanService.UpdateBoard
     */
    updateBoard: {
      name: "UpdateBoard",
      I: UpdateBoardRequest,
      O: UpdateBoardResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc kanban.KanbanService.DeleteBoard
     */
    deleteBoard: {
      name: "DeleteBoard",
      I: DeleteBoardRequest,
      O: DeleteBoardResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Column operations
     *
     * @generated from rpc kanban.KanbanService.CreateColumn
     */
    createColumn: {
      name: "CreateColumn",
      I: CreateColumnRequest,
      O: CreateColumnResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc kanban.KanbanService.UpdateColumn
     */
    updateColumn: {
      name: "UpdateColumn",
      I: UpdateColumnRequest,
      O: UpdateColumnResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc kanban.KanbanService.DeleteColumn
     */
    deleteColumn: {
      name: "DeleteColumn",
      I: DeleteColumnRequest,
      O: DeleteColumnResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc kanban.KanbanService.MoveColumn
     */
    moveColumn: {
      name: "MoveColumn",
      I: MoveColumnRequest,
      O: MoveColumnResponse,
      kind: MethodKind.Unary,
    },
    /**
     * Card operations
     *
     * @generated from rpc kanban.KanbanService.CreateCard
     */
    createCard: {
      name: "CreateCard",
      I: CreateCardRequest,
      O: CreateCardResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc kanban.KanbanService.UpdateCard
     */
    updateCard: {
      name: "UpdateCard",
      I: UpdateCardRequest,
      O: UpdateCardResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc kanban.KanbanService.DeleteCard
     */
    deleteCard: {
      name: "DeleteCard",
      I: DeleteCardRequest,
      O: DeleteCardResponse,
      kind: MethodKind.Unary,
    },
    /**
     * @generated from rpc kanban.KanbanService.MoveCard
     */
    moveCard: {
      name: "MoveCard",
      I: MoveCardRequest,
      O: MoveCardResponse,
      kind: MethodKind.Unary,
    },
  }
} as const;

