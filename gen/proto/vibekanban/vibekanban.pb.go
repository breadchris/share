// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: proto/vibekanban/vibekanban.proto

package vibekanban

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Enums
type TaskStatus int32

const (
	TaskStatus_TASK_STATUS_UNSPECIFIED TaskStatus = 0
	TaskStatus_TASK_STATUS_TODO        TaskStatus = 1
	TaskStatus_TASK_STATUS_IN_PROGRESS TaskStatus = 2
	TaskStatus_TASK_STATUS_IN_REVIEW   TaskStatus = 3
	TaskStatus_TASK_STATUS_DONE        TaskStatus = 4
	TaskStatus_TASK_STATUS_CANCELLED   TaskStatus = 5
)

// Enum value maps for TaskStatus.
var (
	TaskStatus_name = map[int32]string{
		0: "TASK_STATUS_UNSPECIFIED",
		1: "TASK_STATUS_TODO",
		2: "TASK_STATUS_IN_PROGRESS",
		3: "TASK_STATUS_IN_REVIEW",
		4: "TASK_STATUS_DONE",
		5: "TASK_STATUS_CANCELLED",
	}
	TaskStatus_value = map[string]int32{
		"TASK_STATUS_UNSPECIFIED": 0,
		"TASK_STATUS_TODO":        1,
		"TASK_STATUS_IN_PROGRESS": 2,
		"TASK_STATUS_IN_REVIEW":   3,
		"TASK_STATUS_DONE":        4,
		"TASK_STATUS_CANCELLED":   5,
	}
)

func (x TaskStatus) Enum() *TaskStatus {
	p := new(TaskStatus)
	*p = x
	return p
}

func (x TaskStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TaskStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_vibekanban_vibekanban_proto_enumTypes[0].Descriptor()
}

func (TaskStatus) Type() protoreflect.EnumType {
	return &file_proto_vibekanban_vibekanban_proto_enumTypes[0]
}

func (x TaskStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TaskStatus.Descriptor instead.
func (TaskStatus) EnumDescriptor() ([]byte, []int) {
	return file_proto_vibekanban_vibekanban_proto_rawDescGZIP(), []int{0}
}

type TaskPriority int32

const (
	TaskPriority_TASK_PRIORITY_UNSPECIFIED TaskPriority = 0
	TaskPriority_TASK_PRIORITY_LOW         TaskPriority = 1
	TaskPriority_TASK_PRIORITY_MEDIUM      TaskPriority = 2
	TaskPriority_TASK_PRIORITY_HIGH        TaskPriority = 3
)

// Enum value maps for TaskPriority.
var (
	TaskPriority_name = map[int32]string{
		0: "TASK_PRIORITY_UNSPECIFIED",
		1: "TASK_PRIORITY_LOW",
		2: "TASK_PRIORITY_MEDIUM",
		3: "TASK_PRIORITY_HIGH",
	}
	TaskPriority_value = map[string]int32{
		"TASK_PRIORITY_UNSPECIFIED": 0,
		"TASK_PRIORITY_LOW":         1,
		"TASK_PRIORITY_MEDIUM":      2,
		"TASK_PRIORITY_HIGH":        3,
	}
)

func (x TaskPriority) Enum() *TaskPriority {
	p := new(TaskPriority)
	*p = x
	return p
}

func (x TaskPriority) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TaskPriority) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_vibekanban_vibekanban_proto_enumTypes[1].Descriptor()
}

func (TaskPriority) Type() protoreflect.EnumType {
	return &file_proto_vibekanban_vibekanban_proto_enumTypes[1]
}

func (x TaskPriority) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TaskPriority.Descriptor instead.
func (TaskPriority) EnumDescriptor() ([]byte, []int) {
	return file_proto_vibekanban_vibekanban_proto_rawDescGZIP(), []int{1}
}

type AttemptStatus int32

const (
	AttemptStatus_ATTEMPT_STATUS_UNSPECIFIED AttemptStatus = 0
	AttemptStatus_ATTEMPT_STATUS_PENDING     AttemptStatus = 1
	AttemptStatus_ATTEMPT_STATUS_RUNNING     AttemptStatus = 2
	AttemptStatus_ATTEMPT_STATUS_COMPLETED   AttemptStatus = 3
	AttemptStatus_ATTEMPT_STATUS_FAILED      AttemptStatus = 4
)

// Enum value maps for AttemptStatus.
var (
	AttemptStatus_name = map[int32]string{
		0: "ATTEMPT_STATUS_UNSPECIFIED",
		1: "ATTEMPT_STATUS_PENDING",
		2: "ATTEMPT_STATUS_RUNNING",
		3: "ATTEMPT_STATUS_COMPLETED",
		4: "ATTEMPT_STATUS_FAILED",
	}
	AttemptStatus_value = map[string]int32{
		"ATTEMPT_STATUS_UNSPECIFIED": 0,
		"ATTEMPT_STATUS_PENDING":     1,
		"ATTEMPT_STATUS_RUNNING":     2,
		"ATTEMPT_STATUS_COMPLETED":   3,
		"ATTEMPT_STATUS_FAILED":      4,
	}
)

func (x AttemptStatus) Enum() *AttemptStatus {
	p := new(AttemptStatus)
	*p = x
	return p
}

func (x AttemptStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AttemptStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_vibekanban_vibekanban_proto_enumTypes[2].Descriptor()
}

func (AttemptStatus) Type() protoreflect.EnumType {
	return &file_proto_vibekanban_vibekanban_proto_enumTypes[2]
}

func (x AttemptStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AttemptStatus.Descriptor instead.
func (AttemptStatus) EnumDescriptor() ([]byte, []int) {
	return file_proto_vibekanban_vibekanban_proto_rawDescGZIP(), []int{2}
}

type ProcessType int32

const (
	ProcessType_PROCESS_TYPE_UNSPECIFIED  ProcessType = 0
	ProcessType_PROCESS_TYPE_SETUP_SCRIPT ProcessType = 1
	ProcessType_PROCESS_TYPE_CODING_AGENT ProcessType = 2
	ProcessType_PROCESS_TYPE_DEV_SERVER   ProcessType = 3
)

// Enum value maps for ProcessType.
var (
	ProcessType_name = map[int32]string{
		0: "PROCESS_TYPE_UNSPECIFIED",
		1: "PROCESS_TYPE_SETUP_SCRIPT",
		2: "PROCESS_TYPE_CODING_AGENT",
		3: "PROCESS_TYPE_DEV_SERVER",
	}
	ProcessType_value = map[string]int32{
		"PROCESS_TYPE_UNSPECIFIED":  0,
		"PROCESS_TYPE_SETUP_SCRIPT": 1,
		"PROCESS_TYPE_CODING_AGENT": 2,
		"PROCESS_TYPE_DEV_SERVER":   3,
	}
)

func (x ProcessType) Enum() *ProcessType {
	p := new(ProcessType)
	*p = x
	return p
}

func (x ProcessType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProcessType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_vibekanban_vibekanban_proto_enumTypes[3].Descriptor()
}

func (ProcessType) Type() protoreflect.EnumType {
	return &file_proto_vibekanban_vibekanban_proto_enumTypes[3]
}

func (x ProcessType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProcessType.Descriptor instead.
func (ProcessType) EnumDescriptor() ([]byte, []int) {
	return file_proto_vibekanban_vibekanban_proto_rawDescGZIP(), []int{3}
}

type ProcessStatus int32

const (
	ProcessStatus_PROCESS_STATUS_UNSPECIFIED ProcessStatus = 0
	ProcessStatus_PROCESS_STATUS_PENDING     ProcessStatus = 1
	ProcessStatus_PROCESS_STATUS_RUNNING     ProcessStatus = 2
	ProcessStatus_PROCESS_STATUS_COMPLETED   ProcessStatus = 3
	ProcessStatus_PROCESS_STATUS_FAILED      ProcessStatus = 4
	ProcessStatus_PROCESS_STATUS_KILLED      ProcessStatus = 5
)

// Enum value maps for ProcessStatus.
var (
	ProcessStatus_name = map[int32]string{
		0: "PROCESS_STATUS_UNSPECIFIED",
		1: "PROCESS_STATUS_PENDING",
		2: "PROCESS_STATUS_RUNNING",
		3: "PROCESS_STATUS_COMPLETED",
		4: "PROCESS_STATUS_FAILED",
		5: "PROCESS_STATUS_KILLED",
	}
	ProcessStatus_value = map[string]int32{
		"PROCESS_STATUS_UNSPECIFIED": 0,
		"PROCESS_STATUS_PENDING":     1,
		"PROCESS_STATUS_RUNNING":     2,
		"PROCESS_STATUS_COMPLETED":   3,
		"PROCESS_STATUS_FAILED":      4,
		"PROCESS_STATUS_KILLED":      5,
	}
)

func (x ProcessStatus) Enum() *ProcessStatus {
	p := new(ProcessStatus)
	*p = x
	return p
}

func (x ProcessStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ProcessStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_vibekanban_vibekanban_proto_enumTypes[4].Descriptor()
}

func (ProcessStatus) Type() protoreflect.EnumType {
	return &file_proto_vibekanban_vibekanban_proto_enumTypes[4]
}

func (x ProcessStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ProcessStatus.Descriptor instead.
func (ProcessStatus) EnumDescriptor() ([]byte, []int) {
	return file_proto_vibekanban_vibekanban_proto_rawDescGZIP(), []int{4}
}

// Core data models
type Project struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	GitRepoPath   string                 `protobuf:"bytes,3,opt,name=git_repo_path,json=gitRepoPath,proto3" json:"git_repo_path,omitempty"`
	SetupScript   string                 `protobuf:"bytes,4,opt,name=setup_script,json=setupScript,proto3" json:"setup_script,omitempty"`
	DevScript     string                 `protobuf:"bytes,5,opt,name=dev_script,json=devScript,proto3" json:"dev_script,omitempty"`
	DefaultBranch string                 `protobuf:"bytes,6,opt,name=default_branch,json=defaultBranch,proto3" json:"default_branch,omitempty"`
	UserId        string                 `protobuf:"bytes,7,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Tasks         []*Task                `protobuf:"bytes,8,rep,name=tasks,proto3" json:"tasks,omitempty"`
	Config        map[string]string      `protobuf:"bytes,9,rep,name=config,proto3" json:"config,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Project) Reset() {
	*x = Project{}
	mi := &file_proto_vibekanban_vibekanban_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Project) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Project) ProtoMessage() {}

func (x *Project) ProtoReflect() protoreflect.Message {
	mi := &file_proto_vibekanban_vibekanban_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Project.ProtoReflect.Descriptor instead.
func (*Project) Descriptor() ([]byte, []int) {
	return file_proto_vibekanban_vibekanban_proto_rawDescGZIP(), []int{0}
}

func (x *Project) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Project) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Project) GetGitRepoPath() string {
	if x != nil {
		return x.GitRepoPath
	}
	return ""
}

func (x *Project) GetSetupScript() string {
	if x != nil {
		return x.SetupScript
	}
	return ""
}

func (x *Project) GetDevScript() string {
	if x != nil {
		return x.DevScript
	}
	return ""
}

func (x *Project) GetDefaultBranch() string {
	if x != nil {
		return x.DefaultBranch
	}
	return ""
}

func (x *Project) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Project) GetTasks() []*Task {
	if x != nil {
		return x.Tasks
	}
	return nil
}

func (x *Project) GetConfig() map[string]string {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *Project) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Project) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type Task struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Status        TaskStatus             `protobuf:"varint,4,opt,name=status,proto3,enum=vibekanban.TaskStatus" json:"status,omitempty"`
	Priority      TaskPriority           `protobuf:"varint,5,opt,name=priority,proto3,enum=vibekanban.TaskPriority" json:"priority,omitempty"`
	ProjectId     string                 `protobuf:"bytes,6,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	UserId        string                 `protobuf:"bytes,7,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Attempts      []*TaskAttempt         `protobuf:"bytes,8,rep,name=attempts,proto3" json:"attempts,omitempty"`
	Labels        []string               `protobuf:"bytes,9,rep,name=labels,proto3" json:"labels,omitempty"`
	Metadata      map[string]string      `protobuf:"bytes,10,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Task) Reset() {
	*x = Task{}
	mi := &file_proto_vibekanban_vibekanban_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Task) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task) ProtoMessage() {}

func (x *Task) ProtoReflect() protoreflect.Message {
	mi := &file_proto_vibekanban_vibekanban_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Task.ProtoReflect.Descriptor instead.
func (*Task) Descriptor() ([]byte, []int) {
	return file_proto_vibekanban_vibekanban_proto_rawDescGZIP(), []int{1}
}

func (x *Task) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Task) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *Task) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Task) GetStatus() TaskStatus {
	if x != nil {
		return x.Status
	}
	return TaskStatus_TASK_STATUS_UNSPECIFIED
}

func (x *Task) GetPriority() TaskPriority {
	if x != nil {
		return x.Priority
	}
	return TaskPriority_TASK_PRIORITY_UNSPECIFIED
}

func (x *Task) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *Task) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Task) GetAttempts() []*TaskAttempt {
	if x != nil {
		return x.Attempts
	}
	return nil
}

func (x *Task) GetLabels() []string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *Task) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *Task) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Task) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type TaskAttempt struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	TaskId        string                 `protobuf:"bytes,2,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	WorktreePath  string                 `protobuf:"bytes,3,opt,name=worktree_path,json=worktreePath,proto3" json:"worktree_path,omitempty"`
	Branch        string                 `protobuf:"bytes,4,opt,name=branch,proto3" json:"branch,omitempty"`
	BaseBranch    string                 `protobuf:"bytes,5,opt,name=base_branch,json=baseBranch,proto3" json:"base_branch,omitempty"`
	MergeCommit   string                 `protobuf:"bytes,6,opt,name=merge_commit,json=mergeCommit,proto3" json:"merge_commit,omitempty"`
	Executor      string                 `protobuf:"bytes,7,opt,name=executor,proto3" json:"executor,omitempty"`
	Status        AttemptStatus          `protobuf:"varint,8,opt,name=status,proto3,enum=vibekanban.AttemptStatus" json:"status,omitempty"`
	PrUrl         string                 `protobuf:"bytes,9,opt,name=pr_url,json=prUrl,proto3" json:"pr_url,omitempty"`
	StartTime     *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime       *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	UserId        string                 `protobuf:"bytes,12,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Processes     []*ExecutionProcess    `protobuf:"bytes,13,rep,name=processes,proto3" json:"processes,omitempty"`
	Sessions      []*ExecutorSession     `protobuf:"bytes,14,rep,name=sessions,proto3" json:"sessions,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,15,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,16,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TaskAttempt) Reset() {
	*x = TaskAttempt{}
	mi := &file_proto_vibekanban_vibekanban_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TaskAttempt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TaskAttempt) ProtoMessage() {}

func (x *TaskAttempt) ProtoReflect() protoreflect.Message {
	mi := &file_proto_vibekanban_vibekanban_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TaskAttempt.ProtoReflect.Descriptor instead.
func (*TaskAttempt) Descriptor() ([]byte, []int) {
	return file_proto_vibekanban_vibekanban_proto_rawDescGZIP(), []int{2}
}

func (x *TaskAttempt) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *TaskAttempt) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *TaskAttempt) GetWorktreePath() string {
	if x != nil {
		return x.WorktreePath
	}
	return ""
}

func (x *TaskAttempt) GetBranch() string {
	if x != nil {
		return x.Branch
	}
	return ""
}

func (x *TaskAttempt) GetBaseBranch() string {
	if x != nil {
		return x.BaseBranch
	}
	return ""
}

func (x *TaskAttempt) GetMergeCommit() string {
	if x != nil {
		return x.MergeCommit
	}
	return ""
}

func (x *TaskAttempt) GetExecutor() string {
	if x != nil {
		return x.Executor
	}
	return ""
}

func (x *TaskAttempt) GetStatus() AttemptStatus {
	if x != nil {
		return x.Status
	}
	return AttemptStatus_ATTEMPT_STATUS_UNSPECIFIED
}

func (x *TaskAttempt) GetPrUrl() string {
	if x != nil {
		return x.PrUrl
	}
	return ""
}

func (x *TaskAttempt) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *TaskAttempt) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

func (x *TaskAttempt) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *TaskAttempt) GetProcesses() []*ExecutionProcess {
	if x != nil {
		return x.Processes
	}
	return nil
}

func (x *TaskAttempt) GetSessions() []*ExecutorSession {
	if x != nil {
		return x.Sessions
	}
	return nil
}

func (x *TaskAttempt) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *TaskAttempt) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type ExecutionProcess struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	AttemptId     string                 `protobuf:"bytes,2,opt,name=attempt_id,json=attemptId,proto3" json:"attempt_id,omitempty"`
	Type          ProcessType            `protobuf:"varint,3,opt,name=type,proto3,enum=vibekanban.ProcessType" json:"type,omitempty"`
	Status        ProcessStatus          `protobuf:"varint,4,opt,name=status,proto3,enum=vibekanban.ProcessStatus" json:"status,omitempty"`
	Command       string                 `protobuf:"bytes,5,opt,name=command,proto3" json:"command,omitempty"`
	ProcessId     int32                  `protobuf:"varint,6,opt,name=process_id,json=processId,proto3" json:"process_id,omitempty"`
	StartTime     *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime       *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	Stdout        string                 `protobuf:"bytes,9,opt,name=stdout,proto3" json:"stdout,omitempty"`
	Stderr        string                 `protobuf:"bytes,10,opt,name=stderr,proto3" json:"stderr,omitempty"`
	ExitCode      int32                  `protobuf:"varint,11,opt,name=exit_code,json=exitCode,proto3" json:"exit_code,omitempty"`
	Port          int32                  `protobuf:"varint,12,opt,name=port,proto3" json:"port,omitempty"`
	Url           string                 `protobuf:"bytes,13,opt,name=url,proto3" json:"url,omitempty"`
	Metadata      map[string]string      `protobuf:"bytes,14,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,15,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,16,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExecutionProcess) Reset() {
	*x = ExecutionProcess{}
	mi := &file_proto_vibekanban_vibekanban_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecutionProcess) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecutionProcess) ProtoMessage() {}

func (x *ExecutionProcess) ProtoReflect() protoreflect.Message {
	mi := &file_proto_vibekanban_vibekanban_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecutionProcess.ProtoReflect.Descriptor instead.
func (*ExecutionProcess) Descriptor() ([]byte, []int) {
	return file_proto_vibekanban_vibekanban_proto_rawDescGZIP(), []int{3}
}

func (x *ExecutionProcess) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ExecutionProcess) GetAttemptId() string {
	if x != nil {
		return x.AttemptId
	}
	return ""
}

func (x *ExecutionProcess) GetType() ProcessType {
	if x != nil {
		return x.Type
	}
	return ProcessType_PROCESS_TYPE_UNSPECIFIED
}

func (x *ExecutionProcess) GetStatus() ProcessStatus {
	if x != nil {
		return x.Status
	}
	return ProcessStatus_PROCESS_STATUS_UNSPECIFIED
}

func (x *ExecutionProcess) GetCommand() string {
	if x != nil {
		return x.Command
	}
	return ""
}

func (x *ExecutionProcess) GetProcessId() int32 {
	if x != nil {
		return x.ProcessId
	}
	return 0
}

func (x *ExecutionProcess) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *ExecutionProcess) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

func (x *ExecutionProcess) GetStdout() string {
	if x != nil {
		return x.Stdout
	}
	return ""
}

func (x *ExecutionProcess) GetStderr() string {
	if x != nil {
		return x.Stderr
	}
	return ""
}

func (x *ExecutionProcess) GetExitCode() int32 {
	if x != nil {
		return x.ExitCode
	}
	return 0
}

func (x *ExecutionProcess) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *ExecutionProcess) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *ExecutionProcess) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *ExecutionProcess) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *ExecutionProcess) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type ExecutorSession struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	AttemptId     string                 `protobuf:"bytes,2,opt,name=attempt_id,json=attemptId,proto3" json:"attempt_id,omitempty"`
	SessionId     string                 `protobuf:"bytes,3,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	Executor      string                 `protobuf:"bytes,4,opt,name=executor,proto3" json:"executor,omitempty"`
	Prompt        string                 `protobuf:"bytes,5,opt,name=prompt,proto3" json:"prompt,omitempty"`
	Summary       string                 `protobuf:"bytes,6,opt,name=summary,proto3" json:"summary,omitempty"`
	Messages      []*ConversationEntry   `protobuf:"bytes,7,rep,name=messages,proto3" json:"messages,omitempty"`
	Metadata      map[string]string      `protobuf:"bytes,8,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExecutorSession) Reset() {
	*x = ExecutorSession{}
	mi := &file_proto_vibekanban_vibekanban_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExecutorSession) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExecutorSession) ProtoMessage() {}

func (x *ExecutorSession) ProtoReflect() protoreflect.Message {
	mi := &file_proto_vibekanban_vibekanban_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExecutorSession.ProtoReflect.Descriptor instead.
func (*ExecutorSession) Descriptor() ([]byte, []int) {
	return file_proto_vibekanban_vibekanban_proto_rawDescGZIP(), []int{4}
}

func (x *ExecutorSession) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ExecutorSession) GetAttemptId() string {
	if x != nil {
		return x.AttemptId
	}
	return ""
}

func (x *ExecutorSession) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *ExecutorSession) GetExecutor() string {
	if x != nil {
		return x.Executor
	}
	return ""
}

func (x *ExecutorSession) GetPrompt() string {
	if x != nil {
		return x.Prompt
	}
	return ""
}

func (x *ExecutorSession) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

func (x *ExecutorSession) GetMessages() []*ConversationEntry {
	if x != nil {
		return x.Messages
	}
	return nil
}

func (x *ExecutorSession) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *ExecutorSession) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *ExecutorSession) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type ConversationEntry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          string                 `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Content       string                 `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	Metadata      map[string]string      `protobuf:"bytes,3,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConversationEntry) Reset() {
	*x = ConversationEntry{}
	mi := &file_proto_vibekanban_vibekanban_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConversationEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConversationEntry) ProtoMessage() {}

func (x *ConversationEntry) ProtoReflect() protoreflect.Message {
	mi := &file_proto_vibekanban_vibekanban_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConversationEntry.ProtoReflect.Descriptor instead.
func (*ConversationEntry) Descriptor() ([]byte, []int) {
	return file_proto_vibekanban_vibekanban_proto_rawDescGZIP(), []int{5}
}

func (x *ConversationEntry) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ConversationEntry) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *ConversationEntry) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *ConversationEntry) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

// Project operations
type GetProjectRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetProjectRequest) Reset() {
	*x = GetProjectRequest{}
	mi := &file_proto_vibekanban_vibekanban_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetProjectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProjectRequest) ProtoMessage() {}

func (x *GetProjectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_vibekanban_vibekanban_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProjectRequest.ProtoReflect.Descriptor instead.
func (*GetProjectRequest) Descriptor() ([]byte, []int) {
	return file_proto_vibekanban_vibekanban_proto_rawDescGZIP(), []int{6}
}

func (x *GetProjectRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetProjectResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Project       *Project               `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetProjectResponse) Reset() {
	*x = GetProjectResponse{}
	mi := &file_proto_vibekanban_vibekanban_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetProjectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProjectResponse) ProtoMessage() {}

func (x *GetProjectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_vibekanban_vibekanban_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProjectResponse.ProtoReflect.Descriptor instead.
func (*GetProjectResponse) Descriptor() ([]byte, []int) {
	return file_proto_vibekanban_vibekanban_proto_rawDescGZIP(), []int{7}
}

func (x *GetProjectResponse) GetProject() *Project {
	if x != nil {
		return x.Project
	}
	return nil
}

type ListProjectsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PageSize      int32                  `protobuf:"varint,1,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageToken     string                 `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListProjectsRequest) Reset() {
	*x = ListProjectsRequest{}
	mi := &file_proto_vibekanban_vibekanban_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListProjectsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListProjectsRequest) ProtoMessage() {}

func (x *ListProjectsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_vibekanban_vibekanban_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListProjectsRequest.ProtoReflect.Descriptor instead.
func (*ListProjectsRequest) Descriptor() ([]byte, []int) {
	return file_proto_vibekanban_vibekanban_proto_rawDescGZIP(), []int{8}
}

func (x *ListProjectsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListProjectsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

type ListProjectsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Projects      []*Project             `protobuf:"bytes,1,rep,name=projects,proto3" json:"projects,omitempty"`
	NextPageToken string                 `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	TotalCount    int32                  `protobuf:"varint,3,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListProjectsResponse) Reset() {
	*x = ListProjectsResponse{}
	mi := &file_proto_vibekanban_vibekanban_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListProjectsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListProjectsResponse) ProtoMessage() {}

func (x *ListProjectsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_vibekanban_vibekanban_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListProjectsResponse.ProtoReflect.Descriptor instead.
func (*ListProjectsResponse) Descriptor() ([]byte, []int) {
	return file_proto_vibekanban_vibekanban_proto_rawDescGZIP(), []int{9}
}

func (x *ListProjectsResponse) GetProjects() []*Project {
	if x != nil {
		return x.Projects
	}
	return nil
}

func (x *ListProjectsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

func (x *ListProjectsResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

type CreateProjectRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	GitRepoPath   string                 `protobuf:"bytes,2,opt,name=git_repo_path,json=gitRepoPath,proto3" json:"git_repo_path,omitempty"`
	SetupScript   string                 `protobuf:"bytes,3,opt,name=setup_script,json=setupScript,proto3" json:"setup_script,omitempty"`
	DevScript     string                 `protobuf:"bytes,4,opt,name=dev_script,json=devScript,proto3" json:"dev_script,omitempty"`
	DefaultBranch string                 `protobuf:"bytes,5,opt,name=default_branch,json=defaultBranch,proto3" json:"default_branch,omitempty"`
	Config        map[string]string      `protobuf:"bytes,6,rep,name=config,proto3" json:"config,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateProjectRequest) Reset() {
	*x = CreateProjectRequest{}
	mi := &file_proto_vibekanban_vibekanban_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateProjectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateProjectRequest) ProtoMessage() {}

func (x *CreateProjectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_vibekanban_vibekanban_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateProjectRequest.ProtoReflect.Descriptor instead.
func (*CreateProjectRequest) Descriptor() ([]byte, []int) {
	return file_proto_vibekanban_vibekanban_proto_rawDescGZIP(), []int{10}
}

func (x *CreateProjectRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateProjectRequest) GetGitRepoPath() string {
	if x != nil {
		return x.GitRepoPath
	}
	return ""
}

func (x *CreateProjectRequest) GetSetupScript() string {
	if x != nil {
		return x.SetupScript
	}
	return ""
}

func (x *CreateProjectRequest) GetDevScript() string {
	if x != nil {
		return x.DevScript
	}
	return ""
}

func (x *CreateProjectRequest) GetDefaultBranch() string {
	if x != nil {
		return x.DefaultBranch
	}
	return ""
}

func (x *CreateProjectRequest) GetConfig() map[string]string {
	if x != nil {
		return x.Config
	}
	return nil
}

type CreateProjectResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Project       *Project               `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateProjectResponse) Reset() {
	*x = CreateProjectResponse{}
	mi := &file_proto_vibekanban_vibekanban_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateProjectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateProjectResponse) ProtoMessage() {}

func (x *CreateProjectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_vibekanban_vibekanban_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateProjectResponse.ProtoReflect.Descriptor instead.
func (*CreateProjectResponse) Descriptor() ([]byte, []int) {
	return file_proto_vibekanban_vibekanban_proto_rawDescGZIP(), []int{11}
}

func (x *CreateProjectResponse) GetProject() *Project {
	if x != nil {
		return x.Project
	}
	return nil
}

type UpdateProjectRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	GitRepoPath   string                 `protobuf:"bytes,3,opt,name=git_repo_path,json=gitRepoPath,proto3" json:"git_repo_path,omitempty"`
	SetupScript   string                 `protobuf:"bytes,4,opt,name=setup_script,json=setupScript,proto3" json:"setup_script,omitempty"`
	DevScript     string                 `protobuf:"bytes,5,opt,name=dev_script,json=devScript,proto3" json:"dev_script,omitempty"`
	DefaultBranch string                 `protobuf:"bytes,6,opt,name=default_branch,json=defaultBranch,proto3" json:"default_branch,omitempty"`
	Config        map[string]string      `protobuf:"bytes,7,rep,name=config,proto3" json:"config,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateProjectRequest) Reset() {
	*x = UpdateProjectRequest{}
	mi := &file_proto_vibekanban_vibekanban_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateProjectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProjectRequest) ProtoMessage() {}

func (x *UpdateProjectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_vibekanban_vibekanban_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProjectRequest.ProtoReflect.Descriptor instead.
func (*UpdateProjectRequest) Descriptor() ([]byte, []int) {
	return file_proto_vibekanban_vibekanban_proto_rawDescGZIP(), []int{12}
}

func (x *UpdateProjectRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateProjectRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateProjectRequest) GetGitRepoPath() string {
	if x != nil {
		return x.GitRepoPath
	}
	return ""
}

func (x *UpdateProjectRequest) GetSetupScript() string {
	if x != nil {
		return x.SetupScript
	}
	return ""
}

func (x *UpdateProjectRequest) GetDevScript() string {
	if x != nil {
		return x.DevScript
	}
	return ""
}

func (x *UpdateProjectRequest) GetDefaultBranch() string {
	if x != nil {
		return x.DefaultBranch
	}
	return ""
}

func (x *UpdateProjectRequest) GetConfig() map[string]string {
	if x != nil {
		return x.Config
	}
	return nil
}

type UpdateProjectResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Project       *Project               `protobuf:"bytes,1,opt,name=project,proto3" json:"project,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateProjectResponse) Reset() {
	*x = UpdateProjectResponse{}
	mi := &file_proto_vibekanban_vibekanban_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateProjectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateProjectResponse) ProtoMessage() {}

func (x *UpdateProjectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_vibekanban_vibekanban_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateProjectResponse.ProtoReflect.Descriptor instead.
func (*UpdateProjectResponse) Descriptor() ([]byte, []int) {
	return file_proto_vibekanban_vibekanban_proto_rawDescGZIP(), []int{13}
}

func (x *UpdateProjectResponse) GetProject() *Project {
	if x != nil {
		return x.Project
	}
	return nil
}

type DeleteProjectRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteProjectRequest) Reset() {
	*x = DeleteProjectRequest{}
	mi := &file_proto_vibekanban_vibekanban_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteProjectRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteProjectRequest) ProtoMessage() {}

func (x *DeleteProjectRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_vibekanban_vibekanban_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteProjectRequest.ProtoReflect.Descriptor instead.
func (*DeleteProjectRequest) Descriptor() ([]byte, []int) {
	return file_proto_vibekanban_vibekanban_proto_rawDescGZIP(), []int{14}
}

func (x *DeleteProjectRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// Task operations
type GetTasksRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ProjectId      string                 `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	PageSize       int32                  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageToken      string                 `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	StatusFilter   TaskStatus             `protobuf:"varint,4,opt,name=status_filter,json=statusFilter,proto3,enum=vibekanban.TaskStatus" json:"status_filter,omitempty"`
	PriorityFilter TaskPriority           `protobuf:"varint,5,opt,name=priority_filter,json=priorityFilter,proto3,enum=vibekanban.TaskPriority" json:"priority_filter,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetTasksRequest) Reset() {
	*x = GetTasksRequest{}
	mi := &file_proto_vibekanban_vibekanban_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTasksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTasksRequest) ProtoMessage() {}

func (x *GetTasksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_vibekanban_vibekanban_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTasksRequest.ProtoReflect.Descriptor instead.
func (*GetTasksRequest) Descriptor() ([]byte, []int) {
	return file_proto_vibekanban_vibekanban_proto_rawDescGZIP(), []int{15}
}

func (x *GetTasksRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *GetTasksRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetTasksRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

func (x *GetTasksRequest) GetStatusFilter() TaskStatus {
	if x != nil {
		return x.StatusFilter
	}
	return TaskStatus_TASK_STATUS_UNSPECIFIED
}

func (x *GetTasksRequest) GetPriorityFilter() TaskPriority {
	if x != nil {
		return x.PriorityFilter
	}
	return TaskPriority_TASK_PRIORITY_UNSPECIFIED
}

type GetTasksResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Tasks         []*Task                `protobuf:"bytes,1,rep,name=tasks,proto3" json:"tasks,omitempty"`
	NextPageToken string                 `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	TotalCount    int32                  `protobuf:"varint,3,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTasksResponse) Reset() {
	*x = GetTasksResponse{}
	mi := &file_proto_vibekanban_vibekanban_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTasksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTasksResponse) ProtoMessage() {}

func (x *GetTasksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_vibekanban_vibekanban_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTasksResponse.ProtoReflect.Descriptor instead.
func (*GetTasksResponse) Descriptor() ([]byte, []int) {
	return file_proto_vibekanban_vibekanban_proto_rawDescGZIP(), []int{16}
}

func (x *GetTasksResponse) GetTasks() []*Task {
	if x != nil {
		return x.Tasks
	}
	return nil
}

func (x *GetTasksResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

func (x *GetTasksResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

type CreateTaskRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProjectId     string                 `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Priority      TaskPriority           `protobuf:"varint,4,opt,name=priority,proto3,enum=vibekanban.TaskPriority" json:"priority,omitempty"`
	Labels        []string               `protobuf:"bytes,5,rep,name=labels,proto3" json:"labels,omitempty"`
	Metadata      map[string]string      `protobuf:"bytes,6,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateTaskRequest) Reset() {
	*x = CreateTaskRequest{}
	mi := &file_proto_vibekanban_vibekanban_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTaskRequest) ProtoMessage() {}

func (x *CreateTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_vibekanban_vibekanban_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTaskRequest.ProtoReflect.Descriptor instead.
func (*CreateTaskRequest) Descriptor() ([]byte, []int) {
	return file_proto_vibekanban_vibekanban_proto_rawDescGZIP(), []int{17}
}

func (x *CreateTaskRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *CreateTaskRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *CreateTaskRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreateTaskRequest) GetPriority() TaskPriority {
	if x != nil {
		return x.Priority
	}
	return TaskPriority_TASK_PRIORITY_UNSPECIFIED
}

func (x *CreateTaskRequest) GetLabels() []string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *CreateTaskRequest) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type CreateTaskResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Task          *Task                  `protobuf:"bytes,1,opt,name=task,proto3" json:"task,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateTaskResponse) Reset() {
	*x = CreateTaskResponse{}
	mi := &file_proto_vibekanban_vibekanban_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTaskResponse) ProtoMessage() {}

func (x *CreateTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_vibekanban_vibekanban_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTaskResponse.ProtoReflect.Descriptor instead.
func (*CreateTaskResponse) Descriptor() ([]byte, []int) {
	return file_proto_vibekanban_vibekanban_proto_rawDescGZIP(), []int{18}
}

func (x *CreateTaskResponse) GetTask() *Task {
	if x != nil {
		return x.Task
	}
	return nil
}

type UpdateTaskRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title         string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Status        TaskStatus             `protobuf:"varint,4,opt,name=status,proto3,enum=vibekanban.TaskStatus" json:"status,omitempty"`
	Priority      TaskPriority           `protobuf:"varint,5,opt,name=priority,proto3,enum=vibekanban.TaskPriority" json:"priority,omitempty"`
	Labels        []string               `protobuf:"bytes,6,rep,name=labels,proto3" json:"labels,omitempty"`
	Metadata      map[string]string      `protobuf:"bytes,7,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateTaskRequest) Reset() {
	*x = UpdateTaskRequest{}
	mi := &file_proto_vibekanban_vibekanban_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTaskRequest) ProtoMessage() {}

func (x *UpdateTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_vibekanban_vibekanban_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTaskRequest.ProtoReflect.Descriptor instead.
func (*UpdateTaskRequest) Descriptor() ([]byte, []int) {
	return file_proto_vibekanban_vibekanban_proto_rawDescGZIP(), []int{19}
}

func (x *UpdateTaskRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateTaskRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *UpdateTaskRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *UpdateTaskRequest) GetStatus() TaskStatus {
	if x != nil {
		return x.Status
	}
	return TaskStatus_TASK_STATUS_UNSPECIFIED
}

func (x *UpdateTaskRequest) GetPriority() TaskPriority {
	if x != nil {
		return x.Priority
	}
	return TaskPriority_TASK_PRIORITY_UNSPECIFIED
}

func (x *UpdateTaskRequest) GetLabels() []string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *UpdateTaskRequest) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type UpdateTaskResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Task          *Task                  `protobuf:"bytes,1,opt,name=task,proto3" json:"task,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateTaskResponse) Reset() {
	*x = UpdateTaskResponse{}
	mi := &file_proto_vibekanban_vibekanban_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateTaskResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTaskResponse) ProtoMessage() {}

func (x *UpdateTaskResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_vibekanban_vibekanban_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTaskResponse.ProtoReflect.Descriptor instead.
func (*UpdateTaskResponse) Descriptor() ([]byte, []int) {
	return file_proto_vibekanban_vibekanban_proto_rawDescGZIP(), []int{20}
}

func (x *UpdateTaskResponse) GetTask() *Task {
	if x != nil {
		return x.Task
	}
	return nil
}

type DeleteTaskRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteTaskRequest) Reset() {
	*x = DeleteTaskRequest{}
	mi := &file_proto_vibekanban_vibekanban_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteTaskRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteTaskRequest) ProtoMessage() {}

func (x *DeleteTaskRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_vibekanban_vibekanban_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteTaskRequest.ProtoReflect.Descriptor instead.
func (*DeleteTaskRequest) Descriptor() ([]byte, []int) {
	return file_proto_vibekanban_vibekanban_proto_rawDescGZIP(), []int{21}
}

func (x *DeleteTaskRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// Task attempt operations
type GetTaskAttemptsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TaskId        string                 `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	PageSize      int32                  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageToken     string                 `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTaskAttemptsRequest) Reset() {
	*x = GetTaskAttemptsRequest{}
	mi := &file_proto_vibekanban_vibekanban_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTaskAttemptsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTaskAttemptsRequest) ProtoMessage() {}

func (x *GetTaskAttemptsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_vibekanban_vibekanban_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTaskAttemptsRequest.ProtoReflect.Descriptor instead.
func (*GetTaskAttemptsRequest) Descriptor() ([]byte, []int) {
	return file_proto_vibekanban_vibekanban_proto_rawDescGZIP(), []int{22}
}

func (x *GetTaskAttemptsRequest) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *GetTaskAttemptsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetTaskAttemptsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

type GetTaskAttemptsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Attempts      []*TaskAttempt         `protobuf:"bytes,1,rep,name=attempts,proto3" json:"attempts,omitempty"`
	NextPageToken string                 `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	TotalCount    int32                  `protobuf:"varint,3,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTaskAttemptsResponse) Reset() {
	*x = GetTaskAttemptsResponse{}
	mi := &file_proto_vibekanban_vibekanban_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTaskAttemptsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTaskAttemptsResponse) ProtoMessage() {}

func (x *GetTaskAttemptsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_vibekanban_vibekanban_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTaskAttemptsResponse.ProtoReflect.Descriptor instead.
func (*GetTaskAttemptsResponse) Descriptor() ([]byte, []int) {
	return file_proto_vibekanban_vibekanban_proto_rawDescGZIP(), []int{23}
}

func (x *GetTaskAttemptsResponse) GetAttempts() []*TaskAttempt {
	if x != nil {
		return x.Attempts
	}
	return nil
}

func (x *GetTaskAttemptsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

func (x *GetTaskAttemptsResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

type CreateTaskAttemptRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TaskId        string                 `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	Executor      string                 `protobuf:"bytes,2,opt,name=executor,proto3" json:"executor,omitempty"`
	BaseBranch    string                 `protobuf:"bytes,3,opt,name=base_branch,json=baseBranch,proto3" json:"base_branch,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateTaskAttemptRequest) Reset() {
	*x = CreateTaskAttemptRequest{}
	mi := &file_proto_vibekanban_vibekanban_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTaskAttemptRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTaskAttemptRequest) ProtoMessage() {}

func (x *CreateTaskAttemptRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_vibekanban_vibekanban_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTaskAttemptRequest.ProtoReflect.Descriptor instead.
func (*CreateTaskAttemptRequest) Descriptor() ([]byte, []int) {
	return file_proto_vibekanban_vibekanban_proto_rawDescGZIP(), []int{24}
}

func (x *CreateTaskAttemptRequest) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *CreateTaskAttemptRequest) GetExecutor() string {
	if x != nil {
		return x.Executor
	}
	return ""
}

func (x *CreateTaskAttemptRequest) GetBaseBranch() string {
	if x != nil {
		return x.BaseBranch
	}
	return ""
}

type CreateTaskAttemptResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Attempt       *TaskAttempt           `protobuf:"bytes,1,opt,name=attempt,proto3" json:"attempt,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateTaskAttemptResponse) Reset() {
	*x = CreateTaskAttemptResponse{}
	mi := &file_proto_vibekanban_vibekanban_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateTaskAttemptResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateTaskAttemptResponse) ProtoMessage() {}

func (x *CreateTaskAttemptResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_vibekanban_vibekanban_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateTaskAttemptResponse.ProtoReflect.Descriptor instead.
func (*CreateTaskAttemptResponse) Descriptor() ([]byte, []int) {
	return file_proto_vibekanban_vibekanban_proto_rawDescGZIP(), []int{25}
}

func (x *CreateTaskAttemptResponse) GetAttempt() *TaskAttempt {
	if x != nil {
		return x.Attempt
	}
	return nil
}

type StartTaskAttemptRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AttemptId     string                 `protobuf:"bytes,1,opt,name=attempt_id,json=attemptId,proto3" json:"attempt_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartTaskAttemptRequest) Reset() {
	*x = StartTaskAttemptRequest{}
	mi := &file_proto_vibekanban_vibekanban_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartTaskAttemptRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartTaskAttemptRequest) ProtoMessage() {}

func (x *StartTaskAttemptRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_vibekanban_vibekanban_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartTaskAttemptRequest.ProtoReflect.Descriptor instead.
func (*StartTaskAttemptRequest) Descriptor() ([]byte, []int) {
	return file_proto_vibekanban_vibekanban_proto_rawDescGZIP(), []int{26}
}

func (x *StartTaskAttemptRequest) GetAttemptId() string {
	if x != nil {
		return x.AttemptId
	}
	return ""
}

type StartTaskAttemptResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Attempt       *TaskAttempt           `protobuf:"bytes,1,opt,name=attempt,proto3" json:"attempt,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartTaskAttemptResponse) Reset() {
	*x = StartTaskAttemptResponse{}
	mi := &file_proto_vibekanban_vibekanban_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartTaskAttemptResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartTaskAttemptResponse) ProtoMessage() {}

func (x *StartTaskAttemptResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_vibekanban_vibekanban_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartTaskAttemptResponse.ProtoReflect.Descriptor instead.
func (*StartTaskAttemptResponse) Descriptor() ([]byte, []int) {
	return file_proto_vibekanban_vibekanban_proto_rawDescGZIP(), []int{27}
}

func (x *StartTaskAttemptResponse) GetAttempt() *TaskAttempt {
	if x != nil {
		return x.Attempt
	}
	return nil
}

type GetAttemptDiffRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AttemptId     string                 `protobuf:"bytes,1,opt,name=attempt_id,json=attemptId,proto3" json:"attempt_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAttemptDiffRequest) Reset() {
	*x = GetAttemptDiffRequest{}
	mi := &file_proto_vibekanban_vibekanban_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAttemptDiffRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAttemptDiffRequest) ProtoMessage() {}

func (x *GetAttemptDiffRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_vibekanban_vibekanban_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAttemptDiffRequest.ProtoReflect.Descriptor instead.
func (*GetAttemptDiffRequest) Descriptor() ([]byte, []int) {
	return file_proto_vibekanban_vibekanban_proto_rawDescGZIP(), []int{28}
}

func (x *GetAttemptDiffRequest) GetAttemptId() string {
	if x != nil {
		return x.AttemptId
	}
	return ""
}

type GetAttemptDiffResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Diff          string                 `protobuf:"bytes,1,opt,name=diff,proto3" json:"diff,omitempty"`
	Files         []string               `protobuf:"bytes,2,rep,name=files,proto3" json:"files,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAttemptDiffResponse) Reset() {
	*x = GetAttemptDiffResponse{}
	mi := &file_proto_vibekanban_vibekanban_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAttemptDiffResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAttemptDiffResponse) ProtoMessage() {}

func (x *GetAttemptDiffResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_vibekanban_vibekanban_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAttemptDiffResponse.ProtoReflect.Descriptor instead.
func (*GetAttemptDiffResponse) Descriptor() ([]byte, []int) {
	return file_proto_vibekanban_vibekanban_proto_rawDescGZIP(), []int{29}
}

func (x *GetAttemptDiffResponse) GetDiff() string {
	if x != nil {
		return x.Diff
	}
	return ""
}

func (x *GetAttemptDiffResponse) GetFiles() []string {
	if x != nil {
		return x.Files
	}
	return nil
}

type MergeAttemptRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AttemptId     string                 `protobuf:"bytes,1,opt,name=attempt_id,json=attemptId,proto3" json:"attempt_id,omitempty"`
	CommitMessage string                 `protobuf:"bytes,2,opt,name=commit_message,json=commitMessage,proto3" json:"commit_message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MergeAttemptRequest) Reset() {
	*x = MergeAttemptRequest{}
	mi := &file_proto_vibekanban_vibekanban_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MergeAttemptRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MergeAttemptRequest) ProtoMessage() {}

func (x *MergeAttemptRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_vibekanban_vibekanban_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MergeAttemptRequest.ProtoReflect.Descriptor instead.
func (*MergeAttemptRequest) Descriptor() ([]byte, []int) {
	return file_proto_vibekanban_vibekanban_proto_rawDescGZIP(), []int{30}
}

func (x *MergeAttemptRequest) GetAttemptId() string {
	if x != nil {
		return x.AttemptId
	}
	return ""
}

func (x *MergeAttemptRequest) GetCommitMessage() string {
	if x != nil {
		return x.CommitMessage
	}
	return ""
}

type MergeAttemptResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MergeCommit   string                 `protobuf:"bytes,1,opt,name=merge_commit,json=mergeCommit,proto3" json:"merge_commit,omitempty"`
	PrUrl         string                 `protobuf:"bytes,2,opt,name=pr_url,json=prUrl,proto3" json:"pr_url,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MergeAttemptResponse) Reset() {
	*x = MergeAttemptResponse{}
	mi := &file_proto_vibekanban_vibekanban_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MergeAttemptResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MergeAttemptResponse) ProtoMessage() {}

func (x *MergeAttemptResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_vibekanban_vibekanban_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MergeAttemptResponse.ProtoReflect.Descriptor instead.
func (*MergeAttemptResponse) Descriptor() ([]byte, []int) {
	return file_proto_vibekanban_vibekanban_proto_rawDescGZIP(), []int{31}
}

func (x *MergeAttemptResponse) GetMergeCommit() string {
	if x != nil {
		return x.MergeCommit
	}
	return ""
}

func (x *MergeAttemptResponse) GetPrUrl() string {
	if x != nil {
		return x.PrUrl
	}
	return ""
}

// Git operations
type GetProjectBranchesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProjectId     string                 `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetProjectBranchesRequest) Reset() {
	*x = GetProjectBranchesRequest{}
	mi := &file_proto_vibekanban_vibekanban_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetProjectBranchesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProjectBranchesRequest) ProtoMessage() {}

func (x *GetProjectBranchesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_vibekanban_vibekanban_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProjectBranchesRequest.ProtoReflect.Descriptor instead.
func (*GetProjectBranchesRequest) Descriptor() ([]byte, []int) {
	return file_proto_vibekanban_vibekanban_proto_rawDescGZIP(), []int{32}
}

func (x *GetProjectBranchesRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

type GetProjectBranchesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Branches      []string               `protobuf:"bytes,1,rep,name=branches,proto3" json:"branches,omitempty"`
	CurrentBranch string                 `protobuf:"bytes,2,opt,name=current_branch,json=currentBranch,proto3" json:"current_branch,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetProjectBranchesResponse) Reset() {
	*x = GetProjectBranchesResponse{}
	mi := &file_proto_vibekanban_vibekanban_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetProjectBranchesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProjectBranchesResponse) ProtoMessage() {}

func (x *GetProjectBranchesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_vibekanban_vibekanban_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProjectBranchesResponse.ProtoReflect.Descriptor instead.
func (*GetProjectBranchesResponse) Descriptor() ([]byte, []int) {
	return file_proto_vibekanban_vibekanban_proto_rawDescGZIP(), []int{33}
}

func (x *GetProjectBranchesResponse) GetBranches() []string {
	if x != nil {
		return x.Branches
	}
	return nil
}

func (x *GetProjectBranchesResponse) GetCurrentBranch() string {
	if x != nil {
		return x.CurrentBranch
	}
	return ""
}

type CreateProjectBranchRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProjectId     string                 `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	BranchName    string                 `protobuf:"bytes,2,opt,name=branch_name,json=branchName,proto3" json:"branch_name,omitempty"`
	BaseBranch    string                 `protobuf:"bytes,3,opt,name=base_branch,json=baseBranch,proto3" json:"base_branch,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateProjectBranchRequest) Reset() {
	*x = CreateProjectBranchRequest{}
	mi := &file_proto_vibekanban_vibekanban_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateProjectBranchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateProjectBranchRequest) ProtoMessage() {}

func (x *CreateProjectBranchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_vibekanban_vibekanban_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateProjectBranchRequest.ProtoReflect.Descriptor instead.
func (*CreateProjectBranchRequest) Descriptor() ([]byte, []int) {
	return file_proto_vibekanban_vibekanban_proto_rawDescGZIP(), []int{34}
}

func (x *CreateProjectBranchRequest) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *CreateProjectBranchRequest) GetBranchName() string {
	if x != nil {
		return x.BranchName
	}
	return ""
}

func (x *CreateProjectBranchRequest) GetBaseBranch() string {
	if x != nil {
		return x.BaseBranch
	}
	return ""
}

type CreateProjectBranchResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	BranchName    string                 `protobuf:"bytes,1,opt,name=branch_name,json=branchName,proto3" json:"branch_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateProjectBranchResponse) Reset() {
	*x = CreateProjectBranchResponse{}
	mi := &file_proto_vibekanban_vibekanban_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateProjectBranchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateProjectBranchResponse) ProtoMessage() {}

func (x *CreateProjectBranchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_vibekanban_vibekanban_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateProjectBranchResponse.ProtoReflect.Descriptor instead.
func (*CreateProjectBranchResponse) Descriptor() ([]byte, []int) {
	return file_proto_vibekanban_vibekanban_proto_rawDescGZIP(), []int{35}
}

func (x *CreateProjectBranchResponse) GetBranchName() string {
	if x != nil {
		return x.BranchName
	}
	return ""
}

// Process operations
type GetProcessesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AttemptId     string                 `protobuf:"bytes,1,opt,name=attempt_id,json=attemptId,proto3" json:"attempt_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetProcessesRequest) Reset() {
	*x = GetProcessesRequest{}
	mi := &file_proto_vibekanban_vibekanban_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetProcessesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProcessesRequest) ProtoMessage() {}

func (x *GetProcessesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_vibekanban_vibekanban_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProcessesRequest.ProtoReflect.Descriptor instead.
func (*GetProcessesRequest) Descriptor() ([]byte, []int) {
	return file_proto_vibekanban_vibekanban_proto_rawDescGZIP(), []int{36}
}

func (x *GetProcessesRequest) GetAttemptId() string {
	if x != nil {
		return x.AttemptId
	}
	return ""
}

type GetProcessesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Processes     []*ExecutionProcess    `protobuf:"bytes,1,rep,name=processes,proto3" json:"processes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetProcessesResponse) Reset() {
	*x = GetProcessesResponse{}
	mi := &file_proto_vibekanban_vibekanban_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetProcessesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProcessesResponse) ProtoMessage() {}

func (x *GetProcessesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_vibekanban_vibekanban_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProcessesResponse.ProtoReflect.Descriptor instead.
func (*GetProcessesResponse) Descriptor() ([]byte, []int) {
	return file_proto_vibekanban_vibekanban_proto_rawDescGZIP(), []int{37}
}

func (x *GetProcessesResponse) GetProcesses() []*ExecutionProcess {
	if x != nil {
		return x.Processes
	}
	return nil
}

type KillProcessRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProcessId     string                 `protobuf:"bytes,1,opt,name=process_id,json=processId,proto3" json:"process_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KillProcessRequest) Reset() {
	*x = KillProcessRequest{}
	mi := &file_proto_vibekanban_vibekanban_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KillProcessRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KillProcessRequest) ProtoMessage() {}

func (x *KillProcessRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_vibekanban_vibekanban_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KillProcessRequest.ProtoReflect.Descriptor instead.
func (*KillProcessRequest) Descriptor() ([]byte, []int) {
	return file_proto_vibekanban_vibekanban_proto_rawDescGZIP(), []int{38}
}

func (x *KillProcessRequest) GetProcessId() string {
	if x != nil {
		return x.ProcessId
	}
	return ""
}

// Debug operations
type GetAttemptStatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AttemptId     string                 `protobuf:"bytes,1,opt,name=attempt_id,json=attemptId,proto3" json:"attempt_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAttemptStatusRequest) Reset() {
	*x = GetAttemptStatusRequest{}
	mi := &file_proto_vibekanban_vibekanban_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAttemptStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAttemptStatusRequest) ProtoMessage() {}

func (x *GetAttemptStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_vibekanban_vibekanban_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAttemptStatusRequest.ProtoReflect.Descriptor instead.
func (*GetAttemptStatusRequest) Descriptor() ([]byte, []int) {
	return file_proto_vibekanban_vibekanban_proto_rawDescGZIP(), []int{39}
}

func (x *GetAttemptStatusRequest) GetAttemptId() string {
	if x != nil {
		return x.AttemptId
	}
	return ""
}

type GetAttemptStatusResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Attempt       *TaskAttempt           `protobuf:"bytes,1,opt,name=attempt,proto3" json:"attempt,omitempty"`
	Processes     []*ExecutionProcess    `protobuf:"bytes,2,rep,name=processes,proto3" json:"processes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetAttemptStatusResponse) Reset() {
	*x = GetAttemptStatusResponse{}
	mi := &file_proto_vibekanban_vibekanban_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAttemptStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAttemptStatusResponse) ProtoMessage() {}

func (x *GetAttemptStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_vibekanban_vibekanban_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAttemptStatusResponse.ProtoReflect.Descriptor instead.
func (*GetAttemptStatusResponse) Descriptor() ([]byte, []int) {
	return file_proto_vibekanban_vibekanban_proto_rawDescGZIP(), []int{40}
}

func (x *GetAttemptStatusResponse) GetAttempt() *TaskAttempt {
	if x != nil {
		return x.Attempt
	}
	return nil
}

func (x *GetAttemptStatusResponse) GetProcesses() []*ExecutionProcess {
	if x != nil {
		return x.Processes
	}
	return nil
}

type GetDebugProcessesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDebugProcessesRequest) Reset() {
	*x = GetDebugProcessesRequest{}
	mi := &file_proto_vibekanban_vibekanban_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDebugProcessesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDebugProcessesRequest) ProtoMessage() {}

func (x *GetDebugProcessesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_vibekanban_vibekanban_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDebugProcessesRequest.ProtoReflect.Descriptor instead.
func (*GetDebugProcessesRequest) Descriptor() ([]byte, []int) {
	return file_proto_vibekanban_vibekanban_proto_rawDescGZIP(), []int{41}
}

type GetDebugProcessesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Processes     []*ExecutionProcess    `protobuf:"bytes,1,rep,name=processes,proto3" json:"processes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDebugProcessesResponse) Reset() {
	*x = GetDebugProcessesResponse{}
	mi := &file_proto_vibekanban_vibekanban_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDebugProcessesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDebugProcessesResponse) ProtoMessage() {}

func (x *GetDebugProcessesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_vibekanban_vibekanban_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDebugProcessesResponse.ProtoReflect.Descriptor instead.
func (*GetDebugProcessesResponse) Descriptor() ([]byte, []int) {
	return file_proto_vibekanban_vibekanban_proto_rawDescGZIP(), []int{42}
}

func (x *GetDebugProcessesResponse) GetProcesses() []*ExecutionProcess {
	if x != nil {
		return x.Processes
	}
	return nil
}

var File_proto_vibekanban_vibekanban_proto protoreflect.FileDescriptor

const file_proto_vibekanban_vibekanban_proto_rawDesc = "" +
	"\n" +
	"!proto/vibekanban/vibekanban.proto\x12\n" +
	"vibekanban\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1bgoogle/protobuf/empty.proto\"\xe5\x03\n" +
	"\aProject\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\"\n" +
	"\rgit_repo_path\x18\x03 \x01(\tR\vgitRepoPath\x12!\n" +
	"\fsetup_script\x18\x04 \x01(\tR\vsetupScript\x12\x1d\n" +
	"\n" +
	"dev_script\x18\x05 \x01(\tR\tdevScript\x12%\n" +
	"\x0edefault_branch\x18\x06 \x01(\tR\rdefaultBranch\x12\x17\n" +
	"\auser_id\x18\a \x01(\tR\x06userId\x12&\n" +
	"\x05tasks\x18\b \x03(\v2\x10.vibekanban.TaskR\x05tasks\x127\n" +
	"\x06config\x18\t \x03(\v2\x1f.vibekanban.Project.ConfigEntryR\x06config\x129\n" +
	"\n" +
	"created_at\x18\n" +
	" \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\v \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x1a9\n" +
	"\vConfigEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xa8\x04\n" +
	"\x04Task\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12.\n" +
	"\x06status\x18\x04 \x01(\x0e2\x16.vibekanban.TaskStatusR\x06status\x124\n" +
	"\bpriority\x18\x05 \x01(\x0e2\x18.vibekanban.TaskPriorityR\bpriority\x12\x1d\n" +
	"\n" +
	"project_id\x18\x06 \x01(\tR\tprojectId\x12\x17\n" +
	"\auser_id\x18\a \x01(\tR\x06userId\x123\n" +
	"\battempts\x18\b \x03(\v2\x17.vibekanban.TaskAttemptR\battempts\x12\x16\n" +
	"\x06labels\x18\t \x03(\tR\x06labels\x12:\n" +
	"\bmetadata\x18\n" +
	" \x03(\v2\x1e.vibekanban.Task.MetadataEntryR\bmetadata\x129\n" +
	"\n" +
	"created_at\x18\v \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\f \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x93\x05\n" +
	"\vTaskAttempt\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x17\n" +
	"\atask_id\x18\x02 \x01(\tR\x06taskId\x12#\n" +
	"\rworktree_path\x18\x03 \x01(\tR\fworktreePath\x12\x16\n" +
	"\x06branch\x18\x04 \x01(\tR\x06branch\x12\x1f\n" +
	"\vbase_branch\x18\x05 \x01(\tR\n" +
	"baseBranch\x12!\n" +
	"\fmerge_commit\x18\x06 \x01(\tR\vmergeCommit\x12\x1a\n" +
	"\bexecutor\x18\a \x01(\tR\bexecutor\x121\n" +
	"\x06status\x18\b \x01(\x0e2\x19.vibekanban.AttemptStatusR\x06status\x12\x15\n" +
	"\x06pr_url\x18\t \x01(\tR\x05prUrl\x129\n" +
	"\n" +
	"start_time\x18\n" +
	" \x01(\v2\x1a.google.protobuf.TimestampR\tstartTime\x125\n" +
	"\bend_time\x18\v \x01(\v2\x1a.google.protobuf.TimestampR\aendTime\x12\x17\n" +
	"\auser_id\x18\f \x01(\tR\x06userId\x12:\n" +
	"\tprocesses\x18\r \x03(\v2\x1c.vibekanban.ExecutionProcessR\tprocesses\x127\n" +
	"\bsessions\x18\x0e \x03(\v2\x1b.vibekanban.ExecutorSessionR\bsessions\x129\n" +
	"\n" +
	"created_at\x18\x0f \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\x10 \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\"\xba\x05\n" +
	"\x10ExecutionProcess\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1d\n" +
	"\n" +
	"attempt_id\x18\x02 \x01(\tR\tattemptId\x12+\n" +
	"\x04type\x18\x03 \x01(\x0e2\x17.vibekanban.ProcessTypeR\x04type\x121\n" +
	"\x06status\x18\x04 \x01(\x0e2\x19.vibekanban.ProcessStatusR\x06status\x12\x18\n" +
	"\acommand\x18\x05 \x01(\tR\acommand\x12\x1d\n" +
	"\n" +
	"process_id\x18\x06 \x01(\x05R\tprocessId\x129\n" +
	"\n" +
	"start_time\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\tstartTime\x125\n" +
	"\bend_time\x18\b \x01(\v2\x1a.google.protobuf.TimestampR\aendTime\x12\x16\n" +
	"\x06stdout\x18\t \x01(\tR\x06stdout\x12\x16\n" +
	"\x06stderr\x18\n" +
	" \x01(\tR\x06stderr\x12\x1b\n" +
	"\texit_code\x18\v \x01(\x05R\bexitCode\x12\x12\n" +
	"\x04port\x18\f \x01(\x05R\x04port\x12\x10\n" +
	"\x03url\x18\r \x01(\tR\x03url\x12F\n" +
	"\bmetadata\x18\x0e \x03(\v2*.vibekanban.ExecutionProcess.MetadataEntryR\bmetadata\x129\n" +
	"\n" +
	"created_at\x18\x0f \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\x10 \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xe2\x03\n" +
	"\x0fExecutorSession\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1d\n" +
	"\n" +
	"attempt_id\x18\x02 \x01(\tR\tattemptId\x12\x1d\n" +
	"\n" +
	"session_id\x18\x03 \x01(\tR\tsessionId\x12\x1a\n" +
	"\bexecutor\x18\x04 \x01(\tR\bexecutor\x12\x16\n" +
	"\x06prompt\x18\x05 \x01(\tR\x06prompt\x12\x18\n" +
	"\asummary\x18\x06 \x01(\tR\asummary\x129\n" +
	"\bmessages\x18\a \x03(\v2\x1d.vibekanban.ConversationEntryR\bmessages\x12E\n" +
	"\bmetadata\x18\b \x03(\v2).vibekanban.ExecutorSession.MetadataEntryR\bmetadata\x129\n" +
	"\n" +
	"created_at\x18\t \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\n" +
	" \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x81\x02\n" +
	"\x11ConversationEntry\x12\x12\n" +
	"\x04type\x18\x01 \x01(\tR\x04type\x12\x18\n" +
	"\acontent\x18\x02 \x01(\tR\acontent\x12G\n" +
	"\bmetadata\x18\x03 \x03(\v2+.vibekanban.ConversationEntry.MetadataEntryR\bmetadata\x128\n" +
	"\ttimestamp\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"#\n" +
	"\x11GetProjectRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"C\n" +
	"\x12GetProjectResponse\x12-\n" +
	"\aproject\x18\x01 \x01(\v2\x13.vibekanban.ProjectR\aproject\"Q\n" +
	"\x13ListProjectsRequest\x12\x1b\n" +
	"\tpage_size\x18\x01 \x01(\x05R\bpageSize\x12\x1d\n" +
	"\n" +
	"page_token\x18\x02 \x01(\tR\tpageToken\"\x90\x01\n" +
	"\x14ListProjectsResponse\x12/\n" +
	"\bprojects\x18\x01 \x03(\v2\x13.vibekanban.ProjectR\bprojects\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\x12\x1f\n" +
	"\vtotal_count\x18\x03 \x01(\x05R\n" +
	"totalCount\"\xb8\x02\n" +
	"\x14CreateProjectRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\"\n" +
	"\rgit_repo_path\x18\x02 \x01(\tR\vgitRepoPath\x12!\n" +
	"\fsetup_script\x18\x03 \x01(\tR\vsetupScript\x12\x1d\n" +
	"\n" +
	"dev_script\x18\x04 \x01(\tR\tdevScript\x12%\n" +
	"\x0edefault_branch\x18\x05 \x01(\tR\rdefaultBranch\x12D\n" +
	"\x06config\x18\x06 \x03(\v2,.vibekanban.CreateProjectRequest.ConfigEntryR\x06config\x1a9\n" +
	"\vConfigEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"F\n" +
	"\x15CreateProjectResponse\x12-\n" +
	"\aproject\x18\x01 \x01(\v2\x13.vibekanban.ProjectR\aproject\"\xc8\x02\n" +
	"\x14UpdateProjectRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\"\n" +
	"\rgit_repo_path\x18\x03 \x01(\tR\vgitRepoPath\x12!\n" +
	"\fsetup_script\x18\x04 \x01(\tR\vsetupScript\x12\x1d\n" +
	"\n" +
	"dev_script\x18\x05 \x01(\tR\tdevScript\x12%\n" +
	"\x0edefault_branch\x18\x06 \x01(\tR\rdefaultBranch\x12D\n" +
	"\x06config\x18\a \x03(\v2,.vibekanban.UpdateProjectRequest.ConfigEntryR\x06config\x1a9\n" +
	"\vConfigEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"F\n" +
	"\x15UpdateProjectResponse\x12-\n" +
	"\aproject\x18\x01 \x01(\v2\x13.vibekanban.ProjectR\aproject\"&\n" +
	"\x14DeleteProjectRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"\xec\x01\n" +
	"\x0fGetTasksRequest\x12\x1d\n" +
	"\n" +
	"project_id\x18\x01 \x01(\tR\tprojectId\x12\x1b\n" +
	"\tpage_size\x18\x02 \x01(\x05R\bpageSize\x12\x1d\n" +
	"\n" +
	"page_token\x18\x03 \x01(\tR\tpageToken\x12;\n" +
	"\rstatus_filter\x18\x04 \x01(\x0e2\x16.vibekanban.TaskStatusR\fstatusFilter\x12A\n" +
	"\x0fpriority_filter\x18\x05 \x01(\x0e2\x18.vibekanban.TaskPriorityR\x0epriorityFilter\"\x83\x01\n" +
	"\x10GetTasksResponse\x12&\n" +
	"\x05tasks\x18\x01 \x03(\v2\x10.vibekanban.TaskR\x05tasks\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\x12\x1f\n" +
	"\vtotal_count\x18\x03 \x01(\x05R\n" +
	"totalCount\"\xbe\x02\n" +
	"\x11CreateTaskRequest\x12\x1d\n" +
	"\n" +
	"project_id\x18\x01 \x01(\tR\tprojectId\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x124\n" +
	"\bpriority\x18\x04 \x01(\x0e2\x18.vibekanban.TaskPriorityR\bpriority\x12\x16\n" +
	"\x06labels\x18\x05 \x03(\tR\x06labels\x12G\n" +
	"\bmetadata\x18\x06 \x03(\v2+.vibekanban.CreateTaskRequest.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\":\n" +
	"\x12CreateTaskResponse\x12$\n" +
	"\x04task\x18\x01 \x01(\v2\x10.vibekanban.TaskR\x04task\"\xdf\x02\n" +
	"\x11UpdateTaskRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12.\n" +
	"\x06status\x18\x04 \x01(\x0e2\x16.vibekanban.TaskStatusR\x06status\x124\n" +
	"\bpriority\x18\x05 \x01(\x0e2\x18.vibekanban.TaskPriorityR\bpriority\x12\x16\n" +
	"\x06labels\x18\x06 \x03(\tR\x06labels\x12G\n" +
	"\bmetadata\x18\a \x03(\v2+.vibekanban.UpdateTaskRequest.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\":\n" +
	"\x12UpdateTaskResponse\x12$\n" +
	"\x04task\x18\x01 \x01(\v2\x10.vibekanban.TaskR\x04task\"#\n" +
	"\x11DeleteTaskRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"m\n" +
	"\x16GetTaskAttemptsRequest\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\tR\x06taskId\x12\x1b\n" +
	"\tpage_size\x18\x02 \x01(\x05R\bpageSize\x12\x1d\n" +
	"\n" +
	"page_token\x18\x03 \x01(\tR\tpageToken\"\x97\x01\n" +
	"\x17GetTaskAttemptsResponse\x123\n" +
	"\battempts\x18\x01 \x03(\v2\x17.vibekanban.TaskAttemptR\battempts\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\x12\x1f\n" +
	"\vtotal_count\x18\x03 \x01(\x05R\n" +
	"totalCount\"p\n" +
	"\x18CreateTaskAttemptRequest\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\tR\x06taskId\x12\x1a\n" +
	"\bexecutor\x18\x02 \x01(\tR\bexecutor\x12\x1f\n" +
	"\vbase_branch\x18\x03 \x01(\tR\n" +
	"baseBranch\"N\n" +
	"\x19CreateTaskAttemptResponse\x121\n" +
	"\aattempt\x18\x01 \x01(\v2\x17.vibekanban.TaskAttemptR\aattempt\"8\n" +
	"\x17StartTaskAttemptRequest\x12\x1d\n" +
	"\n" +
	"attempt_id\x18\x01 \x01(\tR\tattemptId\"M\n" +
	"\x18StartTaskAttemptResponse\x121\n" +
	"\aattempt\x18\x01 \x01(\v2\x17.vibekanban.TaskAttemptR\aattempt\"6\n" +
	"\x15GetAttemptDiffRequest\x12\x1d\n" +
	"\n" +
	"attempt_id\x18\x01 \x01(\tR\tattemptId\"B\n" +
	"\x16GetAttemptDiffResponse\x12\x12\n" +
	"\x04diff\x18\x01 \x01(\tR\x04diff\x12\x14\n" +
	"\x05files\x18\x02 \x03(\tR\x05files\"[\n" +
	"\x13MergeAttemptRequest\x12\x1d\n" +
	"\n" +
	"attempt_id\x18\x01 \x01(\tR\tattemptId\x12%\n" +
	"\x0ecommit_message\x18\x02 \x01(\tR\rcommitMessage\"P\n" +
	"\x14MergeAttemptResponse\x12!\n" +
	"\fmerge_commit\x18\x01 \x01(\tR\vmergeCommit\x12\x15\n" +
	"\x06pr_url\x18\x02 \x01(\tR\x05prUrl\":\n" +
	"\x19GetProjectBranchesRequest\x12\x1d\n" +
	"\n" +
	"project_id\x18\x01 \x01(\tR\tprojectId\"_\n" +
	"\x1aGetProjectBranchesResponse\x12\x1a\n" +
	"\bbranches\x18\x01 \x03(\tR\bbranches\x12%\n" +
	"\x0ecurrent_branch\x18\x02 \x01(\tR\rcurrentBranch\"}\n" +
	"\x1aCreateProjectBranchRequest\x12\x1d\n" +
	"\n" +
	"project_id\x18\x01 \x01(\tR\tprojectId\x12\x1f\n" +
	"\vbranch_name\x18\x02 \x01(\tR\n" +
	"branchName\x12\x1f\n" +
	"\vbase_branch\x18\x03 \x01(\tR\n" +
	"baseBranch\">\n" +
	"\x1bCreateProjectBranchResponse\x12\x1f\n" +
	"\vbranch_name\x18\x01 \x01(\tR\n" +
	"branchName\"4\n" +
	"\x13GetProcessesRequest\x12\x1d\n" +
	"\n" +
	"attempt_id\x18\x01 \x01(\tR\tattemptId\"R\n" +
	"\x14GetProcessesResponse\x12:\n" +
	"\tprocesses\x18\x01 \x03(\v2\x1c.vibekanban.ExecutionProcessR\tprocesses\"3\n" +
	"\x12KillProcessRequest\x12\x1d\n" +
	"\n" +
	"process_id\x18\x01 \x01(\tR\tprocessId\"8\n" +
	"\x17GetAttemptStatusRequest\x12\x1d\n" +
	"\n" +
	"attempt_id\x18\x01 \x01(\tR\tattemptId\"\x89\x01\n" +
	"\x18GetAttemptStatusResponse\x121\n" +
	"\aattempt\x18\x01 \x01(\v2\x17.vibekanban.TaskAttemptR\aattempt\x12:\n" +
	"\tprocesses\x18\x02 \x03(\v2\x1c.vibekanban.ExecutionProcessR\tprocesses\"\x1a\n" +
	"\x18GetDebugProcessesRequest\"W\n" +
	"\x19GetDebugProcessesResponse\x12:\n" +
	"\tprocesses\x18\x01 \x03(\v2\x1c.vibekanban.ExecutionProcessR\tprocesses*\xa8\x01\n" +
	"\n" +
	"TaskStatus\x12\x1b\n" +
	"\x17TASK_STATUS_UNSPECIFIED\x10\x00\x12\x14\n" +
	"\x10TASK_STATUS_TODO\x10\x01\x12\x1b\n" +
	"\x17TASK_STATUS_IN_PROGRESS\x10\x02\x12\x19\n" +
	"\x15TASK_STATUS_IN_REVIEW\x10\x03\x12\x14\n" +
	"\x10TASK_STATUS_DONE\x10\x04\x12\x19\n" +
	"\x15TASK_STATUS_CANCELLED\x10\x05*v\n" +
	"\fTaskPriority\x12\x1d\n" +
	"\x19TASK_PRIORITY_UNSPECIFIED\x10\x00\x12\x15\n" +
	"\x11TASK_PRIORITY_LOW\x10\x01\x12\x18\n" +
	"\x14TASK_PRIORITY_MEDIUM\x10\x02\x12\x16\n" +
	"\x12TASK_PRIORITY_HIGH\x10\x03*\xa0\x01\n" +
	"\rAttemptStatus\x12\x1e\n" +
	"\x1aATTEMPT_STATUS_UNSPECIFIED\x10\x00\x12\x1a\n" +
	"\x16ATTEMPT_STATUS_PENDING\x10\x01\x12\x1a\n" +
	"\x16ATTEMPT_STATUS_RUNNING\x10\x02\x12\x1c\n" +
	"\x18ATTEMPT_STATUS_COMPLETED\x10\x03\x12\x19\n" +
	"\x15ATTEMPT_STATUS_FAILED\x10\x04*\x86\x01\n" +
	"\vProcessType\x12\x1c\n" +
	"\x18PROCESS_TYPE_UNSPECIFIED\x10\x00\x12\x1d\n" +
	"\x19PROCESS_TYPE_SETUP_SCRIPT\x10\x01\x12\x1d\n" +
	"\x19PROCESS_TYPE_CODING_AGENT\x10\x02\x12\x1b\n" +
	"\x17PROCESS_TYPE_DEV_SERVER\x10\x03*\xbb\x01\n" +
	"\rProcessStatus\x12\x1e\n" +
	"\x1aPROCESS_STATUS_UNSPECIFIED\x10\x00\x12\x1a\n" +
	"\x16PROCESS_STATUS_PENDING\x10\x01\x12\x1a\n" +
	"\x16PROCESS_STATUS_RUNNING\x10\x02\x12\x1c\n" +
	"\x18PROCESS_STATUS_COMPLETED\x10\x03\x12\x19\n" +
	"\x15PROCESS_STATUS_FAILED\x10\x04\x12\x19\n" +
	"\x15PROCESS_STATUS_KILLED\x10\x052\xc1\r\n" +
	"\x11VibeKanbanService\x12K\n" +
	"\n" +
	"GetProject\x12\x1d.vibekanban.GetProjectRequest\x1a\x1e.vibekanban.GetProjectResponse\x12Q\n" +
	"\fListProjects\x12\x1f.vibekanban.ListProjectsRequest\x1a .vibekanban.ListProjectsResponse\x12T\n" +
	"\rCreateProject\x12 .vibekanban.CreateProjectRequest\x1a!.vibekanban.CreateProjectResponse\x12T\n" +
	"\rUpdateProject\x12 .vibekanban.UpdateProjectRequest\x1a!.vibekanban.UpdateProjectResponse\x12I\n" +
	"\rDeleteProject\x12 .vibekanban.DeleteProjectRequest\x1a\x16.google.protobuf.Empty\x12E\n" +
	"\bGetTasks\x12\x1b.vibekanban.GetTasksRequest\x1a\x1c.vibekanban.GetTasksResponse\x12K\n" +
	"\n" +
	"CreateTask\x12\x1d.vibekanban.CreateTaskRequest\x1a\x1e.vibekanban.CreateTaskResponse\x12K\n" +
	"\n" +
	"UpdateTask\x12\x1d.vibekanban.UpdateTaskRequest\x1a\x1e.vibekanban.UpdateTaskResponse\x12C\n" +
	"\n" +
	"DeleteTask\x12\x1d.vibekanban.DeleteTaskRequest\x1a\x16.google.protobuf.Empty\x12Z\n" +
	"\x0fGetTaskAttempts\x12\".vibekanban.GetTaskAttemptsRequest\x1a#.vibekanban.GetTaskAttemptsResponse\x12`\n" +
	"\x11CreateTaskAttempt\x12$.vibekanban.CreateTaskAttemptRequest\x1a%.vibekanban.CreateTaskAttemptResponse\x12]\n" +
	"\x10StartTaskAttempt\x12#.vibekanban.StartTaskAttemptRequest\x1a$.vibekanban.StartTaskAttemptResponse\x12W\n" +
	"\x0eGetAttemptDiff\x12!.vibekanban.GetAttemptDiffRequest\x1a\".vibekanban.GetAttemptDiffResponse\x12Q\n" +
	"\fMergeAttempt\x12\x1f.vibekanban.MergeAttemptRequest\x1a .vibekanban.MergeAttemptResponse\x12c\n" +
	"\x12GetProjectBranches\x12%.vibekanban.GetProjectBranchesRequest\x1a&.vibekanban.GetProjectBranchesResponse\x12f\n" +
	"\x13CreateProjectBranch\x12&.vibekanban.CreateProjectBranchRequest\x1a'.vibekanban.CreateProjectBranchResponse\x12Q\n" +
	"\fGetProcesses\x12\x1f.vibekanban.GetProcessesRequest\x1a .vibekanban.GetProcessesResponse\x12E\n" +
	"\vKillProcess\x12\x1e.vibekanban.KillProcessRequest\x1a\x16.google.protobuf.Empty\x12]\n" +
	"\x10GetAttemptStatus\x12#.vibekanban.GetAttemptStatusRequest\x1a$.vibekanban.GetAttemptStatusResponse\x12`\n" +
	"\x11GetDebugProcesses\x12$.vibekanban.GetDebugProcessesRequest\x1a%.vibekanban.GetDebugProcessesResponseB\x9b\x01\n" +
	"\x0ecom.vibekanbanB\x0fVibekanbanProtoP\x01Z0github.com/breadchris/share/gen/proto/vibekanban\xa2\x02\x03VXX\xaa\x02\n" +
	"Vibekanban\xca\x02\n" +
	"Vibekanban\xe2\x02\x16Vibekanban\\GPBMetadata\xea\x02\n" +
	"Vibekanbanb\x06proto3"

var (
	file_proto_vibekanban_vibekanban_proto_rawDescOnce sync.Once
	file_proto_vibekanban_vibekanban_proto_rawDescData []byte
)

func file_proto_vibekanban_vibekanban_proto_rawDescGZIP() []byte {
	file_proto_vibekanban_vibekanban_proto_rawDescOnce.Do(func() {
		file_proto_vibekanban_vibekanban_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_vibekanban_vibekanban_proto_rawDesc), len(file_proto_vibekanban_vibekanban_proto_rawDesc)))
	})
	return file_proto_vibekanban_vibekanban_proto_rawDescData
}

var file_proto_vibekanban_vibekanban_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_proto_vibekanban_vibekanban_proto_msgTypes = make([]protoimpl.MessageInfo, 52)
var file_proto_vibekanban_vibekanban_proto_goTypes = []any{
	(TaskStatus)(0),                     // 0: vibekanban.TaskStatus
	(TaskPriority)(0),                   // 1: vibekanban.TaskPriority
	(AttemptStatus)(0),                  // 2: vibekanban.AttemptStatus
	(ProcessType)(0),                    // 3: vibekanban.ProcessType
	(ProcessStatus)(0),                  // 4: vibekanban.ProcessStatus
	(*Project)(nil),                     // 5: vibekanban.Project
	(*Task)(nil),                        // 6: vibekanban.Task
	(*TaskAttempt)(nil),                 // 7: vibekanban.TaskAttempt
	(*ExecutionProcess)(nil),            // 8: vibekanban.ExecutionProcess
	(*ExecutorSession)(nil),             // 9: vibekanban.ExecutorSession
	(*ConversationEntry)(nil),           // 10: vibekanban.ConversationEntry
	(*GetProjectRequest)(nil),           // 11: vibekanban.GetProjectRequest
	(*GetProjectResponse)(nil),          // 12: vibekanban.GetProjectResponse
	(*ListProjectsRequest)(nil),         // 13: vibekanban.ListProjectsRequest
	(*ListProjectsResponse)(nil),        // 14: vibekanban.ListProjectsResponse
	(*CreateProjectRequest)(nil),        // 15: vibekanban.CreateProjectRequest
	(*CreateProjectResponse)(nil),       // 16: vibekanban.CreateProjectResponse
	(*UpdateProjectRequest)(nil),        // 17: vibekanban.UpdateProjectRequest
	(*UpdateProjectResponse)(nil),       // 18: vibekanban.UpdateProjectResponse
	(*DeleteProjectRequest)(nil),        // 19: vibekanban.DeleteProjectRequest
	(*GetTasksRequest)(nil),             // 20: vibekanban.GetTasksRequest
	(*GetTasksResponse)(nil),            // 21: vibekanban.GetTasksResponse
	(*CreateTaskRequest)(nil),           // 22: vibekanban.CreateTaskRequest
	(*CreateTaskResponse)(nil),          // 23: vibekanban.CreateTaskResponse
	(*UpdateTaskRequest)(nil),           // 24: vibekanban.UpdateTaskRequest
	(*UpdateTaskResponse)(nil),          // 25: vibekanban.UpdateTaskResponse
	(*DeleteTaskRequest)(nil),           // 26: vibekanban.DeleteTaskRequest
	(*GetTaskAttemptsRequest)(nil),      // 27: vibekanban.GetTaskAttemptsRequest
	(*GetTaskAttemptsResponse)(nil),     // 28: vibekanban.GetTaskAttemptsResponse
	(*CreateTaskAttemptRequest)(nil),    // 29: vibekanban.CreateTaskAttemptRequest
	(*CreateTaskAttemptResponse)(nil),   // 30: vibekanban.CreateTaskAttemptResponse
	(*StartTaskAttemptRequest)(nil),     // 31: vibekanban.StartTaskAttemptRequest
	(*StartTaskAttemptResponse)(nil),    // 32: vibekanban.StartTaskAttemptResponse
	(*GetAttemptDiffRequest)(nil),       // 33: vibekanban.GetAttemptDiffRequest
	(*GetAttemptDiffResponse)(nil),      // 34: vibekanban.GetAttemptDiffResponse
	(*MergeAttemptRequest)(nil),         // 35: vibekanban.MergeAttemptRequest
	(*MergeAttemptResponse)(nil),        // 36: vibekanban.MergeAttemptResponse
	(*GetProjectBranchesRequest)(nil),   // 37: vibekanban.GetProjectBranchesRequest
	(*GetProjectBranchesResponse)(nil),  // 38: vibekanban.GetProjectBranchesResponse
	(*CreateProjectBranchRequest)(nil),  // 39: vibekanban.CreateProjectBranchRequest
	(*CreateProjectBranchResponse)(nil), // 40: vibekanban.CreateProjectBranchResponse
	(*GetProcessesRequest)(nil),         // 41: vibekanban.GetProcessesRequest
	(*GetProcessesResponse)(nil),        // 42: vibekanban.GetProcessesResponse
	(*KillProcessRequest)(nil),          // 43: vibekanban.KillProcessRequest
	(*GetAttemptStatusRequest)(nil),     // 44: vibekanban.GetAttemptStatusRequest
	(*GetAttemptStatusResponse)(nil),    // 45: vibekanban.GetAttemptStatusResponse
	(*GetDebugProcessesRequest)(nil),    // 46: vibekanban.GetDebugProcessesRequest
	(*GetDebugProcessesResponse)(nil),   // 47: vibekanban.GetDebugProcessesResponse
	nil,                                 // 48: vibekanban.Project.ConfigEntry
	nil,                                 // 49: vibekanban.Task.MetadataEntry
	nil,                                 // 50: vibekanban.ExecutionProcess.MetadataEntry
	nil,                                 // 51: vibekanban.ExecutorSession.MetadataEntry
	nil,                                 // 52: vibekanban.ConversationEntry.MetadataEntry
	nil,                                 // 53: vibekanban.CreateProjectRequest.ConfigEntry
	nil,                                 // 54: vibekanban.UpdateProjectRequest.ConfigEntry
	nil,                                 // 55: vibekanban.CreateTaskRequest.MetadataEntry
	nil,                                 // 56: vibekanban.UpdateTaskRequest.MetadataEntry
	(*timestamppb.Timestamp)(nil),       // 57: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),               // 58: google.protobuf.Empty
}
var file_proto_vibekanban_vibekanban_proto_depIdxs = []int32{
	6,  // 0: vibekanban.Project.tasks:type_name -> vibekanban.Task
	48, // 1: vibekanban.Project.config:type_name -> vibekanban.Project.ConfigEntry
	57, // 2: vibekanban.Project.created_at:type_name -> google.protobuf.Timestamp
	57, // 3: vibekanban.Project.updated_at:type_name -> google.protobuf.Timestamp
	0,  // 4: vibekanban.Task.status:type_name -> vibekanban.TaskStatus
	1,  // 5: vibekanban.Task.priority:type_name -> vibekanban.TaskPriority
	7,  // 6: vibekanban.Task.attempts:type_name -> vibekanban.TaskAttempt
	49, // 7: vibekanban.Task.metadata:type_name -> vibekanban.Task.MetadataEntry
	57, // 8: vibekanban.Task.created_at:type_name -> google.protobuf.Timestamp
	57, // 9: vibekanban.Task.updated_at:type_name -> google.protobuf.Timestamp
	2,  // 10: vibekanban.TaskAttempt.status:type_name -> vibekanban.AttemptStatus
	57, // 11: vibekanban.TaskAttempt.start_time:type_name -> google.protobuf.Timestamp
	57, // 12: vibekanban.TaskAttempt.end_time:type_name -> google.protobuf.Timestamp
	8,  // 13: vibekanban.TaskAttempt.processes:type_name -> vibekanban.ExecutionProcess
	9,  // 14: vibekanban.TaskAttempt.sessions:type_name -> vibekanban.ExecutorSession
	57, // 15: vibekanban.TaskAttempt.created_at:type_name -> google.protobuf.Timestamp
	57, // 16: vibekanban.TaskAttempt.updated_at:type_name -> google.protobuf.Timestamp
	3,  // 17: vibekanban.ExecutionProcess.type:type_name -> vibekanban.ProcessType
	4,  // 18: vibekanban.ExecutionProcess.status:type_name -> vibekanban.ProcessStatus
	57, // 19: vibekanban.ExecutionProcess.start_time:type_name -> google.protobuf.Timestamp
	57, // 20: vibekanban.ExecutionProcess.end_time:type_name -> google.protobuf.Timestamp
	50, // 21: vibekanban.ExecutionProcess.metadata:type_name -> vibekanban.ExecutionProcess.MetadataEntry
	57, // 22: vibekanban.ExecutionProcess.created_at:type_name -> google.protobuf.Timestamp
	57, // 23: vibekanban.ExecutionProcess.updated_at:type_name -> google.protobuf.Timestamp
	10, // 24: vibekanban.ExecutorSession.messages:type_name -> vibekanban.ConversationEntry
	51, // 25: vibekanban.ExecutorSession.metadata:type_name -> vibekanban.ExecutorSession.MetadataEntry
	57, // 26: vibekanban.ExecutorSession.created_at:type_name -> google.protobuf.Timestamp
	57, // 27: vibekanban.ExecutorSession.updated_at:type_name -> google.protobuf.Timestamp
	52, // 28: vibekanban.ConversationEntry.metadata:type_name -> vibekanban.ConversationEntry.MetadataEntry
	57, // 29: vibekanban.ConversationEntry.timestamp:type_name -> google.protobuf.Timestamp
	5,  // 30: vibekanban.GetProjectResponse.project:type_name -> vibekanban.Project
	5,  // 31: vibekanban.ListProjectsResponse.projects:type_name -> vibekanban.Project
	53, // 32: vibekanban.CreateProjectRequest.config:type_name -> vibekanban.CreateProjectRequest.ConfigEntry
	5,  // 33: vibekanban.CreateProjectResponse.project:type_name -> vibekanban.Project
	54, // 34: vibekanban.UpdateProjectRequest.config:type_name -> vibekanban.UpdateProjectRequest.ConfigEntry
	5,  // 35: vibekanban.UpdateProjectResponse.project:type_name -> vibekanban.Project
	0,  // 36: vibekanban.GetTasksRequest.status_filter:type_name -> vibekanban.TaskStatus
	1,  // 37: vibekanban.GetTasksRequest.priority_filter:type_name -> vibekanban.TaskPriority
	6,  // 38: vibekanban.GetTasksResponse.tasks:type_name -> vibekanban.Task
	1,  // 39: vibekanban.CreateTaskRequest.priority:type_name -> vibekanban.TaskPriority
	55, // 40: vibekanban.CreateTaskRequest.metadata:type_name -> vibekanban.CreateTaskRequest.MetadataEntry
	6,  // 41: vibekanban.CreateTaskResponse.task:type_name -> vibekanban.Task
	0,  // 42: vibekanban.UpdateTaskRequest.status:type_name -> vibekanban.TaskStatus
	1,  // 43: vibekanban.UpdateTaskRequest.priority:type_name -> vibekanban.TaskPriority
	56, // 44: vibekanban.UpdateTaskRequest.metadata:type_name -> vibekanban.UpdateTaskRequest.MetadataEntry
	6,  // 45: vibekanban.UpdateTaskResponse.task:type_name -> vibekanban.Task
	7,  // 46: vibekanban.GetTaskAttemptsResponse.attempts:type_name -> vibekanban.TaskAttempt
	7,  // 47: vibekanban.CreateTaskAttemptResponse.attempt:type_name -> vibekanban.TaskAttempt
	7,  // 48: vibekanban.StartTaskAttemptResponse.attempt:type_name -> vibekanban.TaskAttempt
	8,  // 49: vibekanban.GetProcessesResponse.processes:type_name -> vibekanban.ExecutionProcess
	7,  // 50: vibekanban.GetAttemptStatusResponse.attempt:type_name -> vibekanban.TaskAttempt
	8,  // 51: vibekanban.GetAttemptStatusResponse.processes:type_name -> vibekanban.ExecutionProcess
	8,  // 52: vibekanban.GetDebugProcessesResponse.processes:type_name -> vibekanban.ExecutionProcess
	11, // 53: vibekanban.VibeKanbanService.GetProject:input_type -> vibekanban.GetProjectRequest
	13, // 54: vibekanban.VibeKanbanService.ListProjects:input_type -> vibekanban.ListProjectsRequest
	15, // 55: vibekanban.VibeKanbanService.CreateProject:input_type -> vibekanban.CreateProjectRequest
	17, // 56: vibekanban.VibeKanbanService.UpdateProject:input_type -> vibekanban.UpdateProjectRequest
	19, // 57: vibekanban.VibeKanbanService.DeleteProject:input_type -> vibekanban.DeleteProjectRequest
	20, // 58: vibekanban.VibeKanbanService.GetTasks:input_type -> vibekanban.GetTasksRequest
	22, // 59: vibekanban.VibeKanbanService.CreateTask:input_type -> vibekanban.CreateTaskRequest
	24, // 60: vibekanban.VibeKanbanService.UpdateTask:input_type -> vibekanban.UpdateTaskRequest
	26, // 61: vibekanban.VibeKanbanService.DeleteTask:input_type -> vibekanban.DeleteTaskRequest
	27, // 62: vibekanban.VibeKanbanService.GetTaskAttempts:input_type -> vibekanban.GetTaskAttemptsRequest
	29, // 63: vibekanban.VibeKanbanService.CreateTaskAttempt:input_type -> vibekanban.CreateTaskAttemptRequest
	31, // 64: vibekanban.VibeKanbanService.StartTaskAttempt:input_type -> vibekanban.StartTaskAttemptRequest
	33, // 65: vibekanban.VibeKanbanService.GetAttemptDiff:input_type -> vibekanban.GetAttemptDiffRequest
	35, // 66: vibekanban.VibeKanbanService.MergeAttempt:input_type -> vibekanban.MergeAttemptRequest
	37, // 67: vibekanban.VibeKanbanService.GetProjectBranches:input_type -> vibekanban.GetProjectBranchesRequest
	39, // 68: vibekanban.VibeKanbanService.CreateProjectBranch:input_type -> vibekanban.CreateProjectBranchRequest
	41, // 69: vibekanban.VibeKanbanService.GetProcesses:input_type -> vibekanban.GetProcessesRequest
	43, // 70: vibekanban.VibeKanbanService.KillProcess:input_type -> vibekanban.KillProcessRequest
	44, // 71: vibekanban.VibeKanbanService.GetAttemptStatus:input_type -> vibekanban.GetAttemptStatusRequest
	46, // 72: vibekanban.VibeKanbanService.GetDebugProcesses:input_type -> vibekanban.GetDebugProcessesRequest
	12, // 73: vibekanban.VibeKanbanService.GetProject:output_type -> vibekanban.GetProjectResponse
	14, // 74: vibekanban.VibeKanbanService.ListProjects:output_type -> vibekanban.ListProjectsResponse
	16, // 75: vibekanban.VibeKanbanService.CreateProject:output_type -> vibekanban.CreateProjectResponse
	18, // 76: vibekanban.VibeKanbanService.UpdateProject:output_type -> vibekanban.UpdateProjectResponse
	58, // 77: vibekanban.VibeKanbanService.DeleteProject:output_type -> google.protobuf.Empty
	21, // 78: vibekanban.VibeKanbanService.GetTasks:output_type -> vibekanban.GetTasksResponse
	23, // 79: vibekanban.VibeKanbanService.CreateTask:output_type -> vibekanban.CreateTaskResponse
	25, // 80: vibekanban.VibeKanbanService.UpdateTask:output_type -> vibekanban.UpdateTaskResponse
	58, // 81: vibekanban.VibeKanbanService.DeleteTask:output_type -> google.protobuf.Empty
	28, // 82: vibekanban.VibeKanbanService.GetTaskAttempts:output_type -> vibekanban.GetTaskAttemptsResponse
	30, // 83: vibekanban.VibeKanbanService.CreateTaskAttempt:output_type -> vibekanban.CreateTaskAttemptResponse
	32, // 84: vibekanban.VibeKanbanService.StartTaskAttempt:output_type -> vibekanban.StartTaskAttemptResponse
	34, // 85: vibekanban.VibeKanbanService.GetAttemptDiff:output_type -> vibekanban.GetAttemptDiffResponse
	36, // 86: vibekanban.VibeKanbanService.MergeAttempt:output_type -> vibekanban.MergeAttemptResponse
	38, // 87: vibekanban.VibeKanbanService.GetProjectBranches:output_type -> vibekanban.GetProjectBranchesResponse
	40, // 88: vibekanban.VibeKanbanService.CreateProjectBranch:output_type -> vibekanban.CreateProjectBranchResponse
	42, // 89: vibekanban.VibeKanbanService.GetProcesses:output_type -> vibekanban.GetProcessesResponse
	58, // 90: vibekanban.VibeKanbanService.KillProcess:output_type -> google.protobuf.Empty
	45, // 91: vibekanban.VibeKanbanService.GetAttemptStatus:output_type -> vibekanban.GetAttemptStatusResponse
	47, // 92: vibekanban.VibeKanbanService.GetDebugProcesses:output_type -> vibekanban.GetDebugProcessesResponse
	73, // [73:93] is the sub-list for method output_type
	53, // [53:73] is the sub-list for method input_type
	53, // [53:53] is the sub-list for extension type_name
	53, // [53:53] is the sub-list for extension extendee
	0,  // [0:53] is the sub-list for field type_name
}

func init() { file_proto_vibekanban_vibekanban_proto_init() }
func file_proto_vibekanban_vibekanban_proto_init() {
	if File_proto_vibekanban_vibekanban_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_vibekanban_vibekanban_proto_rawDesc), len(file_proto_vibekanban_vibekanban_proto_rawDesc)),
			NumEnums:      5,
			NumMessages:   52,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_vibekanban_vibekanban_proto_goTypes,
		DependencyIndexes: file_proto_vibekanban_vibekanban_proto_depIdxs,
		EnumInfos:         file_proto_vibekanban_vibekanban_proto_enumTypes,
		MessageInfos:      file_proto_vibekanban_vibekanban_proto_msgTypes,
	}.Build()
	File_proto_vibekanban_vibekanban_proto = out.File
	file_proto_vibekanban_vibekanban_proto_goTypes = nil
	file_proto_vibekanban_vibekanban_proto_depIdxs = nil
}
