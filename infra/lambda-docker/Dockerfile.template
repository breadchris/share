# Multi-stage Docker build for Go Lambda functions
# This template supports custom base images while providing Go Lambda runtime

# Build stage - Go Lambda builder
FROM golang:1.21-alpine AS go-builder

# Install build dependencies
RUN apk add --no-cache git ca-certificates tzdata

# Set working directory
WORKDIR /build

# Copy go mod files
COPY go.mod go.sum ./

# Download dependencies
RUN go mod download

# Copy source code
COPY . .

# Build the Go binary for Lambda
RUN CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -ldflags="-w -s" -o bootstrap ./cmd/lambda

# Runtime stage - Custom base image
ARG BASE_IMAGE
FROM ${BASE_IMAGE}

# Install AWS Lambda Runtime Interface Client if not present
RUN if ! command -v aws-lambda-ric &> /dev/null; then \
    if command -v yum &> /dev/null; then \
        yum install -y curl && \
        curl -sSL https://github.com/aws/aws-lambda-runtime-interface-emulator/releases/latest/download/aws-lambda-rie -o /usr/local/bin/aws-lambda-rie && \
        chmod +x /usr/local/bin/aws-lambda-rie; \
    elif command -v apt-get &> /dev/null; then \
        apt-get update && apt-get install -y curl && \
        curl -sSL https://github.com/aws/aws-lambda-runtime-interface-emulator/releases/latest/download/aws-lambda-rie -o /usr/local/bin/aws-lambda-rie && \
        chmod +x /usr/local/bin/aws-lambda-rie; \
    elif command -v apk &> /dev/null; then \
        apk add --no-cache curl && \
        curl -sSL https://github.com/aws/aws-lambda-runtime-interface-emulator/releases/latest/download/aws-lambda-rie -o /usr/local/bin/aws-lambda-rie && \
        chmod +x /usr/local/bin/aws-lambda-rie; \
    fi; \
fi

# Copy the built binary from build stage
COPY --from=go-builder /build/bootstrap ${LAMBDA_RUNTIME_DIR}/bootstrap

# Copy entry point script
COPY --from=go-builder /build/entry.sh /entry.sh
RUN chmod +x /entry.sh

# Set the CMD to your handler
CMD ["/entry.sh"]