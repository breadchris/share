{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/hacked/Documents/GitHub/share/ysweet/justshare/components/App.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const App = registerClientReference(\n    function() { throw new Error(\"Attempted to call App() from the server but App is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/App.tsx <module evaluation>\",\n    \"App\",\n);\nexport const Hero = registerClientReference(\n    function() { throw new Error(\"Attempted to call Hero() from the server but Hero is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/App.tsx <module evaluation>\",\n    \"Hero\",\n);\nexport const Presence = registerClientReference(\n    function() { throw new Error(\"Attempted to call Presence() from the server but Presence is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/App.tsx <module evaluation>\",\n    \"Presence\",\n);\n"],"names":[],"mappings":";;;;;AAAA;;AACO,MAAM,MAAM,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACrC;IAAa,MAAM,IAAI,MAAM;AAAsN,GACnP,oDACA;AAEG,MAAM,OAAO,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACtC;IAAa,MAAM,IAAI,MAAM;AAAwN,GACrP,oDACA;AAEG,MAAM,WAAW,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC1C;IAAa,MAAM,IAAI,MAAM;AAAgO,GAC7P,oDACA","debugId":null}},
    {"offset": {"line": 29, "column": 0}, "map": {"version":3,"sources":["file:///Users/hacked/Documents/GitHub/share/ysweet/justshare/components/App.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const App = registerClientReference(\n    function() { throw new Error(\"Attempted to call App() from the server but App is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/App.tsx\",\n    \"App\",\n);\nexport const Hero = registerClientReference(\n    function() { throw new Error(\"Attempted to call Hero() from the server but Hero is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/App.tsx\",\n    \"Hero\",\n);\nexport const Presence = registerClientReference(\n    function() { throw new Error(\"Attempted to call Presence() from the server but Presence is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/components/App.tsx\",\n    \"Presence\",\n);\n"],"names":[],"mappings":";;;;;AAAA;;AACO,MAAM,MAAM,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACrC;IAAa,MAAM,IAAI,MAAM;AAAsN,GACnP,gCACA;AAEG,MAAM,OAAO,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACtC;IAAa,MAAM,IAAI,MAAM;AAAwN,GACrP,gCACA;AAEG,MAAM,WAAW,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC1C;IAAa,MAAM,IAAI,MAAM;AAAgO,GAC7P,gCACA","debugId":null}},
    {"offset": {"line": 51, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 61, "column": 0}, "map": {"version":3,"sources":["file:///Users/hacked/Documents/GitHub/share/ysweet/justshare/app/page.tsx"],"sourcesContent":["import { DocumentManager } from \"@y-sweet/sdk\";\nimport { YDocProvider } from \"@y-sweet/react\";\n\nimport { App } from \"@/components/App\";\n\nconst manager = new DocumentManager(\n  process.env.CONNECTION_STRING || \"ys://127.0.0.1:8080\",\n);\n\nexport default async function Home() {\n  const docId = \"my-doc-id\";\n\n  async function getClientToken() {\n    \"use server\";\n    // In a production app, this is where you'd authenticate the user\n    // and check that they are authorized to access the doc.\n    return await manager.getOrCreateDocAndToken(docId);\n  }\n\n  return (\n    <YDocProvider docId={docId} authEndpoint={getClientToken}>\n      <App />\n    </YDocProvider>\n  );\n}\n"],"names":[],"mappings":";;;;;;;AAAA;AACA;AAEA;;;;;;;AAEA,MAAM,UAAU,IAAI,oJAAA,CAAA,kBAAe,CACjC,QAAQ,GAAG,CAAC,iBAAiB,IAAI;MAMjC,wBAAA,eAAe;;IAEb,iEAAiE;IACjE,wDAAwD;IACxD,OAAO,MAAM,QAAQ,sBAAsB;AAC7C;AARa,eAAe;IAC5B,MAAM,QAAQ;QAEC,iBAAf,+OAAA;IAOA,qBACE,8OAAC,sJAAA,CAAA,eAAY;QAAC,OAAO;QAAO,cAAc;kBACxC,cAAA,8OAAC,kHAAA,CAAA,MAAG;;;;;;;;;;AAGV","debugId":null}},
    {"offset": {"line": 107, "column": 0}, "map": {"version":3,"sources":["file:///Users/hacked/Documents/GitHub/share/ysweet/justshare/.next-internal/server/app/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {$$RSC_SERVER_ACTION_0 as '401370f843e928ff98e0d8fcee5453044b30a3c35b'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}}]
}