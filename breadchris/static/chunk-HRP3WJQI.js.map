{
  "version": 3,
  "sources": ["../../node_modules/@codemirror/legacy-modes/mode/asciiarmor.js"],
  "sourcesContent": ["function errorIfNotEmpty(stream) {\n  var nonWS = stream.match(/^\\s*\\S/);\n  stream.skipToEnd();\n  return nonWS ? \"error\" : null;\n}\n\nexport const asciiArmor = {\n  name: \"asciiarmor\",\n  token: function(stream, state) {\n    var m;\n    if (state.state == \"top\") {\n      if (stream.sol() && (m = stream.match(/^-----BEGIN (.*)?-----\\s*$/))) {\n        state.state = \"headers\";\n        state.type = m[1];\n        return \"tag\";\n      }\n      return errorIfNotEmpty(stream);\n    } else if (state.state == \"headers\") {\n      if (stream.sol() && stream.match(/^\\w+:/)) {\n        state.state = \"header\";\n        return \"atom\";\n      } else {\n        var result = errorIfNotEmpty(stream);\n        if (result) state.state = \"body\";\n        return result;\n      }\n    } else if (state.state == \"header\") {\n      stream.skipToEnd();\n      state.state = \"headers\";\n      return \"string\";\n    } else if (state.state == \"body\") {\n      if (stream.sol() && (m = stream.match(/^-----END (.*)?-----\\s*$/))) {\n        if (m[1] != state.type) return \"error\";\n        state.state = \"end\";\n        return \"tag\";\n      } else {\n        if (stream.eatWhile(/[A-Za-z0-9+\\/=]/)) {\n          return null;\n        } else {\n          stream.next();\n          return \"error\";\n        }\n      }\n    } else if (state.state == \"end\") {\n      return errorIfNotEmpty(stream);\n    }\n  },\n  blankLine: function(state) {\n    if (state.state == \"headers\") state.state = \"body\";\n  },\n  startState: function() {\n    return {state: \"top\", type: null};\n  }\n};\n"],
  "mappings": "AAAA,SAASA,EAAgBC,EAAQ,CAC/B,IAAIC,EAAQD,EAAO,MAAM,QAAQ,EACjC,OAAAA,EAAO,UAAU,EACVC,EAAQ,QAAU,IAC3B,CAEO,IAAMC,EAAa,CACxB,KAAM,aACN,MAAO,SAASF,EAAQG,EAAO,CAC7B,IAAIC,EACJ,GAAID,EAAM,OAAS,MACjB,OAAIH,EAAO,IAAI,IAAMI,EAAIJ,EAAO,MAAM,4BAA4B,IAChEG,EAAM,MAAQ,UACdA,EAAM,KAAOC,EAAE,CAAC,EACT,OAEFL,EAAgBC,CAAM,EACxB,GAAIG,EAAM,OAAS,UAAW,CACnC,GAAIH,EAAO,IAAI,GAAKA,EAAO,MAAM,OAAO,EACtC,OAAAG,EAAM,MAAQ,SACP,OAEP,IAAIE,EAASN,EAAgBC,CAAM,EACnC,OAAIK,IAAQF,EAAM,MAAQ,QACnBE,CAEX,KAAO,IAAIF,EAAM,OAAS,SACxB,OAAAH,EAAO,UAAU,EACjBG,EAAM,MAAQ,UACP,SACF,GAAIA,EAAM,OAAS,OACxB,OAAIH,EAAO,IAAI,IAAMI,EAAIJ,EAAO,MAAM,0BAA0B,GAC1DI,EAAE,CAAC,GAAKD,EAAM,KAAa,SAC/BA,EAAM,MAAQ,MACP,OAEHH,EAAO,SAAS,iBAAiB,EAC5B,MAEPA,EAAO,KAAK,EACL,SAGN,GAAIG,EAAM,OAAS,MACxB,OAAOJ,EAAgBC,CAAM,EAEjC,EACA,UAAW,SAASG,EAAO,CACrBA,EAAM,OAAS,YAAWA,EAAM,MAAQ,OAC9C,EACA,WAAY,UAAW,CACrB,MAAO,CAAC,MAAO,MAAO,KAAM,IAAI,CAClC,CACF",
  "names": ["errorIfNotEmpty", "stream", "nonWS", "asciiArmor", "state", "m", "result"]
}
