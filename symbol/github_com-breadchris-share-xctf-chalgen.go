// Code generated by 'yaegi extract github.com/breadchris/share/xctf/chalgen'. DO NOT EDIT.

package symbol

import (
	"github.com/breadchris/share/xctf/chalgen"
	"reflect"
)

func init() {
	Symbols["github.com/breadchris/share/xctf/chalgen/chalgen"] = map[string]reflect.Value{
		// type definitions
		"PhoneApp":            reflect.ValueOf((*chalgen.PhoneApp)(nil)),
		"AppType":        reflect.ValueOf((*chalgen.AppType)(nil)),
		"AudioPlayer":    reflect.ValueOf((*chalgen.AudioPlayer)(nil)),
		"Base64":         reflect.ValueOf((*chalgen.Base64)(nil)),
		"CaesarCipher":   reflect.ValueOf((*chalgen.CaesarCipher)(nil)),
		"Challenge":      reflect.ValueOf((*chalgen.Challenge)(nil)),
		"ChallengeType":  reflect.ValueOf((*chalgen.ChallengeType)(nil)),
		"Channel":        reflect.ValueOf((*chalgen.Channel)(nil)),
		"Comment":        reflect.ValueOf((*chalgen.Comment)(nil)),
		"Data":           reflect.ValueOf((*chalgen.Data)(nil)),
		"Edge":           reflect.ValueOf((*chalgen.Edge)(nil)),
		"Event":          reflect.ValueOf((*chalgen.Event)(nil)),
		"EvidenceFile":   reflect.ValueOf((*chalgen.EvidenceFile)(nil)),
		"EvidencePost":   reflect.ValueOf((*chalgen.EvidencePost)(nil)),
		"Exif":           reflect.ValueOf((*chalgen.Exif)(nil)),
		"FileManager":    reflect.ValueOf((*chalgen.FileManager)(nil)),
		"Graph":          reflect.ValueOf((*chalgen.Graph)(nil)),
		"GraphNode":      reflect.ValueOf((*chalgen.GraphNode)(nil)),
		"Hashes":         reflect.ValueOf((*chalgen.Hashes)(nil)),
		"Maze":           reflect.ValueOf((*chalgen.Maze)(nil)),
		"MazeCoordinate": reflect.ValueOf((*chalgen.MazeCoordinate)(nil)),
		"MazePath":       reflect.ValueOf((*chalgen.MazePath)(nil)),
		"Message":        reflect.ValueOf((*chalgen.Message)(nil)),
		"Override":       reflect.ValueOf((*chalgen.Override)(nil)),
		"PCAP":           reflect.ValueOf((*chalgen.PCAP)(nil)),
		"Packet":         reflect.ValueOf((*chalgen.Packet)(nil)),
		"PassShare":      reflect.ValueOf((*chalgen.PassShare)(nil)),
		"Pdf":            reflect.ValueOf((*chalgen.Pdf)(nil)),
		"Phone":          reflect.ValueOf((*chalgen.Phone)(nil)),
		"PhotoGallery":   reflect.ValueOf((*chalgen.PhotoGallery)(nil)),
		"Search":         reflect.ValueOf((*chalgen.Search)(nil)),
		"Slack":          reflect.ValueOf((*chalgen.Slack)(nil)),
		"Solution":       reflect.ValueOf((*chalgen.Solution)(nil)),
		"Song":           reflect.ValueOf((*chalgen.Song)(nil)),
		"Tracker":        reflect.ValueOf((*chalgen.Tracker)(nil)),
		"Twitter":        reflect.ValueOf((*chalgen.Twitter)(nil)),
		"User":           reflect.ValueOf((*chalgen.User)(nil)),
		"Xor":            reflect.ValueOf((*chalgen.Xor)(nil)),
		"Zip":            reflect.ValueOf((*chalgen.Zip)(nil)),

		// interface wrapper definitions
		"_AppType":       reflect.ValueOf((*_github_com_breadchris_share_xctf_chalgen_AppType)(nil)),
		"_ChallengeType": reflect.ValueOf((*_github_com_breadchris_share_xctf_chalgen_ChallengeType)(nil)),
	}
}

// _github_com_breadchris_share_xctf_chalgen_AppType is an interface wrapper for AppType type
type _github_com_breadchris_share_xctf_chalgen_AppType struct {
	IValue interface{}
}

// _github_com_breadchris_share_xctf_chalgen_ChallengeType is an interface wrapper for ChallengeType type
type _github_com_breadchris_share_xctf_chalgen_ChallengeType struct {
	IValue interface{}
}
