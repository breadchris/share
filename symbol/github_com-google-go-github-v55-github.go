// Code generated by 'yaegi extract github.com/google/go-github/v55/github'. DO NOT EDIT.

package symbol

import (
	"github.com/google/go-github/v55/github"
	"go/constant"
	"go/token"
	"reflect"
)

func init() {
	Symbols["github.com/google/go-github/v55/github/github"] = map[string]reflect.Value{
		// function, constant and variable definitions
		"Bool":                            reflect.ValueOf(github.Bool),
		"CheckResponse":                   reflect.ValueOf(github.CheckResponse),
		"DeliveryID":                      reflect.ValueOf(github.DeliveryID),
		"DeliveryIDHeader":                reflect.ValueOf(constant.MakeFromLiteral("\"X-Github-Delivery\"", token.STRING, 0)),
		"Diff":                            reflect.ValueOf(github.Diff),
		"ErrBranchNotProtected":           reflect.ValueOf(&github.ErrBranchNotProtected).Elem(),
		"ErrMixedCommentStyles":           reflect.ValueOf(&github.ErrMixedCommentStyles).Elem(),
		"ErrPathForbidden":                reflect.ValueOf(&github.ErrPathForbidden).Elem(),
		"EventForType":                    reflect.ValueOf(github.EventForType),
		"EventTypeHeader":                 reflect.ValueOf(constant.MakeFromLiteral("\"X-Github-Event\"", token.STRING, 0)),
		"Int":                             reflect.ValueOf(github.Int),
		"Int64":                           reflect.ValueOf(github.Int64),
		"MessageTypes":                    reflect.ValueOf(github.MessageTypes),
		"NewBranchNamePatternRule":        reflect.ValueOf(github.NewBranchNamePatternRule),
		"NewClient":                       reflect.ValueOf(github.NewClient),
		"NewClientWithEnvProxy":           reflect.ValueOf(github.NewClientWithEnvProxy),
		"NewCommitAuthorEmailPatternRule": reflect.ValueOf(github.NewCommitAuthorEmailPatternRule),
		"NewCommitMessagePatternRule":     reflect.ValueOf(github.NewCommitMessagePatternRule),
		"NewCommitterEmailPatternRule":    reflect.ValueOf(github.NewCommitterEmailPatternRule),
		"NewCreationRule":                 reflect.ValueOf(github.NewCreationRule),
		"NewDeletionRule":                 reflect.ValueOf(github.NewDeletionRule),
		"NewEnterpriseClient":             reflect.ValueOf(github.NewEnterpriseClient),
		"NewNonFastForwardRule":           reflect.ValueOf(github.NewNonFastForwardRule),
		"NewPullRequestRule":              reflect.ValueOf(github.NewPullRequestRule),
		"NewRequiredDeploymentsRule":      reflect.ValueOf(github.NewRequiredDeploymentsRule),
		"NewRequiredLinearHistoryRule":    reflect.ValueOf(github.NewRequiredLinearHistoryRule),
		"NewRequiredSignaturesRule":       reflect.ValueOf(github.NewRequiredSignaturesRule),
		"NewRequiredStatusChecksRule":     reflect.ValueOf(github.NewRequiredStatusChecksRule),
		"NewTagNamePatternRule":           reflect.ValueOf(github.NewTagNamePatternRule),
		"NewTokenClient":                  reflect.ValueOf(github.NewTokenClient),
		"NewUpdateRule":                   reflect.ValueOf(github.NewUpdateRule),
		"ParseWebHook":                    reflect.ValueOf(github.ParseWebHook),
		"Patch":                           reflect.ValueOf(github.Patch),
		"SHA1SignatureHeader":             reflect.ValueOf(constant.MakeFromLiteral("\"X-Hub-Signature\"", token.STRING, 0)),
		"SHA256SignatureHeader":           reflect.ValueOf(constant.MakeFromLiteral("\"X-Hub-Signature-256\"", token.STRING, 0)),
		"ScopeAdminGPGKey":                reflect.ValueOf(github.ScopeAdminGPGKey),
		"ScopeAdminOrg":                   reflect.ValueOf(github.ScopeAdminOrg),
		"ScopeAdminOrgHook":               reflect.ValueOf(github.ScopeAdminOrgHook),
		"ScopeAdminPublicKey":             reflect.ValueOf(github.ScopeAdminPublicKey),
		"ScopeAdminRepoHook":              reflect.ValueOf(github.ScopeAdminRepoHook),
		"ScopeDeleteRepo":                 reflect.ValueOf(github.ScopeDeleteRepo),
		"ScopeGist":                       reflect.ValueOf(github.ScopeGist),
		"ScopeNone":                       reflect.ValueOf(github.ScopeNone),
		"ScopeNotifications":              reflect.ValueOf(github.ScopeNotifications),
		"ScopePublicRepo":                 reflect.ValueOf(github.ScopePublicRepo),
		"ScopeReadGPGKey":                 reflect.ValueOf(github.ScopeReadGPGKey),
		"ScopeReadOrg":                    reflect.ValueOf(github.ScopeReadOrg),
		"ScopeReadPublicKey":              reflect.ValueOf(github.ScopeReadPublicKey),
		"ScopeReadRepoHook":               reflect.ValueOf(github.ScopeReadRepoHook),
		"ScopeRepo":                       reflect.ValueOf(github.ScopeRepo),
		"ScopeRepoDeployment":             reflect.ValueOf(github.ScopeRepoDeployment),
		"ScopeRepoStatus":                 reflect.ValueOf(github.ScopeRepoStatus),
		"ScopeSecurityEvents":             reflect.ValueOf(github.ScopeSecurityEvents),
		"ScopeUser":                       reflect.ValueOf(github.ScopeUser),
		"ScopeUserEmail":                  reflect.ValueOf(github.ScopeUserEmail),
		"ScopeUserFollow":                 reflect.ValueOf(github.ScopeUserFollow),
		"ScopeWriteGPGKey":                reflect.ValueOf(github.ScopeWriteGPGKey),
		"ScopeWriteOrg":                   reflect.ValueOf(github.ScopeWriteOrg),
		"ScopeWritePublicKey":             reflect.ValueOf(github.ScopeWritePublicKey),
		"ScopeWriteRepoHook":              reflect.ValueOf(github.ScopeWriteRepoHook),
		"String":                          reflect.ValueOf(github.String),
		"Stringify":                       reflect.ValueOf(github.Stringify),
		"Tarball":                         reflect.ValueOf(github.Tarball),
		"ValidatePayload":                 reflect.ValueOf(github.ValidatePayload),
		"ValidatePayloadFromBody":         reflect.ValueOf(github.ValidatePayloadFromBody),
		"ValidateSignature":               reflect.ValueOf(github.ValidateSignature),
		"Version":                         reflect.ValueOf(constant.MakeFromLiteral("\"v55.0.0\"", token.STRING, 0)),
		"WebHookType":                     reflect.ValueOf(github.WebHookType),
		"WithVersion":                     reflect.ValueOf(github.WithVersion),
		"Zipball":                         reflect.ValueOf(github.Zipball),

		// type definitions
		"APIMeta":                               reflect.ValueOf((*github.APIMeta)(nil)),
		"AbuseRateLimitError":                   reflect.ValueOf((*github.AbuseRateLimitError)(nil)),
		"AcceptedError":                         reflect.ValueOf((*github.AcceptedError)(nil)),
		"ActionBilling":                         reflect.ValueOf((*github.ActionBilling)(nil)),
		"ActionsAllowed":                        reflect.ValueOf((*github.ActionsAllowed)(nil)),
		"ActionsCache":                          reflect.ValueOf((*github.ActionsCache)(nil)),
		"ActionsCacheList":                      reflect.ValueOf((*github.ActionsCacheList)(nil)),
		"ActionsCacheListOptions":               reflect.ValueOf((*github.ActionsCacheListOptions)(nil)),
		"ActionsCacheUsage":                     reflect.ValueOf((*github.ActionsCacheUsage)(nil)),
		"ActionsCacheUsageList":                 reflect.ValueOf((*github.ActionsCacheUsageList)(nil)),
		"ActionsEnabledOnOrgRepos":              reflect.ValueOf((*github.ActionsEnabledOnOrgRepos)(nil)),
		"ActionsPermissions":                    reflect.ValueOf((*github.ActionsPermissions)(nil)),
		"ActionsPermissionsRepository":          reflect.ValueOf((*github.ActionsPermissionsRepository)(nil)),
		"ActionsService":                        reflect.ValueOf((*github.ActionsService)(nil)),
		"ActionsVariable":                       reflect.ValueOf((*github.ActionsVariable)(nil)),
		"ActionsVariables":                      reflect.ValueOf((*github.ActionsVariables)(nil)),
		"ActiveCommitters":                      reflect.ValueOf((*github.ActiveCommitters)(nil)),
		"ActivityListStarredOptions":            reflect.ValueOf((*github.ActivityListStarredOptions)(nil)),
		"ActivityService":                       reflect.ValueOf((*github.ActivityService)(nil)),
		"ActorLocation":                         reflect.ValueOf((*github.ActorLocation)(nil)),
		"AdminEnforcedChanges":                  reflect.ValueOf((*github.AdminEnforcedChanges)(nil)),
		"AdminEnforcement":                      reflect.ValueOf((*github.AdminEnforcement)(nil)),
		"AdminService":                          reflect.ValueOf((*github.AdminService)(nil)),
		"AdminStats":                            reflect.ValueOf((*github.AdminStats)(nil)),
		"AdvancedSecurity":                      reflect.ValueOf((*github.AdvancedSecurity)(nil)),
		"AdvancedSecurityCommittersBreakdown":   reflect.ValueOf((*github.AdvancedSecurityCommittersBreakdown)(nil)),
		"AdvisoryCVSS":                          reflect.ValueOf((*github.AdvisoryCVSS)(nil)),
		"AdvisoryCWEs":                          reflect.ValueOf((*github.AdvisoryCWEs)(nil)),
		"AdvisoryIdentifier":                    reflect.ValueOf((*github.AdvisoryIdentifier)(nil)),
		"AdvisoryReference":                     reflect.ValueOf((*github.AdvisoryReference)(nil)),
		"AdvisoryVulnerability":                 reflect.ValueOf((*github.AdvisoryVulnerability)(nil)),
		"Alert":                                 reflect.ValueOf((*github.Alert)(nil)),
		"AlertInstancesListOptions":             reflect.ValueOf((*github.AlertInstancesListOptions)(nil)),
		"AlertListOptions":                      reflect.ValueOf((*github.AlertListOptions)(nil)),
		"AllowDeletions":                        reflect.ValueOf((*github.AllowDeletions)(nil)),
		"AllowDeletionsEnforcementLevelChanges": reflect.ValueOf((*github.AllowDeletionsEnforcementLevelChanges)(nil)),
		"AllowForcePushes":                      reflect.ValueOf((*github.AllowForcePushes)(nil)),
		"AllowForkSyncing":                      reflect.ValueOf((*github.AllowForkSyncing)(nil)),
		"AnalysesListOptions":                   reflect.ValueOf((*github.AnalysesListOptions)(nil)),
		"App":                                   reflect.ValueOf((*github.App)(nil)),
		"AppConfig":                             reflect.ValueOf((*github.AppConfig)(nil)),
		"AppsService":                           reflect.ValueOf((*github.AppsService)(nil)),
		"ArchiveFormat":                         reflect.ValueOf((*github.ArchiveFormat)(nil)),
		"ArchivedAt":                            reflect.ValueOf((*github.ArchivedAt)(nil)),
		"Artifact":                              reflect.ValueOf((*github.Artifact)(nil)),
		"ArtifactList":                          reflect.ValueOf((*github.ArtifactList)(nil)),
		"ArtifactWorkflowRun":                   reflect.ValueOf((*github.ArtifactWorkflowRun)(nil)),
		"Attachment":                            reflect.ValueOf((*github.Attachment)(nil)),
		"AuditEntry":                            reflect.ValueOf((*github.AuditEntry)(nil)),
		"AuditEntryData":                        reflect.ValueOf((*github.AuditEntryData)(nil)),
		"Authorization":                         reflect.ValueOf((*github.Authorization)(nil)),
		"AuthorizationApp":                      reflect.ValueOf((*github.AuthorizationApp)(nil)),
		"AuthorizationRequest":                  reflect.ValueOf((*github.AuthorizationRequest)(nil)),
		"AuthorizationUpdateRequest":            reflect.ValueOf((*github.AuthorizationUpdateRequest)(nil)),
		"AuthorizationsService":                 reflect.ValueOf((*github.AuthorizationsService)(nil)),
		"AuthorizedActorNames":                  reflect.ValueOf((*github.AuthorizedActorNames)(nil)),
		"AuthorizedActorsOnly":                  reflect.ValueOf((*github.AuthorizedActorsOnly)(nil)),
		"AuthorizedDismissalActorsOnlyChanges":  reflect.ValueOf((*github.AuthorizedDismissalActorsOnlyChanges)(nil)),
		"AutoTriggerCheck":                      reflect.ValueOf((*github.AutoTriggerCheck)(nil)),
		"Autolink":                              reflect.ValueOf((*github.Autolink)(nil)),
		"AutolinkOptions":                       reflect.ValueOf((*github.AutolinkOptions)(nil)),
		"AutomatedSecurityFixes":                reflect.ValueOf((*github.AutomatedSecurityFixes)(nil)),
		"BasicAuthTransport":                    reflect.ValueOf((*github.BasicAuthTransport)(nil)),
		"BillingService":                        reflect.ValueOf((*github.BillingService)(nil)),
		"Blob":                                  reflect.ValueOf((*github.Blob)(nil)),
		"BlockCreations":                        reflect.ValueOf((*github.BlockCreations)(nil)),
		"Branch":                                reflect.ValueOf((*github.Branch)(nil)),
		"BranchCommit":                          reflect.ValueOf((*github.BranchCommit)(nil)),
		"BranchListOptions":                     reflect.ValueOf((*github.BranchListOptions)(nil)),
		"BranchPolicy":                          reflect.ValueOf((*github.BranchPolicy)(nil)),
		"BranchProtectionRule":                  reflect.ValueOf((*github.BranchProtectionRule)(nil)),
		"BranchProtectionRuleEvent":             reflect.ValueOf((*github.BranchProtectionRuleEvent)(nil)),
		"BranchRestrictions":                    reflect.ValueOf((*github.BranchRestrictions)(nil)),
		"BranchRestrictionsRequest":             reflect.ValueOf((*github.BranchRestrictionsRequest)(nil)),
		"BypassActor":                           reflect.ValueOf((*github.BypassActor)(nil)),
		"BypassPullRequestAllowances":           reflect.ValueOf((*github.BypassPullRequestAllowances)(nil)),
		"BypassPullRequestAllowancesRequest":    reflect.ValueOf((*github.BypassPullRequestAllowancesRequest)(nil)),
		"CheckRun":                              reflect.ValueOf((*github.CheckRun)(nil)),
		"CheckRunAction":                        reflect.ValueOf((*github.CheckRunAction)(nil)),
		"CheckRunAnnotation":                    reflect.ValueOf((*github.CheckRunAnnotation)(nil)),
		"CheckRunEvent":                         reflect.ValueOf((*github.CheckRunEvent)(nil)),
		"CheckRunImage":                         reflect.ValueOf((*github.CheckRunImage)(nil)),
		"CheckRunOutput":                        reflect.ValueOf((*github.CheckRunOutput)(nil)),
		"CheckSuite":                            reflect.ValueOf((*github.CheckSuite)(nil)),
		"CheckSuiteEvent":                       reflect.ValueOf((*github.CheckSuiteEvent)(nil)),
		"CheckSuitePreferenceOptions":           reflect.ValueOf((*github.CheckSuitePreferenceOptions)(nil)),
		"CheckSuitePreferenceResults":           reflect.ValueOf((*github.CheckSuitePreferenceResults)(nil)),
		"ChecksService":                         reflect.ValueOf((*github.ChecksService)(nil)),
		"Client":                                reflect.ValueOf((*github.Client)(nil)),
		"CodeOfConduct":                         reflect.ValueOf((*github.CodeOfConduct)(nil)),
		"CodeQLDatabase":                        reflect.ValueOf((*github.CodeQLDatabase)(nil)),
		"CodeResult":                            reflect.ValueOf((*github.CodeResult)(nil)),
		"CodeScanningAlertEvent":                reflect.ValueOf((*github.CodeScanningAlertEvent)(nil)),
		"CodeScanningAlertState":                reflect.ValueOf((*github.CodeScanningAlertState)(nil)),
		"CodeScanningService":                   reflect.ValueOf((*github.CodeScanningService)(nil)),
		"CodeSearchResult":                      reflect.ValueOf((*github.CodeSearchResult)(nil)),
		"CodeownersError":                       reflect.ValueOf((*github.CodeownersError)(nil)),
		"CodeownersErrors":                      reflect.ValueOf((*github.CodeownersErrors)(nil)),
		"Codespace":                             reflect.ValueOf((*github.Codespace)(nil)),
		"CodespacesGitStatus":                   reflect.ValueOf((*github.CodespacesGitStatus)(nil)),
		"CodespacesMachine":                     reflect.ValueOf((*github.CodespacesMachine)(nil)),
		"CodespacesRuntimeConstraints":          reflect.ValueOf((*github.CodespacesRuntimeConstraints)(nil)),
		"CodespacesService":                     reflect.ValueOf((*github.CodespacesService)(nil)),
		"CollaboratorInvitation":                reflect.ValueOf((*github.CollaboratorInvitation)(nil)),
		"CombinedStatus":                        reflect.ValueOf((*github.CombinedStatus)(nil)),
		"Comment":                               reflect.ValueOf((*github.Comment)(nil)),
		"CommentDiscussion":                     reflect.ValueOf((*github.CommentDiscussion)(nil)),
		"CommentStats":                          reflect.ValueOf((*github.CommentStats)(nil)),
		"Commit":                                reflect.ValueOf((*github.Commit)(nil)),
		"CommitAuthor":                          reflect.ValueOf((*github.CommitAuthor)(nil)),
		"CommitCommentEvent":                    reflect.ValueOf((*github.CommitCommentEvent)(nil)),
		"CommitFile":                            reflect.ValueOf((*github.CommitFile)(nil)),
		"CommitResult":                          reflect.ValueOf((*github.CommitResult)(nil)),
		"CommitStats":                           reflect.ValueOf((*github.CommitStats)(nil)),
		"CommitsComparison":                     reflect.ValueOf((*github.CommitsComparison)(nil)),
		"CommitsListOptions":                    reflect.ValueOf((*github.CommitsListOptions)(nil)),
		"CommitsSearchResult":                   reflect.ValueOf((*github.CommitsSearchResult)(nil)),
		"CommunityHealthFiles":                  reflect.ValueOf((*github.CommunityHealthFiles)(nil)),
		"CommunityHealthMetrics":                reflect.ValueOf((*github.CommunityHealthMetrics)(nil)),
		"ContentReference":                      reflect.ValueOf((*github.ContentReference)(nil)),
		"ContentReferenceEvent":                 reflect.ValueOf((*github.ContentReferenceEvent)(nil)),
		"Contributor":                           reflect.ValueOf((*github.Contributor)(nil)),
		"ContributorStats":                      reflect.ValueOf((*github.ContributorStats)(nil)),
		"CreateCheckRunOptions":                 reflect.ValueOf((*github.CreateCheckRunOptions)(nil)),
		"CreateCheckSuiteOptions":               reflect.ValueOf((*github.CreateCheckSuiteOptions)(nil)),
		"CreateCodespaceOptions":                reflect.ValueOf((*github.CreateCodespaceOptions)(nil)),
		"CreateEvent":                           reflect.ValueOf((*github.CreateEvent)(nil)),
		"CreateOrUpdateCustomRoleOptions":       reflect.ValueOf((*github.CreateOrUpdateCustomRoleOptions)(nil)),
		"CreateOrgInvitationOptions":            reflect.ValueOf((*github.CreateOrgInvitationOptions)(nil)),
		"CreateProtectedChanges":                reflect.ValueOf((*github.CreateProtectedChanges)(nil)),
		"CreateRunnerGroupRequest":              reflect.ValueOf((*github.CreateRunnerGroupRequest)(nil)),
		"CreateUpdateEnvironment":               reflect.ValueOf((*github.CreateUpdateEnvironment)(nil)),
		"CreateUpdateRequiredWorkflowOptions":   reflect.ValueOf((*github.CreateUpdateRequiredWorkflowOptions)(nil)),
		"CreateUserProjectOptions":              reflect.ValueOf((*github.CreateUserProjectOptions)(nil)),
		"CreateWorkflowDispatchEventRequest":    reflect.ValueOf((*github.CreateWorkflowDispatchEventRequest)(nil)),
		"CreationInfo":                          reflect.ValueOf((*github.CreationInfo)(nil)),
		"CredentialAuthorization":               reflect.ValueOf((*github.CredentialAuthorization)(nil)),
		"CustomRepoRoles":                       reflect.ValueOf((*github.CustomRepoRoles)(nil)),
		"DefaultSetupConfiguration":             reflect.ValueOf((*github.DefaultSetupConfiguration)(nil)),
		"DeleteAnalysis":                        reflect.ValueOf((*github.DeleteAnalysis)(nil)),
		"DeleteEvent":                           reflect.ValueOf((*github.DeleteEvent)(nil)),
		"DependabotAlert":                       reflect.ValueOf((*github.DependabotAlert)(nil)),
		"DependabotAlertEvent":                  reflect.ValueOf((*github.DependabotAlertEvent)(nil)),
		"DependabotEncryptedSecret":             reflect.ValueOf((*github.DependabotEncryptedSecret)(nil)),
		"DependabotSecretsSelectedRepoIDs":      reflect.ValueOf((*github.DependabotSecretsSelectedRepoIDs)(nil)),
		"DependabotSecurityAdvisory":            reflect.ValueOf((*github.DependabotSecurityAdvisory)(nil)),
		"DependabotSecurityUpdates":             reflect.ValueOf((*github.DependabotSecurityUpdates)(nil)),
		"DependabotService":                     reflect.ValueOf((*github.DependabotService)(nil)),
		"Dependency":                            reflect.ValueOf((*github.Dependency)(nil)),
		"DependencyGraphService":                reflect.ValueOf((*github.DependencyGraphService)(nil)),
		"DeployKeyEvent":                        reflect.ValueOf((*github.DeployKeyEvent)(nil)),
		"Deployment":                            reflect.ValueOf((*github.Deployment)(nil)),
		"DeploymentBranchPolicy":                reflect.ValueOf((*github.DeploymentBranchPolicy)(nil)),
		"DeploymentBranchPolicyRequest":         reflect.ValueOf((*github.DeploymentBranchPolicyRequest)(nil)),
		"DeploymentBranchPolicyResponse":        reflect.ValueOf((*github.DeploymentBranchPolicyResponse)(nil)),
		"DeploymentEvent":                       reflect.ValueOf((*github.DeploymentEvent)(nil)),
		"DeploymentProtectionRuleEvent":         reflect.ValueOf((*github.DeploymentProtectionRuleEvent)(nil)),
		"DeploymentRequest":                     reflect.ValueOf((*github.DeploymentRequest)(nil)),
		"DeploymentStatus":                      reflect.ValueOf((*github.DeploymentStatus)(nil)),
		"DeploymentStatusEvent":                 reflect.ValueOf((*github.DeploymentStatusEvent)(nil)),
		"DeploymentStatusRequest":               reflect.ValueOf((*github.DeploymentStatusRequest)(nil)),
		"DeploymentsListOptions":                reflect.ValueOf((*github.DeploymentsListOptions)(nil)),
		"Discussion":                            reflect.ValueOf((*github.Discussion)(nil)),
		"DiscussionCategory":                    reflect.ValueOf((*github.DiscussionCategory)(nil)),
		"DiscussionComment":                     reflect.ValueOf((*github.DiscussionComment)(nil)),
		"DiscussionCommentEvent":                reflect.ValueOf((*github.DiscussionCommentEvent)(nil)),
		"DiscussionCommentListOptions":          reflect.ValueOf((*github.DiscussionCommentListOptions)(nil)),
		"DiscussionEvent":                       reflect.ValueOf((*github.DiscussionEvent)(nil)),
		"DiscussionListOptions":                 reflect.ValueOf((*github.DiscussionListOptions)(nil)),
		"DismissStaleReviewsOnPushChanges":      reflect.ValueOf((*github.DismissStaleReviewsOnPushChanges)(nil)),
		"DismissalRestrictions":                 reflect.ValueOf((*github.DismissalRestrictions)(nil)),
		"DismissalRestrictionsRequest":          reflect.ValueOf((*github.DismissalRestrictionsRequest)(nil)),
		"DismissedReview":                       reflect.ValueOf((*github.DismissedReview)(nil)),
		"DispatchRequestOptions":                reflect.ValueOf((*github.DispatchRequestOptions)(nil)),
		"DraftReviewComment":                    reflect.ValueOf((*github.DraftReviewComment)(nil)),
		"EditBase":                              reflect.ValueOf((*github.EditBase)(nil)),
		"EditBody":                              reflect.ValueOf((*github.EditBody)(nil)),
		"EditChange":                            reflect.ValueOf((*github.EditChange)(nil)),
		"EditOwner":                             reflect.ValueOf((*github.EditOwner)(nil)),
		"EditRef":                               reflect.ValueOf((*github.EditRef)(nil)),
		"EditRepo":                              reflect.ValueOf((*github.EditRepo)(nil)),
		"EditSHA":                               reflect.ValueOf((*github.EditSHA)(nil)),
		"EditTitle":                             reflect.ValueOf((*github.EditTitle)(nil)),
		"EncryptedSecret":                       reflect.ValueOf((*github.EncryptedSecret)(nil)),
		"Enterprise":                            reflect.ValueOf((*github.Enterprise)(nil)),
		"EnterpriseSecurityAnalysisSettings":    reflect.ValueOf((*github.EnterpriseSecurityAnalysisSettings)(nil)),
		"EnterpriseService":                     reflect.ValueOf((*github.EnterpriseService)(nil)),
		"EnvResponse":                           reflect.ValueOf((*github.EnvResponse)(nil)),
		"EnvReviewers":                          reflect.ValueOf((*github.EnvReviewers)(nil)),
		"Environment":                           reflect.ValueOf((*github.Environment)(nil)),
		"EnvironmentListOptions":                reflect.ValueOf((*github.EnvironmentListOptions)(nil)),
		"Error":                                 reflect.ValueOf((*github.Error)(nil)),
		"ErrorBlock":                            reflect.ValueOf((*github.ErrorBlock)(nil)),
		"ErrorResponse":                         reflect.ValueOf((*github.ErrorResponse)(nil)),
		"Event":                                 reflect.ValueOf((*github.Event)(nil)),
		"ExternalGroup":                         reflect.ValueOf((*github.ExternalGroup)(nil)),
		"ExternalGroupList":                     reflect.ValueOf((*github.ExternalGroupList)(nil)),
		"ExternalGroupMember":                   reflect.ValueOf((*github.ExternalGroupMember)(nil)),
		"ExternalGroupTeam":                     reflect.ValueOf((*github.ExternalGroupTeam)(nil)),
		"FeedLink":                              reflect.ValueOf((*github.FeedLink)(nil)),
		"FeedLinks":                             reflect.ValueOf((*github.FeedLinks)(nil)),
		"Feeds":                                 reflect.ValueOf((*github.Feeds)(nil)),
		"FirstPatchedVersion":                   reflect.ValueOf((*github.FirstPatchedVersion)(nil)),
		"ForkEvent":                             reflect.ValueOf((*github.ForkEvent)(nil)),
		"GPGEmail":                              reflect.ValueOf((*github.GPGEmail)(nil)),
		"GPGKey":                                reflect.ValueOf((*github.GPGKey)(nil)),
		"GenerateJITConfigRequest":              reflect.ValueOf((*github.GenerateJITConfigRequest)(nil)),
		"GenerateNotesOptions":                  reflect.ValueOf((*github.GenerateNotesOptions)(nil)),
		"GetAuditLogOptions":                    reflect.ValueOf((*github.GetAuditLogOptions)(nil)),
		"Gist":                                  reflect.ValueOf((*github.Gist)(nil)),
		"GistComment":                           reflect.ValueOf((*github.GistComment)(nil)),
		"GistCommit":                            reflect.ValueOf((*github.GistCommit)(nil)),
		"GistFile":                              reflect.ValueOf((*github.GistFile)(nil)),
		"GistFilename":                          reflect.ValueOf((*github.GistFilename)(nil)),
		"GistFork":                              reflect.ValueOf((*github.GistFork)(nil)),
		"GistListOptions":                       reflect.ValueOf((*github.GistListOptions)(nil)),
		"GistStats":                             reflect.ValueOf((*github.GistStats)(nil)),
		"GistsService":                          reflect.ValueOf((*github.GistsService)(nil)),
		"GitHubAppAuthorizationEvent":           reflect.ValueOf((*github.GitHubAppAuthorizationEvent)(nil)),
		"GitObject":                             reflect.ValueOf((*github.GitObject)(nil)),
		"GitService":                            reflect.ValueOf((*github.GitService)(nil)),
		"Gitignore":                             reflect.ValueOf((*github.Gitignore)(nil)),
		"GitignoresService":                     reflect.ValueOf((*github.GitignoresService)(nil)),
		"GollumEvent":                           reflect.ValueOf((*github.GollumEvent)(nil)),
		"Grant":                                 reflect.ValueOf((*github.Grant)(nil)),
		"HeadCommit":                            reflect.ValueOf((*github.HeadCommit)(nil)),
		"Hook":                                  reflect.ValueOf((*github.Hook)(nil)),
		"HookConfig":                            reflect.ValueOf((*github.HookConfig)(nil)),
		"HookDelivery":                          reflect.ValueOf((*github.HookDelivery)(nil)),
		"HookRequest":                           reflect.ValueOf((*github.HookRequest)(nil)),
		"HookResponse":                          reflect.ValueOf((*github.HookResponse)(nil)),
		"HookStats":                             reflect.ValueOf((*github.HookStats)(nil)),
		"Hovercard":                             reflect.ValueOf((*github.Hovercard)(nil)),
		"HovercardOptions":                      reflect.ValueOf((*github.HovercardOptions)(nil)),
		"IDPGroup":                              reflect.ValueOf((*github.IDPGroup)(nil)),
		"IDPGroupList":                          reflect.ValueOf((*github.IDPGroupList)(nil)),
		"ImpersonateUserOptions":                reflect.ValueOf((*github.ImpersonateUserOptions)(nil)),
		"Import":                                reflect.ValueOf((*github.Import)(nil)),
		"Installation":                          reflect.ValueOf((*github.Installation)(nil)),
		"InstallationChanges":                   reflect.ValueOf((*github.InstallationChanges)(nil)),
		"InstallationEvent":                     reflect.ValueOf((*github.InstallationEvent)(nil)),
		"InstallationLoginChange":               reflect.ValueOf((*github.InstallationLoginChange)(nil)),
		"InstallationPermissions":               reflect.ValueOf((*github.InstallationPermissions)(nil)),
		"InstallationRepositoriesEvent":         reflect.ValueOf((*github.InstallationRepositoriesEvent)(nil)),
		"InstallationSlugChange":                reflect.ValueOf((*github.InstallationSlugChange)(nil)),
		"InstallationTargetEvent":               reflect.ValueOf((*github.InstallationTargetEvent)(nil)),
		"InstallationToken":                     reflect.ValueOf((*github.InstallationToken)(nil)),
		"InstallationTokenOptions":              reflect.ValueOf((*github.InstallationTokenOptions)(nil)),
		"InteractionRestriction":                reflect.ValueOf((*github.InteractionRestriction)(nil)),
		"InteractionsService":                   reflect.ValueOf((*github.InteractionsService)(nil)),
		"Invitation":                            reflect.ValueOf((*github.Invitation)(nil)),
		"Issue":                                 reflect.ValueOf((*github.Issue)(nil)),
		"IssueComment":                          reflect.ValueOf((*github.IssueComment)(nil)),
		"IssueCommentEvent":                     reflect.ValueOf((*github.IssueCommentEvent)(nil)),
		"IssueEvent":                            reflect.ValueOf((*github.IssueEvent)(nil)),
		"IssueImport":                           reflect.ValueOf((*github.IssueImport)(nil)),
		"IssueImportError":                      reflect.ValueOf((*github.IssueImportError)(nil)),
		"IssueImportRequest":                    reflect.ValueOf((*github.IssueImportRequest)(nil)),
		"IssueImportResponse":                   reflect.ValueOf((*github.IssueImportResponse)(nil)),
		"IssueImportService":                    reflect.ValueOf((*github.IssueImportService)(nil)),
		"IssueListByRepoOptions":                reflect.ValueOf((*github.IssueListByRepoOptions)(nil)),
		"IssueListCommentsOptions":              reflect.ValueOf((*github.IssueListCommentsOptions)(nil)),
		"IssueListOptions":                      reflect.ValueOf((*github.IssueListOptions)(nil)),
		"IssueRequest":                          reflect.ValueOf((*github.IssueRequest)(nil)),
		"IssueStats":                            reflect.ValueOf((*github.IssueStats)(nil)),
		"IssuesEvent":                           reflect.ValueOf((*github.IssuesEvent)(nil)),
		"IssuesSearchResult":                    reflect.ValueOf((*github.IssuesSearchResult)(nil)),
		"IssuesService":                         reflect.ValueOf((*github.IssuesService)(nil)),
		"JITRunnerConfig":                       reflect.ValueOf((*github.JITRunnerConfig)(nil)),
		"Jobs":                                  reflect.ValueOf((*github.Jobs)(nil)),
		"Key":                                   reflect.ValueOf((*github.Key)(nil)),
		"Label":                                 reflect.ValueOf((*github.Label)(nil)),
		"LabelEvent":                            reflect.ValueOf((*github.LabelEvent)(nil)),
		"LabelResult":                           reflect.ValueOf((*github.LabelResult)(nil)),
		"LabelsSearchResult":                    reflect.ValueOf((*github.LabelsSearchResult)(nil)),
		"LargeFile":                             reflect.ValueOf((*github.LargeFile)(nil)),
		"License":                               reflect.ValueOf((*github.License)(nil)),
		"LicensesService":                       reflect.ValueOf((*github.LicensesService)(nil)),
		"LinearHistoryRequirementEnforcementLevelChanges": reflect.ValueOf((*github.LinearHistoryRequirementEnforcementLevelChanges)(nil)),
		"ListAlertsOptions":                          reflect.ValueOf((*github.ListAlertsOptions)(nil)),
		"ListCheckRunsOptions":                       reflect.ValueOf((*github.ListCheckRunsOptions)(nil)),
		"ListCheckRunsResults":                       reflect.ValueOf((*github.ListCheckRunsResults)(nil)),
		"ListCheckSuiteOptions":                      reflect.ValueOf((*github.ListCheckSuiteOptions)(nil)),
		"ListCheckSuiteResults":                      reflect.ValueOf((*github.ListCheckSuiteResults)(nil)),
		"ListCodespaces":                             reflect.ValueOf((*github.ListCodespaces)(nil)),
		"ListCodespacesOptions":                      reflect.ValueOf((*github.ListCodespacesOptions)(nil)),
		"ListCollaboratorOptions":                    reflect.ValueOf((*github.ListCollaboratorOptions)(nil)),
		"ListCollaboratorsOptions":                   reflect.ValueOf((*github.ListCollaboratorsOptions)(nil)),
		"ListCommentReactionOptions":                 reflect.ValueOf((*github.ListCommentReactionOptions)(nil)),
		"ListContributorsOptions":                    reflect.ValueOf((*github.ListContributorsOptions)(nil)),
		"ListCursorOptions":                          reflect.ValueOf((*github.ListCursorOptions)(nil)),
		"ListExternalGroupsOptions":                  reflect.ValueOf((*github.ListExternalGroupsOptions)(nil)),
		"ListMembersOptions":                         reflect.ValueOf((*github.ListMembersOptions)(nil)),
		"ListOptions":                                reflect.ValueOf((*github.ListOptions)(nil)),
		"ListOrgMembershipsOptions":                  reflect.ValueOf((*github.ListOrgMembershipsOptions)(nil)),
		"ListOrgRunnerGroupOptions":                  reflect.ValueOf((*github.ListOrgRunnerGroupOptions)(nil)),
		"ListOutsideCollaboratorsOptions":            reflect.ValueOf((*github.ListOutsideCollaboratorsOptions)(nil)),
		"ListRepositories":                           reflect.ValueOf((*github.ListRepositories)(nil)),
		"ListSCIMProvisionedIdentitiesOptions":       reflect.ValueOf((*github.ListSCIMProvisionedIdentitiesOptions)(nil)),
		"ListWorkflowJobsOptions":                    reflect.ValueOf((*github.ListWorkflowJobsOptions)(nil)),
		"ListWorkflowRunsOptions":                    reflect.ValueOf((*github.ListWorkflowRunsOptions)(nil)),
		"Location":                                   reflect.ValueOf((*github.Location)(nil)),
		"LockBranch":                                 reflect.ValueOf((*github.LockBranch)(nil)),
		"LockIssueOptions":                           reflect.ValueOf((*github.LockIssueOptions)(nil)),
		"MarkdownOptions":                            reflect.ValueOf((*github.MarkdownOptions)(nil)),
		"MarketplacePendingChange":                   reflect.ValueOf((*github.MarketplacePendingChange)(nil)),
		"MarketplacePlan":                            reflect.ValueOf((*github.MarketplacePlan)(nil)),
		"MarketplacePlanAccount":                     reflect.ValueOf((*github.MarketplacePlanAccount)(nil)),
		"MarketplacePurchase":                        reflect.ValueOf((*github.MarketplacePurchase)(nil)),
		"MarketplacePurchaseAccount":                 reflect.ValueOf((*github.MarketplacePurchaseAccount)(nil)),
		"MarketplacePurchaseEvent":                   reflect.ValueOf((*github.MarketplacePurchaseEvent)(nil)),
		"MarketplaceService":                         reflect.ValueOf((*github.MarketplaceService)(nil)),
		"Match":                                      reflect.ValueOf((*github.Match)(nil)),
		"MemberEvent":                                reflect.ValueOf((*github.MemberEvent)(nil)),
		"Membership":                                 reflect.ValueOf((*github.Membership)(nil)),
		"MembershipEvent":                            reflect.ValueOf((*github.MembershipEvent)(nil)),
		"MergeGroup":                                 reflect.ValueOf((*github.MergeGroup)(nil)),
		"MergeGroupEvent":                            reflect.ValueOf((*github.MergeGroupEvent)(nil)),
		"Message":                                    reflect.ValueOf((*github.Message)(nil)),
		"MetaEvent":                                  reflect.ValueOf((*github.MetaEvent)(nil)),
		"Metric":                                     reflect.ValueOf((*github.Metric)(nil)),
		"Migration":                                  reflect.ValueOf((*github.Migration)(nil)),
		"MigrationOptions":                           reflect.ValueOf((*github.MigrationOptions)(nil)),
		"MigrationService":                           reflect.ValueOf((*github.MigrationService)(nil)),
		"Milestone":                                  reflect.ValueOf((*github.Milestone)(nil)),
		"MilestoneEvent":                             reflect.ValueOf((*github.MilestoneEvent)(nil)),
		"MilestoneListOptions":                       reflect.ValueOf((*github.MilestoneListOptions)(nil)),
		"MilestoneStats":                             reflect.ValueOf((*github.MilestoneStats)(nil)),
		"MinutesUsedBreakdown":                       reflect.ValueOf((*github.MinutesUsedBreakdown)(nil)),
		"MostRecentInstance":                         reflect.ValueOf((*github.MostRecentInstance)(nil)),
		"NewPullRequest":                             reflect.ValueOf((*github.NewPullRequest)(nil)),
		"NewTeam":                                    reflect.ValueOf((*github.NewTeam)(nil)),
		"Notification":                               reflect.ValueOf((*github.Notification)(nil)),
		"NotificationListOptions":                    reflect.ValueOf((*github.NotificationListOptions)(nil)),
		"NotificationSubject":                        reflect.ValueOf((*github.NotificationSubject)(nil)),
		"OAuthAPP":                                   reflect.ValueOf((*github.OAuthAPP)(nil)),
		"OIDCSubjectClaimCustomTemplate":             reflect.ValueOf((*github.OIDCSubjectClaimCustomTemplate)(nil)),
		"OrgBlockEvent":                              reflect.ValueOf((*github.OrgBlockEvent)(nil)),
		"OrgRequiredWorkflow":                        reflect.ValueOf((*github.OrgRequiredWorkflow)(nil)),
		"OrgRequiredWorkflows":                       reflect.ValueOf((*github.OrgRequiredWorkflows)(nil)),
		"OrgStats":                                   reflect.ValueOf((*github.OrgStats)(nil)),
		"Organization":                               reflect.ValueOf((*github.Organization)(nil)),
		"OrganizationCustomRepoRoles":                reflect.ValueOf((*github.OrganizationCustomRepoRoles)(nil)),
		"OrganizationEvent":                          reflect.ValueOf((*github.OrganizationEvent)(nil)),
		"OrganizationInstallations":                  reflect.ValueOf((*github.OrganizationInstallations)(nil)),
		"OrganizationsListOptions":                   reflect.ValueOf((*github.OrganizationsListOptions)(nil)),
		"OrganizationsService":                       reflect.ValueOf((*github.OrganizationsService)(nil)),
		"OwnerInfo":                                  reflect.ValueOf((*github.OwnerInfo)(nil)),
		"PRLink":                                     reflect.ValueOf((*github.PRLink)(nil)),
		"PRLinks":                                    reflect.ValueOf((*github.PRLinks)(nil)),
		"Package":                                    reflect.ValueOf((*github.Package)(nil)),
		"PackageBilling":                             reflect.ValueOf((*github.PackageBilling)(nil)),
		"PackageContainerMetadata":                   reflect.ValueOf((*github.PackageContainerMetadata)(nil)),
		"PackageEvent":                               reflect.ValueOf((*github.PackageEvent)(nil)),
		"PackageFile":                                reflect.ValueOf((*github.PackageFile)(nil)),
		"PackageListOptions":                         reflect.ValueOf((*github.PackageListOptions)(nil)),
		"PackageMetadata":                            reflect.ValueOf((*github.PackageMetadata)(nil)),
		"PackageRegistry":                            reflect.ValueOf((*github.PackageRegistry)(nil)),
		"PackageRelease":                             reflect.ValueOf((*github.PackageRelease)(nil)),
		"PackageVersion":                             reflect.ValueOf((*github.PackageVersion)(nil)),
		"Page":                                       reflect.ValueOf((*github.Page)(nil)),
		"PageBuildEvent":                             reflect.ValueOf((*github.PageBuildEvent)(nil)),
		"PageStats":                                  reflect.ValueOf((*github.PageStats)(nil)),
		"Pages":                                      reflect.ValueOf((*github.Pages)(nil)),
		"PagesBuild":                                 reflect.ValueOf((*github.PagesBuild)(nil)),
		"PagesDomain":                                reflect.ValueOf((*github.PagesDomain)(nil)),
		"PagesError":                                 reflect.ValueOf((*github.PagesError)(nil)),
		"PagesHTTPSCertificate":                      reflect.ValueOf((*github.PagesHTTPSCertificate)(nil)),
		"PagesHealthCheckResponse":                   reflect.ValueOf((*github.PagesHealthCheckResponse)(nil)),
		"PagesSource":                                reflect.ValueOf((*github.PagesSource)(nil)),
		"PagesUpdate":                                reflect.ValueOf((*github.PagesUpdate)(nil)),
		"PendingDeploymentsRequest":                  reflect.ValueOf((*github.PendingDeploymentsRequest)(nil)),
		"PersonalAccessTokenPermissions":             reflect.ValueOf((*github.PersonalAccessTokenPermissions)(nil)),
		"PersonalAccessTokenRequest":                 reflect.ValueOf((*github.PersonalAccessTokenRequest)(nil)),
		"PersonalAccessTokenRequestEvent":            reflect.ValueOf((*github.PersonalAccessTokenRequestEvent)(nil)),
		"PingEvent":                                  reflect.ValueOf((*github.PingEvent)(nil)),
		"Plan":                                       reflect.ValueOf((*github.Plan)(nil)),
		"PolicyOverrideReason":                       reflect.ValueOf((*github.PolicyOverrideReason)(nil)),
		"PreReceiveHook":                             reflect.ValueOf((*github.PreReceiveHook)(nil)),
		"PreferenceList":                             reflect.ValueOf((*github.PreferenceList)(nil)),
		"Project":                                    reflect.ValueOf((*github.Project)(nil)),
		"ProjectBody":                                reflect.ValueOf((*github.ProjectBody)(nil)),
		"ProjectCard":                                reflect.ValueOf((*github.ProjectCard)(nil)),
		"ProjectCardChange":                          reflect.ValueOf((*github.ProjectCardChange)(nil)),
		"ProjectCardEvent":                           reflect.ValueOf((*github.ProjectCardEvent)(nil)),
		"ProjectCardListOptions":                     reflect.ValueOf((*github.ProjectCardListOptions)(nil)),
		"ProjectCardMoveOptions":                     reflect.ValueOf((*github.ProjectCardMoveOptions)(nil)),
		"ProjectCardNote":                            reflect.ValueOf((*github.ProjectCardNote)(nil)),
		"ProjectCardOptions":                         reflect.ValueOf((*github.ProjectCardOptions)(nil)),
		"ProjectChange":                              reflect.ValueOf((*github.ProjectChange)(nil)),
		"ProjectCollaboratorOptions":                 reflect.ValueOf((*github.ProjectCollaboratorOptions)(nil)),
		"ProjectColumn":                              reflect.ValueOf((*github.ProjectColumn)(nil)),
		"ProjectColumnChange":                        reflect.ValueOf((*github.ProjectColumnChange)(nil)),
		"ProjectColumnEvent":                         reflect.ValueOf((*github.ProjectColumnEvent)(nil)),
		"ProjectColumnMoveOptions":                   reflect.ValueOf((*github.ProjectColumnMoveOptions)(nil)),
		"ProjectColumnName":                          reflect.ValueOf((*github.ProjectColumnName)(nil)),
		"ProjectColumnOptions":                       reflect.ValueOf((*github.ProjectColumnOptions)(nil)),
		"ProjectEvent":                               reflect.ValueOf((*github.ProjectEvent)(nil)),
		"ProjectListOptions":                         reflect.ValueOf((*github.ProjectListOptions)(nil)),
		"ProjectName":                                reflect.ValueOf((*github.ProjectName)(nil)),
		"ProjectOptions":                             reflect.ValueOf((*github.ProjectOptions)(nil)),
		"ProjectPermissionLevel":                     reflect.ValueOf((*github.ProjectPermissionLevel)(nil)),
		"ProjectV2Event":                             reflect.ValueOf((*github.ProjectV2Event)(nil)),
		"ProjectV2Item":                              reflect.ValueOf((*github.ProjectV2Item)(nil)),
		"ProjectV2ItemChange":                        reflect.ValueOf((*github.ProjectV2ItemChange)(nil)),
		"ProjectV2ItemEvent":                         reflect.ValueOf((*github.ProjectV2ItemEvent)(nil)),
		"ProjectsService":                            reflect.ValueOf((*github.ProjectsService)(nil)),
		"ProjectsV2":                                 reflect.ValueOf((*github.ProjectsV2)(nil)),
		"Protection":                                 reflect.ValueOf((*github.Protection)(nil)),
		"ProtectionChanges":                          reflect.ValueOf((*github.ProtectionChanges)(nil)),
		"ProtectionRequest":                          reflect.ValueOf((*github.ProtectionRequest)(nil)),
		"ProtectionRule":                             reflect.ValueOf((*github.ProtectionRule)(nil)),
		"PublicEvent":                                reflect.ValueOf((*github.PublicEvent)(nil)),
		"PublicKey":                                  reflect.ValueOf((*github.PublicKey)(nil)),
		"PullRequest":                                reflect.ValueOf((*github.PullRequest)(nil)),
		"PullRequestAutoMerge":                       reflect.ValueOf((*github.PullRequestAutoMerge)(nil)),
		"PullRequestBranch":                          reflect.ValueOf((*github.PullRequestBranch)(nil)),
		"PullRequestBranchUpdateOptions":             reflect.ValueOf((*github.PullRequestBranchUpdateOptions)(nil)),
		"PullRequestBranchUpdateResponse":            reflect.ValueOf((*github.PullRequestBranchUpdateResponse)(nil)),
		"PullRequestComment":                         reflect.ValueOf((*github.PullRequestComment)(nil)),
		"PullRequestEvent":                           reflect.ValueOf((*github.PullRequestEvent)(nil)),
		"PullRequestLinks":                           reflect.ValueOf((*github.PullRequestLinks)(nil)),
		"PullRequestListCommentsOptions":             reflect.ValueOf((*github.PullRequestListCommentsOptions)(nil)),
		"PullRequestListOptions":                     reflect.ValueOf((*github.PullRequestListOptions)(nil)),
		"PullRequestMergeResult":                     reflect.ValueOf((*github.PullRequestMergeResult)(nil)),
		"PullRequestOptions":                         reflect.ValueOf((*github.PullRequestOptions)(nil)),
		"PullRequestReview":                          reflect.ValueOf((*github.PullRequestReview)(nil)),
		"PullRequestReviewCommentEvent":              reflect.ValueOf((*github.PullRequestReviewCommentEvent)(nil)),
		"PullRequestReviewDismissalRequest":          reflect.ValueOf((*github.PullRequestReviewDismissalRequest)(nil)),
		"PullRequestReviewEvent":                     reflect.ValueOf((*github.PullRequestReviewEvent)(nil)),
		"PullRequestReviewRequest":                   reflect.ValueOf((*github.PullRequestReviewRequest)(nil)),
		"PullRequestReviewThreadEvent":               reflect.ValueOf((*github.PullRequestReviewThreadEvent)(nil)),
		"PullRequestReviewsEnforcement":              reflect.ValueOf((*github.PullRequestReviewsEnforcement)(nil)),
		"PullRequestReviewsEnforcementLevelChanges":  reflect.ValueOf((*github.PullRequestReviewsEnforcementLevelChanges)(nil)),
		"PullRequestReviewsEnforcementRequest":       reflect.ValueOf((*github.PullRequestReviewsEnforcementRequest)(nil)),
		"PullRequestReviewsEnforcementUpdate":        reflect.ValueOf((*github.PullRequestReviewsEnforcementUpdate)(nil)),
		"PullRequestRuleParameters":                  reflect.ValueOf((*github.PullRequestRuleParameters)(nil)),
		"PullRequestTargetEvent":                     reflect.ValueOf((*github.PullRequestTargetEvent)(nil)),
		"PullRequestThread":                          reflect.ValueOf((*github.PullRequestThread)(nil)),
		"PullRequestsService":                        reflect.ValueOf((*github.PullRequestsService)(nil)),
		"PullStats":                                  reflect.ValueOf((*github.PullStats)(nil)),
		"PunchCard":                                  reflect.ValueOf((*github.PunchCard)(nil)),
		"PushEvent":                                  reflect.ValueOf((*github.PushEvent)(nil)),
		"PushEventRepoOwner":                         reflect.ValueOf((*github.PushEventRepoOwner)(nil)),
		"PushEventRepository":                        reflect.ValueOf((*github.PushEventRepository)(nil)),
		"Rate":                                       reflect.ValueOf((*github.Rate)(nil)),
		"RateLimitError":                             reflect.ValueOf((*github.RateLimitError)(nil)),
		"RateLimits":                                 reflect.ValueOf((*github.RateLimits)(nil)),
		"RawOptions":                                 reflect.ValueOf((*github.RawOptions)(nil)),
		"RawType":                                    reflect.ValueOf((*github.RawType)(nil)),
		"Reaction":                                   reflect.ValueOf((*github.Reaction)(nil)),
		"Reactions":                                  reflect.ValueOf((*github.Reactions)(nil)),
		"ReactionsService":                           reflect.ValueOf((*github.ReactionsService)(nil)),
		"Reference":                                  reflect.ValueOf((*github.Reference)(nil)),
		"ReferenceListOptions":                       reflect.ValueOf((*github.ReferenceListOptions)(nil)),
		"RegistrationToken":                          reflect.ValueOf((*github.RegistrationToken)(nil)),
		"ReleaseAsset":                               reflect.ValueOf((*github.ReleaseAsset)(nil)),
		"ReleaseEvent":                               reflect.ValueOf((*github.ReleaseEvent)(nil)),
		"RemoveToken":                                reflect.ValueOf((*github.RemoveToken)(nil)),
		"Rename":                                     reflect.ValueOf((*github.Rename)(nil)),
		"RenameOrgResponse":                          reflect.ValueOf((*github.RenameOrgResponse)(nil)),
		"RepoDependencies":                           reflect.ValueOf((*github.RepoDependencies)(nil)),
		"RepoMergeUpstreamRequest":                   reflect.ValueOf((*github.RepoMergeUpstreamRequest)(nil)),
		"RepoMergeUpstreamResult":                    reflect.ValueOf((*github.RepoMergeUpstreamResult)(nil)),
		"RepoName":                                   reflect.ValueOf((*github.RepoName)(nil)),
		"RepoRequiredWorkflow":                       reflect.ValueOf((*github.RepoRequiredWorkflow)(nil)),
		"RepoRequiredWorkflows":                      reflect.ValueOf((*github.RepoRequiredWorkflows)(nil)),
		"RepoStats":                                  reflect.ValueOf((*github.RepoStats)(nil)),
		"RepoStatus":                                 reflect.ValueOf((*github.RepoStatus)(nil)),
		"RepositoriesSearchResult":                   reflect.ValueOf((*github.RepositoriesSearchResult)(nil)),
		"RepositoriesService":                        reflect.ValueOf((*github.RepositoriesService)(nil)),
		"Repository":                                 reflect.ValueOf((*github.Repository)(nil)),
		"RepositoryActionsAccessLevel":               reflect.ValueOf((*github.RepositoryActionsAccessLevel)(nil)),
		"RepositoryActiveCommitters":                 reflect.ValueOf((*github.RepositoryActiveCommitters)(nil)),
		"RepositoryAddCollaboratorOptions":           reflect.ValueOf((*github.RepositoryAddCollaboratorOptions)(nil)),
		"RepositoryComment":                          reflect.ValueOf((*github.RepositoryComment)(nil)),
		"RepositoryCommit":                           reflect.ValueOf((*github.RepositoryCommit)(nil)),
		"RepositoryContent":                          reflect.ValueOf((*github.RepositoryContent)(nil)),
		"RepositoryContentFileOptions":               reflect.ValueOf((*github.RepositoryContentFileOptions)(nil)),
		"RepositoryContentGetOptions":                reflect.ValueOf((*github.RepositoryContentGetOptions)(nil)),
		"RepositoryContentResponse":                  reflect.ValueOf((*github.RepositoryContentResponse)(nil)),
		"RepositoryCreateForkOptions":                reflect.ValueOf((*github.RepositoryCreateForkOptions)(nil)),
		"RepositoryDispatchEvent":                    reflect.ValueOf((*github.RepositoryDispatchEvent)(nil)),
		"RepositoryEvent":                            reflect.ValueOf((*github.RepositoryEvent)(nil)),
		"RepositoryImportEvent":                      reflect.ValueOf((*github.RepositoryImportEvent)(nil)),
		"RepositoryInvitation":                       reflect.ValueOf((*github.RepositoryInvitation)(nil)),
		"RepositoryLicense":                          reflect.ValueOf((*github.RepositoryLicense)(nil)),
		"RepositoryListAllOptions":                   reflect.ValueOf((*github.RepositoryListAllOptions)(nil)),
		"RepositoryListByOrgOptions":                 reflect.ValueOf((*github.RepositoryListByOrgOptions)(nil)),
		"RepositoryListForksOptions":                 reflect.ValueOf((*github.RepositoryListForksOptions)(nil)),
		"RepositoryListOptions":                      reflect.ValueOf((*github.RepositoryListOptions)(nil)),
		"RepositoryMergeRequest":                     reflect.ValueOf((*github.RepositoryMergeRequest)(nil)),
		"RepositoryParticipation":                    reflect.ValueOf((*github.RepositoryParticipation)(nil)),
		"RepositoryPermissionLevel":                  reflect.ValueOf((*github.RepositoryPermissionLevel)(nil)),
		"RepositoryRelease":                          reflect.ValueOf((*github.RepositoryRelease)(nil)),
		"RepositoryReleaseNotes":                     reflect.ValueOf((*github.RepositoryReleaseNotes)(nil)),
		"RepositoryRule":                             reflect.ValueOf((*github.RepositoryRule)(nil)),
		"RepositoryTag":                              reflect.ValueOf((*github.RepositoryTag)(nil)),
		"RepositoryVulnerabilityAlert":               reflect.ValueOf((*github.RepositoryVulnerabilityAlert)(nil)),
		"RepositoryVulnerabilityAlertEvent":          reflect.ValueOf((*github.RepositoryVulnerabilityAlertEvent)(nil)),
		"RequestOption":                              reflect.ValueOf((*github.RequestOption)(nil)),
		"RequestedAction":                            reflect.ValueOf((*github.RequestedAction)(nil)),
		"RequireCodeOwnerReviewChanges":              reflect.ValueOf((*github.RequireCodeOwnerReviewChanges)(nil)),
		"RequireLinearHistory":                       reflect.ValueOf((*github.RequireLinearHistory)(nil)),
		"RequiredConversationResolution":             reflect.ValueOf((*github.RequiredConversationResolution)(nil)),
		"RequiredConversationResolutionLevelChanges": reflect.ValueOf((*github.RequiredConversationResolutionLevelChanges)(nil)),
		"RequiredDeploymentEnvironmentsRuleParameters": reflect.ValueOf((*github.RequiredDeploymentEnvironmentsRuleParameters)(nil)),
		"RequiredDeploymentsEnforcementLevelChanges":   reflect.ValueOf((*github.RequiredDeploymentsEnforcementLevelChanges)(nil)),
		"RequiredReviewer":                             reflect.ValueOf((*github.RequiredReviewer)(nil)),
		"RequiredStatusCheck":                          reflect.ValueOf((*github.RequiredStatusCheck)(nil)),
		"RequiredStatusChecks":                         reflect.ValueOf((*github.RequiredStatusChecks)(nil)),
		"RequiredStatusChecksChanges":                  reflect.ValueOf((*github.RequiredStatusChecksChanges)(nil)),
		"RequiredStatusChecksEnforcementLevelChanges":  reflect.ValueOf((*github.RequiredStatusChecksEnforcementLevelChanges)(nil)),
		"RequiredStatusChecksRequest":                  reflect.ValueOf((*github.RequiredStatusChecksRequest)(nil)),
		"RequiredStatusChecksRuleParameters":           reflect.ValueOf((*github.RequiredStatusChecksRuleParameters)(nil)),
		"RequiredWorkflowSelectedRepos":                reflect.ValueOf((*github.RequiredWorkflowSelectedRepos)(nil)),
		"Response":                                     reflect.ValueOf((*github.Response)(nil)),
		"ReviewPersonalAccessTokenRequestOptions":      reflect.ValueOf((*github.ReviewPersonalAccessTokenRequestOptions)(nil)),
		"Reviewers":                     reflect.ValueOf((*github.Reviewers)(nil)),
		"ReviewersRequest":              reflect.ValueOf((*github.ReviewersRequest)(nil)),
		"Rule":                          reflect.ValueOf((*github.Rule)(nil)),
		"RulePatternParameters":         reflect.ValueOf((*github.RulePatternParameters)(nil)),
		"RuleRequiredStatusChecks":      reflect.ValueOf((*github.RuleRequiredStatusChecks)(nil)),
		"Ruleset":                       reflect.ValueOf((*github.Ruleset)(nil)),
		"RulesetConditions":             reflect.ValueOf((*github.RulesetConditions)(nil)),
		"RulesetLink":                   reflect.ValueOf((*github.RulesetLink)(nil)),
		"RulesetLinks":                  reflect.ValueOf((*github.RulesetLinks)(nil)),
		"RulesetRefConditionParameters": reflect.ValueOf((*github.RulesetRefConditionParameters)(nil)),
		"RulesetRepositoryIDsConditionParameters":   reflect.ValueOf((*github.RulesetRepositoryIDsConditionParameters)(nil)),
		"RulesetRepositoryNamesConditionParameters": reflect.ValueOf((*github.RulesetRepositoryNamesConditionParameters)(nil)),
		"Runner":                             reflect.ValueOf((*github.Runner)(nil)),
		"RunnerApplicationDownload":          reflect.ValueOf((*github.RunnerApplicationDownload)(nil)),
		"RunnerGroup":                        reflect.ValueOf((*github.RunnerGroup)(nil)),
		"RunnerGroups":                       reflect.ValueOf((*github.RunnerGroups)(nil)),
		"RunnerLabels":                       reflect.ValueOf((*github.RunnerLabels)(nil)),
		"Runners":                            reflect.ValueOf((*github.Runners)(nil)),
		"SARIFUpload":                        reflect.ValueOf((*github.SARIFUpload)(nil)),
		"SBOM":                               reflect.ValueOf((*github.SBOM)(nil)),
		"SBOMInfo":                           reflect.ValueOf((*github.SBOMInfo)(nil)),
		"SCIMMeta":                           reflect.ValueOf((*github.SCIMMeta)(nil)),
		"SCIMProvisionedIdentities":          reflect.ValueOf((*github.SCIMProvisionedIdentities)(nil)),
		"SCIMService":                        reflect.ValueOf((*github.SCIMService)(nil)),
		"SCIMUserAttributes":                 reflect.ValueOf((*github.SCIMUserAttributes)(nil)),
		"SCIMUserEmail":                      reflect.ValueOf((*github.SCIMUserEmail)(nil)),
		"SCIMUserName":                       reflect.ValueOf((*github.SCIMUserName)(nil)),
		"SSHSigningKey":                      reflect.ValueOf((*github.SSHSigningKey)(nil)),
		"SarifAnalysis":                      reflect.ValueOf((*github.SarifAnalysis)(nil)),
		"SarifID":                            reflect.ValueOf((*github.SarifID)(nil)),
		"ScanningAnalysis":                   reflect.ValueOf((*github.ScanningAnalysis)(nil)),
		"Scope":                              reflect.ValueOf((*github.Scope)(nil)),
		"SearchOptions":                      reflect.ValueOf((*github.SearchOptions)(nil)),
		"SearchService":                      reflect.ValueOf((*github.SearchService)(nil)),
		"Secret":                             reflect.ValueOf((*github.Secret)(nil)),
		"SecretScanning":                     reflect.ValueOf((*github.SecretScanning)(nil)),
		"SecretScanningAlert":                reflect.ValueOf((*github.SecretScanningAlert)(nil)),
		"SecretScanningAlertEvent":           reflect.ValueOf((*github.SecretScanningAlertEvent)(nil)),
		"SecretScanningAlertListOptions":     reflect.ValueOf((*github.SecretScanningAlertListOptions)(nil)),
		"SecretScanningAlertLocation":        reflect.ValueOf((*github.SecretScanningAlertLocation)(nil)),
		"SecretScanningAlertLocationDetails": reflect.ValueOf((*github.SecretScanningAlertLocationDetails)(nil)),
		"SecretScanningAlertUpdateOptions":   reflect.ValueOf((*github.SecretScanningAlertUpdateOptions)(nil)),
		"SecretScanningPushProtection":       reflect.ValueOf((*github.SecretScanningPushProtection)(nil)),
		"SecretScanningService":              reflect.ValueOf((*github.SecretScanningService)(nil)),
		"Secrets":                            reflect.ValueOf((*github.Secrets)(nil)),
		"SecurityAdvisoriesService":          reflect.ValueOf((*github.SecurityAdvisoriesService)(nil)),
		"SecurityAdvisory":                   reflect.ValueOf((*github.SecurityAdvisory)(nil)),
		"SecurityAdvisoryEvent":              reflect.ValueOf((*github.SecurityAdvisoryEvent)(nil)),
		"SecurityAndAnalysis":                reflect.ValueOf((*github.SecurityAndAnalysis)(nil)),
		"SecurityAndAnalysisChange":          reflect.ValueOf((*github.SecurityAndAnalysisChange)(nil)),
		"SecurityAndAnalysisChangeFrom":      reflect.ValueOf((*github.SecurityAndAnalysisChangeFrom)(nil)),
		"SecurityAndAnalysisEvent":           reflect.ValueOf((*github.SecurityAndAnalysisEvent)(nil)),
		"SelectedRepoIDs":                    reflect.ValueOf((*github.SelectedRepoIDs)(nil)),
		"SelectedReposList":                  reflect.ValueOf((*github.SelectedReposList)(nil)),
		"ServiceHook":                        reflect.ValueOf((*github.ServiceHook)(nil)),
		"SetRepoAccessRunnerGroupRequest":    reflect.ValueOf((*github.SetRepoAccessRunnerGroupRequest)(nil)),
		"SetRunnerGroupRunnersRequest":       reflect.ValueOf((*github.SetRunnerGroupRunnersRequest)(nil)),
		"SignatureRequirementEnforcementLevelChanges": reflect.ValueOf((*github.SignatureRequirementEnforcementLevelChanges)(nil)),
		"SignatureVerification":                       reflect.ValueOf((*github.SignatureVerification)(nil)),
		"SignaturesProtectedBranch":                   reflect.ValueOf((*github.SignaturesProtectedBranch)(nil)),
		"Source":                                      reflect.ValueOf((*github.Source)(nil)),
		"SourceImportAuthor":                          reflect.ValueOf((*github.SourceImportAuthor)(nil)),
		"StarEvent":                                   reflect.ValueOf((*github.StarEvent)(nil)),
		"Stargazer":                                   reflect.ValueOf((*github.Stargazer)(nil)),
		"StarredRepository":                           reflect.ValueOf((*github.StarredRepository)(nil)),
		"StatusEvent":                                 reflect.ValueOf((*github.StatusEvent)(nil)),
		"StorageBilling":                              reflect.ValueOf((*github.StorageBilling)(nil)),
		"Subscription":                                reflect.ValueOf((*github.Subscription)(nil)),
		"Tag":                                         reflect.ValueOf((*github.Tag)(nil)),
		"TagProtection":                               reflect.ValueOf((*github.TagProtection)(nil)),
		"TaskStep":                                    reflect.ValueOf((*github.TaskStep)(nil)),
		"Team":                                        reflect.ValueOf((*github.Team)(nil)),
		"TeamAddEvent":                                reflect.ValueOf((*github.TeamAddEvent)(nil)),
		"TeamAddTeamMembershipOptions":                reflect.ValueOf((*github.TeamAddTeamMembershipOptions)(nil)),
		"TeamAddTeamRepoOptions":                      reflect.ValueOf((*github.TeamAddTeamRepoOptions)(nil)),
		"TeamChange":                                  reflect.ValueOf((*github.TeamChange)(nil)),
		"TeamDescription":                             reflect.ValueOf((*github.TeamDescription)(nil)),
		"TeamDiscussion":                              reflect.ValueOf((*github.TeamDiscussion)(nil)),
		"TeamEvent":                                   reflect.ValueOf((*github.TeamEvent)(nil)),
		"TeamLDAPMapping":                             reflect.ValueOf((*github.TeamLDAPMapping)(nil)),
		"TeamListTeamMembersOptions":                  reflect.ValueOf((*github.TeamListTeamMembersOptions)(nil)),
		"TeamName":                                    reflect.ValueOf((*github.TeamName)(nil)),
		"TeamPermissions":                             reflect.ValueOf((*github.TeamPermissions)(nil)),
		"TeamPermissionsFrom":                         reflect.ValueOf((*github.TeamPermissionsFrom)(nil)),
		"TeamPrivacy":                                 reflect.ValueOf((*github.TeamPrivacy)(nil)),
		"TeamProjectOptions":                          reflect.ValueOf((*github.TeamProjectOptions)(nil)),
		"TeamRepository":                              reflect.ValueOf((*github.TeamRepository)(nil)),
		"TeamsService":                                reflect.ValueOf((*github.TeamsService)(nil)),
		"TemplateRepoRequest":                         reflect.ValueOf((*github.TemplateRepoRequest)(nil)),
		"TextMatch":                                   reflect.ValueOf((*github.TextMatch)(nil)),
		"Timeline":                                    reflect.ValueOf((*github.Timeline)(nil)),
		"Timestamp":                                   reflect.ValueOf((*github.Timestamp)(nil)),
		"Tool":                                        reflect.ValueOf((*github.Tool)(nil)),
		"TopicResult":                                 reflect.ValueOf((*github.TopicResult)(nil)),
		"TopicsSearchResult":                          reflect.ValueOf((*github.TopicsSearchResult)(nil)),
		"TotalCacheUsage":                             reflect.ValueOf((*github.TotalCacheUsage)(nil)),
		"TrafficBreakdownOptions":                     reflect.ValueOf((*github.TrafficBreakdownOptions)(nil)),
		"TrafficClones":                               reflect.ValueOf((*github.TrafficClones)(nil)),
		"TrafficData":                                 reflect.ValueOf((*github.TrafficData)(nil)),
		"TrafficPath":                                 reflect.ValueOf((*github.TrafficPath)(nil)),
		"TrafficReferrer":                             reflect.ValueOf((*github.TrafficReferrer)(nil)),
		"TrafficViews":                                reflect.ValueOf((*github.TrafficViews)(nil)),
		"TransferRequest":                             reflect.ValueOf((*github.TransferRequest)(nil)),
		"Tree":                                        reflect.ValueOf((*github.Tree)(nil)),
		"TreeEntry":                                   reflect.ValueOf((*github.TreeEntry)(nil)),
		"TwoFactorAuthError":                          reflect.ValueOf((*github.TwoFactorAuthError)(nil)),
		"UnauthenticatedRateLimitedTransport":         reflect.ValueOf((*github.UnauthenticatedRateLimitedTransport)(nil)),
		"UpdateAllowsFetchAndMergeRuleParameters": reflect.ValueOf((*github.UpdateAllowsFetchAndMergeRuleParameters)(nil)),
		"UpdateAttributeForSCIMUserOperations":    reflect.ValueOf((*github.UpdateAttributeForSCIMUserOperations)(nil)),
		"UpdateAttributeForSCIMUserOptions":       reflect.ValueOf((*github.UpdateAttributeForSCIMUserOptions)(nil)),
		"UpdateCheckRunOptions":                   reflect.ValueOf((*github.UpdateCheckRunOptions)(nil)),
		"UpdateDefaultSetupConfigurationOptions":  reflect.ValueOf((*github.UpdateDefaultSetupConfigurationOptions)(nil)),
		"UpdateDefaultSetupConfigurationResponse": reflect.ValueOf((*github.UpdateDefaultSetupConfigurationResponse)(nil)),
		"UpdateRunnerGroupRequest":                reflect.ValueOf((*github.UpdateRunnerGroupRequest)(nil)),
		"UploadOptions":                           reflect.ValueOf((*github.UploadOptions)(nil)),
		"User":                                    reflect.ValueOf((*github.User)(nil)),
		"UserAuthorization":                       reflect.ValueOf((*github.UserAuthorization)(nil)),
		"UserContext":                             reflect.ValueOf((*github.UserContext)(nil)),
		"UserEmail":                               reflect.ValueOf((*github.UserEmail)(nil)),
		"UserEvent":                               reflect.ValueOf((*github.UserEvent)(nil)),
		"UserLDAPMapping":                         reflect.ValueOf((*github.UserLDAPMapping)(nil)),
		"UserListOptions":                         reflect.ValueOf((*github.UserListOptions)(nil)),
		"UserMigration":                           reflect.ValueOf((*github.UserMigration)(nil)),
		"UserMigrationOptions":                    reflect.ValueOf((*github.UserMigrationOptions)(nil)),
		"UserStats":                               reflect.ValueOf((*github.UserStats)(nil)),
		"UserSuspendOptions":                      reflect.ValueOf((*github.UserSuspendOptions)(nil)),
		"UsersSearchResult":                       reflect.ValueOf((*github.UsersSearchResult)(nil)),
		"UsersService":                            reflect.ValueOf((*github.UsersService)(nil)),
		"VulnerabilityPackage":                    reflect.ValueOf((*github.VulnerabilityPackage)(nil)),
		"WatchEvent":                              reflect.ValueOf((*github.WatchEvent)(nil)),
		"WebHookAuthor":                           reflect.ValueOf((*github.WebHookAuthor)(nil)),
		"WebHookCommit":                           reflect.ValueOf((*github.WebHookCommit)(nil)),
		"WebHookPayload":                          reflect.ValueOf((*github.WebHookPayload)(nil)),
		"WeeklyCommitActivity":                    reflect.ValueOf((*github.WeeklyCommitActivity)(nil)),
		"WeeklyStats":                             reflect.ValueOf((*github.WeeklyStats)(nil)),
		"Workflow":                                reflect.ValueOf((*github.Workflow)(nil)),
		"WorkflowBill":                            reflect.ValueOf((*github.WorkflowBill)(nil)),
		"WorkflowBillMap":                         reflect.ValueOf((*github.WorkflowBillMap)(nil)),
		"WorkflowDispatchEvent":                   reflect.ValueOf((*github.WorkflowDispatchEvent)(nil)),
		"WorkflowJob":                             reflect.ValueOf((*github.WorkflowJob)(nil)),
		"WorkflowJobEvent":                        reflect.ValueOf((*github.WorkflowJobEvent)(nil)),
		"WorkflowRun":                             reflect.ValueOf((*github.WorkflowRun)(nil)),
		"WorkflowRunAttemptOptions":               reflect.ValueOf((*github.WorkflowRunAttemptOptions)(nil)),
		"WorkflowRunBill":                         reflect.ValueOf((*github.WorkflowRunBill)(nil)),
		"WorkflowRunBillMap":                      reflect.ValueOf((*github.WorkflowRunBillMap)(nil)),
		"WorkflowRunEvent":                        reflect.ValueOf((*github.WorkflowRunEvent)(nil)),
		"WorkflowRunJobRun":                       reflect.ValueOf((*github.WorkflowRunJobRun)(nil)),
		"WorkflowRunUsage":                        reflect.ValueOf((*github.WorkflowRunUsage)(nil)),
		"WorkflowRuns":                            reflect.ValueOf((*github.WorkflowRuns)(nil)),
		"WorkflowUsage":                           reflect.ValueOf((*github.WorkflowUsage)(nil)),
		"Workflows":                               reflect.ValueOf((*github.Workflows)(nil)),
	}
}
