// Code generated by 'yaegi extract github.com/invopop/jsonschema'. DO NOT EDIT.

package symbol

import (
	"github.com/invopop/jsonschema"
	"reflect"
)

func init() {
	Symbols["github.com/invopop/jsonschema/jsonschema"] = map[string]reflect.Value{
		// function, constant and variable definitions
		"EmptyID":           reflect.ValueOf(jsonschema.EmptyID),
		"ExtractGoComments": reflect.ValueOf(jsonschema.ExtractGoComments),
		"FalseSchema":       reflect.ValueOf(&jsonschema.FalseSchema).Elem(),
		"NewProperties":     reflect.ValueOf(jsonschema.NewProperties),
		"Reflect":           reflect.ValueOf(jsonschema.Reflect),
		"ReflectFromType":   reflect.ValueOf(jsonschema.ReflectFromType),
		"ToSnakeCase":       reflect.ValueOf(jsonschema.ToSnakeCase),
		"TrueSchema":        reflect.ValueOf(&jsonschema.TrueSchema).Elem(),
		"Version":           reflect.ValueOf(&jsonschema.Version).Elem(),

		// type definitions
		"Definitions": reflect.ValueOf((*jsonschema.Definitions)(nil)),
		"ID":          reflect.ValueOf((*jsonschema.ID)(nil)),
		"Reflector":   reflect.ValueOf((*jsonschema.Reflector)(nil)),
		"Schema":      reflect.ValueOf((*jsonschema.Schema)(nil)),
	}
}
