// Code generated by 'yaegi extract github.com/markbates/goth/gothic'. DO NOT EDIT.

package symbol

import (
	"github.com/markbates/goth/gothic"
	"go/constant"
	"go/token"
	"reflect"
)

func init() {
	Symbols["github.com/markbates/goth/gothic/gothic"] = map[string]reflect.Value{
		// function, constant and variable definitions
		"GetContextWithProvider": reflect.ValueOf(gothic.GetContextWithProvider),
		"GetState":               reflect.ValueOf(&gothic.GetState).Elem(),
		"NewHandler":             reflect.ValueOf(gothic.NewHandler),
		"ProviderParamKey":       reflect.ValueOf(gothic.ProviderParamKey),
		"SessionName":            reflect.ValueOf(constant.MakeFromLiteral("\"_gothic_session\"", token.STRING, 0)),
		"SetState":               reflect.ValueOf(&gothic.SetState).Elem(),
		"WithProviders":          reflect.ValueOf(gothic.WithProviders),

		// type definitions
		"Handler": reflect.ValueOf((*gothic.Handler)(nil)),
		"Option":  reflect.ValueOf((*gothic.Option)(nil)),
	}
}
