// Code generated by 'yaegi extract github.com/google/gopacket'. DO NOT EDIT.

package symbol

import (
	"github.com/google/gopacket"
	"go/constant"
	"go/token"
	"reflect"
)

func init() {
	Symbols["github.com/google/gopacket/gopacket"] = map[string]reflect.Value{
		// function, constant and variable definitions
		"ConcatFinitePacketDataSources":  reflect.ValueOf(gopacket.ConcatFinitePacketDataSources),
		"DecodeFragment":                 reflect.ValueOf(&gopacket.DecodeFragment).Elem(),
		"DecodePayload":                  reflect.ValueOf(&gopacket.DecodePayload).Elem(),
		"DecodeStreamsAsDatagrams":       reflect.ValueOf(&gopacket.DecodeStreamsAsDatagrams).Elem(),
		"DecodeUnknown":                  reflect.ValueOf(&gopacket.DecodeUnknown).Elem(),
		"DecodersByLayerName":            reflect.ValueOf(&gopacket.DecodersByLayerName).Elem(),
		"Default":                        reflect.ValueOf(&gopacket.Default).Elem(),
		"EndpointInvalid":                reflect.ValueOf(&gopacket.EndpointInvalid).Elem(),
		"FlowFromEndpoints":              reflect.ValueOf(gopacket.FlowFromEndpoints),
		"InvalidEndpoint":                reflect.ValueOf(&gopacket.InvalidEndpoint).Elem(),
		"InvalidFlow":                    reflect.ValueOf(&gopacket.InvalidFlow).Elem(),
		"LayerDump":                      reflect.ValueOf(gopacket.LayerDump),
		"LayerGoString":                  reflect.ValueOf(gopacket.LayerGoString),
		"LayerString":                    reflect.ValueOf(gopacket.LayerString),
		"LayerTypeDecodeFailure":         reflect.ValueOf(&gopacket.LayerTypeDecodeFailure).Elem(),
		"LayerTypeFragment":              reflect.ValueOf(&gopacket.LayerTypeFragment).Elem(),
		"LayerTypePayload":               reflect.ValueOf(&gopacket.LayerTypePayload).Elem(),
		"LayerTypeZero":                  reflect.ValueOf(&gopacket.LayerTypeZero).Elem(),
		"LayersDecoder":                  reflect.ValueOf(gopacket.LayersDecoder),
		"Lazy":                           reflect.ValueOf(&gopacket.Lazy).Elem(),
		"LongBytesGoString":              reflect.ValueOf(gopacket.LongBytesGoString),
		"MaxEndpointSize":                reflect.ValueOf(constant.MakeFromLiteral("16", token.INT, 0)),
		"NewDecodingLayerParser":         reflect.ValueOf(gopacket.NewDecodingLayerParser),
		"NewEndpoint":                    reflect.ValueOf(gopacket.NewEndpoint),
		"NewFlow":                        reflect.ValueOf(gopacket.NewFlow),
		"NewLayerClass":                  reflect.ValueOf(gopacket.NewLayerClass),
		"NewLayerClassMap":               reflect.ValueOf(gopacket.NewLayerClassMap),
		"NewLayerClassSlice":             reflect.ValueOf(gopacket.NewLayerClassSlice),
		"NewPacket":                      reflect.ValueOf(gopacket.NewPacket),
		"NewPacketSource":                reflect.ValueOf(gopacket.NewPacketSource),
		"NewSerializeBuffer":             reflect.ValueOf(gopacket.NewSerializeBuffer),
		"NewSerializeBufferExpectedSize": reflect.ValueOf(gopacket.NewSerializeBufferExpectedSize),
		"NilDecodeFeedback":              reflect.ValueOf(&gopacket.NilDecodeFeedback).Elem(),
		"NoCopy":                         reflect.ValueOf(&gopacket.NoCopy).Elem(),
		"OverrideLayerType":              reflect.ValueOf(gopacket.OverrideLayerType),
		"RegisterEndpointType":           reflect.ValueOf(gopacket.RegisterEndpointType),
		"RegisterLayerType":              reflect.ValueOf(gopacket.RegisterLayerType),
		"SerializeLayers":                reflect.ValueOf(gopacket.SerializeLayers),
		"SerializePacket":                reflect.ValueOf(gopacket.SerializePacket),
		"TimestampResolutionCaptureInfo": reflect.ValueOf(&gopacket.TimestampResolutionCaptureInfo).Elem(),
		"TimestampResolutionInvalid":     reflect.ValueOf(&gopacket.TimestampResolutionInvalid).Elem(),
		"TimestampResolutionMicrosecond": reflect.ValueOf(&gopacket.TimestampResolutionMicrosecond).Elem(),
		"TimestampResolutionMillisecond": reflect.ValueOf(&gopacket.TimestampResolutionMillisecond).Elem(),
		"TimestampResolutionNTP":         reflect.ValueOf(&gopacket.TimestampResolutionNTP).Elem(),
		"TimestampResolutionNanosecond":  reflect.ValueOf(&gopacket.TimestampResolutionNanosecond).Elem(),

		// type definitions
		"ApplicationLayer":           reflect.ValueOf((*gopacket.ApplicationLayer)(nil)),
		"CaptureInfo":                reflect.ValueOf((*gopacket.CaptureInfo)(nil)),
		"DecodeFailure":              reflect.ValueOf((*gopacket.DecodeFailure)(nil)),
		"DecodeFeedback":             reflect.ValueOf((*gopacket.DecodeFeedback)(nil)),
		"DecodeFunc":                 reflect.ValueOf((*gopacket.DecodeFunc)(nil)),
		"DecodeOptions":              reflect.ValueOf((*gopacket.DecodeOptions)(nil)),
		"Decoder":                    reflect.ValueOf((*gopacket.Decoder)(nil)),
		"DecodingLayer":              reflect.ValueOf((*gopacket.DecodingLayer)(nil)),
		"DecodingLayerArray":         reflect.ValueOf((*gopacket.DecodingLayerArray)(nil)),
		"DecodingLayerContainer":     reflect.ValueOf((*gopacket.DecodingLayerContainer)(nil)),
		"DecodingLayerFunc":          reflect.ValueOf((*gopacket.DecodingLayerFunc)(nil)),
		"DecodingLayerMap":           reflect.ValueOf((*gopacket.DecodingLayerMap)(nil)),
		"DecodingLayerParser":        reflect.ValueOf((*gopacket.DecodingLayerParser)(nil)),
		"DecodingLayerParserOptions": reflect.ValueOf((*gopacket.DecodingLayerParserOptions)(nil)),
		"DecodingLayerSparse":        reflect.ValueOf((*gopacket.DecodingLayerSparse)(nil)),
		"Dumper":                     reflect.ValueOf((*gopacket.Dumper)(nil)),
		"Endpoint":                   reflect.ValueOf((*gopacket.Endpoint)(nil)),
		"EndpointType":               reflect.ValueOf((*gopacket.EndpointType)(nil)),
		"EndpointTypeMetadata":       reflect.ValueOf((*gopacket.EndpointTypeMetadata)(nil)),
		"ErrorLayer":                 reflect.ValueOf((*gopacket.ErrorLayer)(nil)),
		"Flow":                       reflect.ValueOf((*gopacket.Flow)(nil)),
		"Fragment":                   reflect.ValueOf((*gopacket.Fragment)(nil)),
		"Layer":                      reflect.ValueOf((*gopacket.Layer)(nil)),
		"LayerClass":                 reflect.ValueOf((*gopacket.LayerClass)(nil)),
		"LayerClassMap":              reflect.ValueOf((*gopacket.LayerClassMap)(nil)),
		"LayerClassSlice":            reflect.ValueOf((*gopacket.LayerClassSlice)(nil)),
		"LayerType":                  reflect.ValueOf((*gopacket.LayerType)(nil)),
		"LayerTypeMetadata":          reflect.ValueOf((*gopacket.LayerTypeMetadata)(nil)),
		"LinkLayer":                  reflect.ValueOf((*gopacket.LinkLayer)(nil)),
		"NetworkLayer":               reflect.ValueOf((*gopacket.NetworkLayer)(nil)),
		"Packet":                     reflect.ValueOf((*gopacket.Packet)(nil)),
		"PacketBuilder":              reflect.ValueOf((*gopacket.PacketBuilder)(nil)),
		"PacketDataSource":           reflect.ValueOf((*gopacket.PacketDataSource)(nil)),
		"PacketMetadata":             reflect.ValueOf((*gopacket.PacketMetadata)(nil)),
		"PacketSource":               reflect.ValueOf((*gopacket.PacketSource)(nil)),
		"PacketSourceResolution":     reflect.ValueOf((*gopacket.PacketSourceResolution)(nil)),
		"Payload":                    reflect.ValueOf((*gopacket.Payload)(nil)),
		"SerializableLayer":          reflect.ValueOf((*gopacket.SerializableLayer)(nil)),
		"SerializeBuffer":            reflect.ValueOf((*gopacket.SerializeBuffer)(nil)),
		"SerializeOptions":           reflect.ValueOf((*gopacket.SerializeOptions)(nil)),
		"TimestampResolution":        reflect.ValueOf((*gopacket.TimestampResolution)(nil)),
		"TransportLayer":             reflect.ValueOf((*gopacket.TransportLayer)(nil)),
		"UnsupportedLayerType":       reflect.ValueOf((*gopacket.UnsupportedLayerType)(nil)),
		"ZeroCopyPacketDataSource":   reflect.ValueOf((*gopacket.ZeroCopyPacketDataSource)(nil)),

		// interface wrapper definitions
		"_ApplicationLayer":         reflect.ValueOf((*_github_com_google_gopacket_ApplicationLayer)(nil)),
		"_DecodeFeedback":           reflect.ValueOf((*_github_com_google_gopacket_DecodeFeedback)(nil)),
		"_Decoder":                  reflect.ValueOf((*_github_com_google_gopacket_Decoder)(nil)),
		"_DecodingLayer":            reflect.ValueOf((*_github_com_google_gopacket_DecodingLayer)(nil)),
		"_DecodingLayerContainer":   reflect.ValueOf((*_github_com_google_gopacket_DecodingLayerContainer)(nil)),
		"_Dumper":                   reflect.ValueOf((*_github_com_google_gopacket_Dumper)(nil)),
		"_ErrorLayer":               reflect.ValueOf((*_github_com_google_gopacket_ErrorLayer)(nil)),
		"_Layer":                    reflect.ValueOf((*_github_com_google_gopacket_Layer)(nil)),
		"_LayerClass":               reflect.ValueOf((*_github_com_google_gopacket_LayerClass)(nil)),
		"_LinkLayer":                reflect.ValueOf((*_github_com_google_gopacket_LinkLayer)(nil)),
		"_NetworkLayer":             reflect.ValueOf((*_github_com_google_gopacket_NetworkLayer)(nil)),
		"_Packet":                   reflect.ValueOf((*_github_com_google_gopacket_Packet)(nil)),
		"_PacketBuilder":            reflect.ValueOf((*_github_com_google_gopacket_PacketBuilder)(nil)),
		"_PacketDataSource":         reflect.ValueOf((*_github_com_google_gopacket_PacketDataSource)(nil)),
		"_PacketSourceResolution":   reflect.ValueOf((*_github_com_google_gopacket_PacketSourceResolution)(nil)),
		"_SerializableLayer":        reflect.ValueOf((*_github_com_google_gopacket_SerializableLayer)(nil)),
		"_SerializeBuffer":          reflect.ValueOf((*_github_com_google_gopacket_SerializeBuffer)(nil)),
		"_TransportLayer":           reflect.ValueOf((*_github_com_google_gopacket_TransportLayer)(nil)),
		"_ZeroCopyPacketDataSource": reflect.ValueOf((*_github_com_google_gopacket_ZeroCopyPacketDataSource)(nil)),
	}
}

// _github_com_google_gopacket_ApplicationLayer is an interface wrapper for ApplicationLayer type
type _github_com_google_gopacket_ApplicationLayer struct {
	IValue         interface{}
	WLayerContents func() []byte
	WLayerPayload  func() []byte
	WLayerType     func() gopacket.LayerType
	WPayload       func() []byte
}

func (W _github_com_google_gopacket_ApplicationLayer) LayerContents() []byte {
	return W.WLayerContents()
}
func (W _github_com_google_gopacket_ApplicationLayer) LayerPayload() []byte { return W.WLayerPayload() }
func (W _github_com_google_gopacket_ApplicationLayer) LayerType() gopacket.LayerType {
	return W.WLayerType()
}
func (W _github_com_google_gopacket_ApplicationLayer) Payload() []byte { return W.WPayload() }

// _github_com_google_gopacket_DecodeFeedback is an interface wrapper for DecodeFeedback type
type _github_com_google_gopacket_DecodeFeedback struct {
	IValue        interface{}
	WSetTruncated func()
}

func (W _github_com_google_gopacket_DecodeFeedback) SetTruncated() { W.WSetTruncated() }

// _github_com_google_gopacket_Decoder is an interface wrapper for Decoder type
type _github_com_google_gopacket_Decoder struct {
	IValue  interface{}
	WDecode func(a0 []byte, a1 gopacket.PacketBuilder) error
}

func (W _github_com_google_gopacket_Decoder) Decode(a0 []byte, a1 gopacket.PacketBuilder) error {
	return W.WDecode(a0, a1)
}

// _github_com_google_gopacket_DecodingLayer is an interface wrapper for DecodingLayer type
type _github_com_google_gopacket_DecodingLayer struct {
	IValue           interface{}
	WCanDecode       func() gopacket.LayerClass
	WDecodeFromBytes func(data []byte, df gopacket.DecodeFeedback) error
	WLayerPayload    func() []byte
	WNextLayerType   func() gopacket.LayerType
}

func (W _github_com_google_gopacket_DecodingLayer) CanDecode() gopacket.LayerClass {
	return W.WCanDecode()
}
func (W _github_com_google_gopacket_DecodingLayer) DecodeFromBytes(data []byte, df gopacket.DecodeFeedback) error {
	return W.WDecodeFromBytes(data, df)
}
func (W _github_com_google_gopacket_DecodingLayer) LayerPayload() []byte { return W.WLayerPayload() }
func (W _github_com_google_gopacket_DecodingLayer) NextLayerType() gopacket.LayerType {
	return W.WNextLayerType()
}

// _github_com_google_gopacket_DecodingLayerContainer is an interface wrapper for DecodingLayerContainer type
type _github_com_google_gopacket_DecodingLayerContainer struct {
	IValue         interface{}
	WDecoder       func(a0 gopacket.LayerType) (gopacket.DecodingLayer, bool)
	WLayersDecoder func(first gopacket.LayerType, df gopacket.DecodeFeedback) gopacket.DecodingLayerFunc
	WPut           func(a0 gopacket.DecodingLayer) gopacket.DecodingLayerContainer
}

func (W _github_com_google_gopacket_DecodingLayerContainer) Decoder(a0 gopacket.LayerType) (gopacket.DecodingLayer, bool) {
	return W.WDecoder(a0)
}
func (W _github_com_google_gopacket_DecodingLayerContainer) LayersDecoder(first gopacket.LayerType, df gopacket.DecodeFeedback) gopacket.DecodingLayerFunc {
	return W.WLayersDecoder(first, df)
}
func (W _github_com_google_gopacket_DecodingLayerContainer) Put(a0 gopacket.DecodingLayer) gopacket.DecodingLayerContainer {
	return W.WPut(a0)
}

// _github_com_google_gopacket_Dumper is an interface wrapper for Dumper type
type _github_com_google_gopacket_Dumper struct {
	IValue interface{}
	WDump  func() string
}

func (W _github_com_google_gopacket_Dumper) Dump() string { return W.WDump() }

// _github_com_google_gopacket_ErrorLayer is an interface wrapper for ErrorLayer type
type _github_com_google_gopacket_ErrorLayer struct {
	IValue         interface{}
	WError         func() error
	WLayerContents func() []byte
	WLayerPayload  func() []byte
	WLayerType     func() gopacket.LayerType
}

func (W _github_com_google_gopacket_ErrorLayer) Error() error                  { return W.WError() }
func (W _github_com_google_gopacket_ErrorLayer) LayerContents() []byte         { return W.WLayerContents() }
func (W _github_com_google_gopacket_ErrorLayer) LayerPayload() []byte          { return W.WLayerPayload() }
func (W _github_com_google_gopacket_ErrorLayer) LayerType() gopacket.LayerType { return W.WLayerType() }

// _github_com_google_gopacket_Layer is an interface wrapper for Layer type
type _github_com_google_gopacket_Layer struct {
	IValue         interface{}
	WLayerContents func() []byte
	WLayerPayload  func() []byte
	WLayerType     func() gopacket.LayerType
}

func (W _github_com_google_gopacket_Layer) LayerContents() []byte         { return W.WLayerContents() }
func (W _github_com_google_gopacket_Layer) LayerPayload() []byte          { return W.WLayerPayload() }
func (W _github_com_google_gopacket_Layer) LayerType() gopacket.LayerType { return W.WLayerType() }

// _github_com_google_gopacket_LayerClass is an interface wrapper for LayerClass type
type _github_com_google_gopacket_LayerClass struct {
	IValue      interface{}
	WContains   func(a0 gopacket.LayerType) bool
	WLayerTypes func() []gopacket.LayerType
}

func (W _github_com_google_gopacket_LayerClass) Contains(a0 gopacket.LayerType) bool {
	return W.WContains(a0)
}
func (W _github_com_google_gopacket_LayerClass) LayerTypes() []gopacket.LayerType {
	return W.WLayerTypes()
}

// _github_com_google_gopacket_LinkLayer is an interface wrapper for LinkLayer type
type _github_com_google_gopacket_LinkLayer struct {
	IValue         interface{}
	WLayerContents func() []byte
	WLayerPayload  func() []byte
	WLayerType     func() gopacket.LayerType
	WLinkFlow      func() gopacket.Flow
}

func (W _github_com_google_gopacket_LinkLayer) LayerContents() []byte         { return W.WLayerContents() }
func (W _github_com_google_gopacket_LinkLayer) LayerPayload() []byte          { return W.WLayerPayload() }
func (W _github_com_google_gopacket_LinkLayer) LayerType() gopacket.LayerType { return W.WLayerType() }
func (W _github_com_google_gopacket_LinkLayer) LinkFlow() gopacket.Flow       { return W.WLinkFlow() }

// _github_com_google_gopacket_NetworkLayer is an interface wrapper for NetworkLayer type
type _github_com_google_gopacket_NetworkLayer struct {
	IValue         interface{}
	WLayerContents func() []byte
	WLayerPayload  func() []byte
	WLayerType     func() gopacket.LayerType
	WNetworkFlow   func() gopacket.Flow
}

func (W _github_com_google_gopacket_NetworkLayer) LayerContents() []byte { return W.WLayerContents() }
func (W _github_com_google_gopacket_NetworkLayer) LayerPayload() []byte  { return W.WLayerPayload() }
func (W _github_com_google_gopacket_NetworkLayer) LayerType() gopacket.LayerType {
	return W.WLayerType()
}
func (W _github_com_google_gopacket_NetworkLayer) NetworkFlow() gopacket.Flow {
	return W.WNetworkFlow()
}

// _github_com_google_gopacket_Packet is an interface wrapper for Packet type
type _github_com_google_gopacket_Packet struct {
	IValue            interface{}
	WApplicationLayer func() gopacket.ApplicationLayer
	WData             func() []byte
	WDump             func() string
	WErrorLayer       func() gopacket.ErrorLayer
	WLayer            func(a0 gopacket.LayerType) gopacket.Layer
	WLayerClass       func(a0 gopacket.LayerClass) gopacket.Layer
	WLayers           func() []gopacket.Layer
	WLinkLayer        func() gopacket.LinkLayer
	WMetadata         func() *gopacket.PacketMetadata
	WNetworkLayer     func() gopacket.NetworkLayer
	WString           func() string
	WTransportLayer   func() gopacket.TransportLayer
}

func (W _github_com_google_gopacket_Packet) ApplicationLayer() gopacket.ApplicationLayer {
	return W.WApplicationLayer()
}
func (W _github_com_google_gopacket_Packet) Data() []byte                    { return W.WData() }
func (W _github_com_google_gopacket_Packet) Dump() string                    { return W.WDump() }
func (W _github_com_google_gopacket_Packet) ErrorLayer() gopacket.ErrorLayer { return W.WErrorLayer() }
func (W _github_com_google_gopacket_Packet) Layer(a0 gopacket.LayerType) gopacket.Layer {
	return W.WLayer(a0)
}
func (W _github_com_google_gopacket_Packet) LayerClass(a0 gopacket.LayerClass) gopacket.Layer {
	return W.WLayerClass(a0)
}
func (W _github_com_google_gopacket_Packet) Layers() []gopacket.Layer           { return W.WLayers() }
func (W _github_com_google_gopacket_Packet) LinkLayer() gopacket.LinkLayer      { return W.WLinkLayer() }
func (W _github_com_google_gopacket_Packet) Metadata() *gopacket.PacketMetadata { return W.WMetadata() }
func (W _github_com_google_gopacket_Packet) NetworkLayer() gopacket.NetworkLayer {
	return W.WNetworkLayer()
}
func (W _github_com_google_gopacket_Packet) String() string {
	if W.WString == nil {
		return ""
	}
	return W.WString()
}
func (W _github_com_google_gopacket_Packet) TransportLayer() gopacket.TransportLayer {
	return W.WTransportLayer()
}

// _github_com_google_gopacket_PacketBuilder is an interface wrapper for PacketBuilder type
type _github_com_google_gopacket_PacketBuilder struct {
	IValue               interface{}
	WAddLayer            func(l gopacket.Layer)
	WDecodeOptions       func() *gopacket.DecodeOptions
	WDumpPacketData      func()
	WNextDecoder         func(next gopacket.Decoder) error
	WSetApplicationLayer func(a0 gopacket.ApplicationLayer)
	WSetErrorLayer       func(a0 gopacket.ErrorLayer)
	WSetLinkLayer        func(a0 gopacket.LinkLayer)
	WSetNetworkLayer     func(a0 gopacket.NetworkLayer)
	WSetTransportLayer   func(a0 gopacket.TransportLayer)
	WSetTruncated        func()
}

func (W _github_com_google_gopacket_PacketBuilder) AddLayer(l gopacket.Layer) { W.WAddLayer(l) }
func (W _github_com_google_gopacket_PacketBuilder) DecodeOptions() *gopacket.DecodeOptions {
	return W.WDecodeOptions()
}
func (W _github_com_google_gopacket_PacketBuilder) DumpPacketData() { W.WDumpPacketData() }
func (W _github_com_google_gopacket_PacketBuilder) NextDecoder(next gopacket.Decoder) error {
	return W.WNextDecoder(next)
}
func (W _github_com_google_gopacket_PacketBuilder) SetApplicationLayer(a0 gopacket.ApplicationLayer) {
	W.WSetApplicationLayer(a0)
}
func (W _github_com_google_gopacket_PacketBuilder) SetErrorLayer(a0 gopacket.ErrorLayer) {
	W.WSetErrorLayer(a0)
}
func (W _github_com_google_gopacket_PacketBuilder) SetLinkLayer(a0 gopacket.LinkLayer) {
	W.WSetLinkLayer(a0)
}
func (W _github_com_google_gopacket_PacketBuilder) SetNetworkLayer(a0 gopacket.NetworkLayer) {
	W.WSetNetworkLayer(a0)
}
func (W _github_com_google_gopacket_PacketBuilder) SetTransportLayer(a0 gopacket.TransportLayer) {
	W.WSetTransportLayer(a0)
}
func (W _github_com_google_gopacket_PacketBuilder) SetTruncated() { W.WSetTruncated() }

// _github_com_google_gopacket_PacketDataSource is an interface wrapper for PacketDataSource type
type _github_com_google_gopacket_PacketDataSource struct {
	IValue          interface{}
	WReadPacketData func() (data []byte, ci gopacket.CaptureInfo, err error)
}

func (W _github_com_google_gopacket_PacketDataSource) ReadPacketData() (data []byte, ci gopacket.CaptureInfo, err error) {
	return W.WReadPacketData()
}

// _github_com_google_gopacket_PacketSourceResolution is an interface wrapper for PacketSourceResolution type
type _github_com_google_gopacket_PacketSourceResolution struct {
	IValue      interface{}
	WResolution func() gopacket.TimestampResolution
}

func (W _github_com_google_gopacket_PacketSourceResolution) Resolution() gopacket.TimestampResolution {
	return W.WResolution()
}

// _github_com_google_gopacket_SerializableLayer is an interface wrapper for SerializableLayer type
type _github_com_google_gopacket_SerializableLayer struct {
	IValue       interface{}
	WLayerType   func() gopacket.LayerType
	WSerializeTo func(b gopacket.SerializeBuffer, opts gopacket.SerializeOptions) error
}

func (W _github_com_google_gopacket_SerializableLayer) LayerType() gopacket.LayerType {
	return W.WLayerType()
}
func (W _github_com_google_gopacket_SerializableLayer) SerializeTo(b gopacket.SerializeBuffer, opts gopacket.SerializeOptions) error {
	return W.WSerializeTo(b, opts)
}

// _github_com_google_gopacket_SerializeBuffer is an interface wrapper for SerializeBuffer type
type _github_com_google_gopacket_SerializeBuffer struct {
	IValue        interface{}
	WAppendBytes  func(num int) ([]byte, error)
	WBytes        func() []byte
	WClear        func() error
	WLayers       func() []gopacket.LayerType
	WPrependBytes func(num int) ([]byte, error)
	WPushLayer    func(a0 gopacket.LayerType)
}

func (W _github_com_google_gopacket_SerializeBuffer) AppendBytes(num int) ([]byte, error) {
	return W.WAppendBytes(num)
}
func (W _github_com_google_gopacket_SerializeBuffer) Bytes() []byte { return W.WBytes() }
func (W _github_com_google_gopacket_SerializeBuffer) Clear() error  { return W.WClear() }
func (W _github_com_google_gopacket_SerializeBuffer) Layers() []gopacket.LayerType {
	return W.WLayers()
}
func (W _github_com_google_gopacket_SerializeBuffer) PrependBytes(num int) ([]byte, error) {
	return W.WPrependBytes(num)
}
func (W _github_com_google_gopacket_SerializeBuffer) PushLayer(a0 gopacket.LayerType) {
	W.WPushLayer(a0)
}

// _github_com_google_gopacket_TransportLayer is an interface wrapper for TransportLayer type
type _github_com_google_gopacket_TransportLayer struct {
	IValue         interface{}
	WLayerContents func() []byte
	WLayerPayload  func() []byte
	WLayerType     func() gopacket.LayerType
	WTransportFlow func() gopacket.Flow
}

func (W _github_com_google_gopacket_TransportLayer) LayerContents() []byte { return W.WLayerContents() }
func (W _github_com_google_gopacket_TransportLayer) LayerPayload() []byte  { return W.WLayerPayload() }
func (W _github_com_google_gopacket_TransportLayer) LayerType() gopacket.LayerType {
	return W.WLayerType()
}
func (W _github_com_google_gopacket_TransportLayer) TransportFlow() gopacket.Flow {
	return W.WTransportFlow()
}

// _github_com_google_gopacket_ZeroCopyPacketDataSource is an interface wrapper for ZeroCopyPacketDataSource type
type _github_com_google_gopacket_ZeroCopyPacketDataSource struct {
	IValue                  interface{}
	WZeroCopyReadPacketData func() (data []byte, ci gopacket.CaptureInfo, err error)
}

func (W _github_com_google_gopacket_ZeroCopyPacketDataSource) ZeroCopyReadPacketData() (data []byte, ci gopacket.CaptureInfo, err error) {
	return W.WZeroCopyReadPacketData()
}
