// Code generated by 'yaegi extract github.com/breadchris/share/gen/proto/kanban/kanbanconnect'. DO NOT EDIT.

package symbol

import (
	"context"
	"github.com/breadchris/share/gen/proto/kanban"
	"github.com/breadchris/share/gen/proto/kanban/kanbanconnect"
	"github.com/bufbuild/connect-go"
	"go/constant"
	"go/token"
	"reflect"
)

func init() {
	Symbols["github.com/breadchris/share/gen/proto/kanban/kanbanconnect/kanbanconnect"] = map[string]reflect.Value{
		// function, constant and variable definitions
		"KanbanServiceCreateBoardProcedure":  reflect.ValueOf(constant.MakeFromLiteral("\"/kanban.KanbanService/CreateBoard\"", token.STRING, 0)),
		"KanbanServiceCreateCardProcedure":   reflect.ValueOf(constant.MakeFromLiteral("\"/kanban.KanbanService/CreateCard\"", token.STRING, 0)),
		"KanbanServiceCreateColumnProcedure": reflect.ValueOf(constant.MakeFromLiteral("\"/kanban.KanbanService/CreateColumn\"", token.STRING, 0)),
		"KanbanServiceDeleteBoardProcedure":  reflect.ValueOf(constant.MakeFromLiteral("\"/kanban.KanbanService/DeleteBoard\"", token.STRING, 0)),
		"KanbanServiceDeleteCardProcedure":   reflect.ValueOf(constant.MakeFromLiteral("\"/kanban.KanbanService/DeleteCard\"", token.STRING, 0)),
		"KanbanServiceDeleteColumnProcedure": reflect.ValueOf(constant.MakeFromLiteral("\"/kanban.KanbanService/DeleteColumn\"", token.STRING, 0)),
		"KanbanServiceGetBoardProcedure":     reflect.ValueOf(constant.MakeFromLiteral("\"/kanban.KanbanService/GetBoard\"", token.STRING, 0)),
		"KanbanServiceListBoardsProcedure":   reflect.ValueOf(constant.MakeFromLiteral("\"/kanban.KanbanService/ListBoards\"", token.STRING, 0)),
		"KanbanServiceMoveCardProcedure":     reflect.ValueOf(constant.MakeFromLiteral("\"/kanban.KanbanService/MoveCard\"", token.STRING, 0)),
		"KanbanServiceMoveColumnProcedure":   reflect.ValueOf(constant.MakeFromLiteral("\"/kanban.KanbanService/MoveColumn\"", token.STRING, 0)),
		"KanbanServiceName":                  reflect.ValueOf(constant.MakeFromLiteral("\"kanban.KanbanService\"", token.STRING, 0)),
		"KanbanServiceUpdateBoardProcedure":  reflect.ValueOf(constant.MakeFromLiteral("\"/kanban.KanbanService/UpdateBoard\"", token.STRING, 0)),
		"KanbanServiceUpdateCardProcedure":   reflect.ValueOf(constant.MakeFromLiteral("\"/kanban.KanbanService/UpdateCard\"", token.STRING, 0)),
		"KanbanServiceUpdateColumnProcedure": reflect.ValueOf(constant.MakeFromLiteral("\"/kanban.KanbanService/UpdateColumn\"", token.STRING, 0)),
		"NewKanbanServiceClient":             reflect.ValueOf(kanbanconnect.NewKanbanServiceClient),
		"NewKanbanServiceHandler":            reflect.ValueOf(kanbanconnect.NewKanbanServiceHandler),

		// type definitions
		"KanbanServiceClient":               reflect.ValueOf((*kanbanconnect.KanbanServiceClient)(nil)),
		"KanbanServiceHandler":              reflect.ValueOf((*kanbanconnect.KanbanServiceHandler)(nil)),
		"UnimplementedKanbanServiceHandler": reflect.ValueOf((*kanbanconnect.UnimplementedKanbanServiceHandler)(nil)),

		// interface wrapper definitions
		"_KanbanServiceClient":  reflect.ValueOf((*_github_com_breadchris_share_gen_proto_kanban_kanbanconnect_KanbanServiceClient)(nil)),
		"_KanbanServiceHandler": reflect.ValueOf((*_github_com_breadchris_share_gen_proto_kanban_kanbanconnect_KanbanServiceHandler)(nil)),
	}
}

// _github_com_breadchris_share_gen_proto_kanban_kanbanconnect_KanbanServiceClient is an interface wrapper for KanbanServiceClient type
type _github_com_breadchris_share_gen_proto_kanban_kanbanconnect_KanbanServiceClient struct {
	IValue        interface{}
	WCreateBoard  func(a0 context.Context, a1 *connect.Request[kanban.CreateBoardRequest]) (*connect.Response[kanban.CreateBoardResponse], error)
	WCreateCard   func(a0 context.Context, a1 *connect.Request[kanban.CreateCardRequest]) (*connect.Response[kanban.CreateCardResponse], error)
	WCreateColumn func(a0 context.Context, a1 *connect.Request[kanban.CreateColumnRequest]) (*connect.Response[kanban.CreateColumnResponse], error)
	WDeleteBoard  func(a0 context.Context, a1 *connect.Request[kanban.DeleteBoardRequest]) (*connect.Response[kanban.DeleteBoardResponse], error)
	WDeleteCard   func(a0 context.Context, a1 *connect.Request[kanban.DeleteCardRequest]) (*connect.Response[kanban.DeleteCardResponse], error)
	WDeleteColumn func(a0 context.Context, a1 *connect.Request[kanban.DeleteColumnRequest]) (*connect.Response[kanban.DeleteColumnResponse], error)
	WGetBoard     func(a0 context.Context, a1 *connect.Request[kanban.GetBoardRequest]) (*connect.Response[kanban.GetBoardResponse], error)
	WListBoards   func(a0 context.Context, a1 *connect.Request[kanban.ListBoardsRequest]) (*connect.Response[kanban.ListBoardsResponse], error)
	WMoveCard     func(a0 context.Context, a1 *connect.Request[kanban.MoveCardRequest]) (*connect.Response[kanban.MoveCardResponse], error)
	WMoveColumn   func(a0 context.Context, a1 *connect.Request[kanban.MoveColumnRequest]) (*connect.Response[kanban.MoveColumnResponse], error)
	WUpdateBoard  func(a0 context.Context, a1 *connect.Request[kanban.UpdateBoardRequest]) (*connect.Response[kanban.UpdateBoardResponse], error)
	WUpdateCard   func(a0 context.Context, a1 *connect.Request[kanban.UpdateCardRequest]) (*connect.Response[kanban.UpdateCardResponse], error)
	WUpdateColumn func(a0 context.Context, a1 *connect.Request[kanban.UpdateColumnRequest]) (*connect.Response[kanban.UpdateColumnResponse], error)
}

func (W _github_com_breadchris_share_gen_proto_kanban_kanbanconnect_KanbanServiceClient) CreateBoard(a0 context.Context, a1 *connect.Request[kanban.CreateBoardRequest]) (*connect.Response[kanban.CreateBoardResponse], error) {
	return W.WCreateBoard(a0, a1)
}
func (W _github_com_breadchris_share_gen_proto_kanban_kanbanconnect_KanbanServiceClient) CreateCard(a0 context.Context, a1 *connect.Request[kanban.CreateCardRequest]) (*connect.Response[kanban.CreateCardResponse], error) {
	return W.WCreateCard(a0, a1)
}
func (W _github_com_breadchris_share_gen_proto_kanban_kanbanconnect_KanbanServiceClient) CreateColumn(a0 context.Context, a1 *connect.Request[kanban.CreateColumnRequest]) (*connect.Response[kanban.CreateColumnResponse], error) {
	return W.WCreateColumn(a0, a1)
}
func (W _github_com_breadchris_share_gen_proto_kanban_kanbanconnect_KanbanServiceClient) DeleteBoard(a0 context.Context, a1 *connect.Request[kanban.DeleteBoardRequest]) (*connect.Response[kanban.DeleteBoardResponse], error) {
	return W.WDeleteBoard(a0, a1)
}
func (W _github_com_breadchris_share_gen_proto_kanban_kanbanconnect_KanbanServiceClient) DeleteCard(a0 context.Context, a1 *connect.Request[kanban.DeleteCardRequest]) (*connect.Response[kanban.DeleteCardResponse], error) {
	return W.WDeleteCard(a0, a1)
}
func (W _github_com_breadchris_share_gen_proto_kanban_kanbanconnect_KanbanServiceClient) DeleteColumn(a0 context.Context, a1 *connect.Request[kanban.DeleteColumnRequest]) (*connect.Response[kanban.DeleteColumnResponse], error) {
	return W.WDeleteColumn(a0, a1)
}
func (W _github_com_breadchris_share_gen_proto_kanban_kanbanconnect_KanbanServiceClient) GetBoard(a0 context.Context, a1 *connect.Request[kanban.GetBoardRequest]) (*connect.Response[kanban.GetBoardResponse], error) {
	return W.WGetBoard(a0, a1)
}
func (W _github_com_breadchris_share_gen_proto_kanban_kanbanconnect_KanbanServiceClient) ListBoards(a0 context.Context, a1 *connect.Request[kanban.ListBoardsRequest]) (*connect.Response[kanban.ListBoardsResponse], error) {
	return W.WListBoards(a0, a1)
}
func (W _github_com_breadchris_share_gen_proto_kanban_kanbanconnect_KanbanServiceClient) MoveCard(a0 context.Context, a1 *connect.Request[kanban.MoveCardRequest]) (*connect.Response[kanban.MoveCardResponse], error) {
	return W.WMoveCard(a0, a1)
}
func (W _github_com_breadchris_share_gen_proto_kanban_kanbanconnect_KanbanServiceClient) MoveColumn(a0 context.Context, a1 *connect.Request[kanban.MoveColumnRequest]) (*connect.Response[kanban.MoveColumnResponse], error) {
	return W.WMoveColumn(a0, a1)
}
func (W _github_com_breadchris_share_gen_proto_kanban_kanbanconnect_KanbanServiceClient) UpdateBoard(a0 context.Context, a1 *connect.Request[kanban.UpdateBoardRequest]) (*connect.Response[kanban.UpdateBoardResponse], error) {
	return W.WUpdateBoard(a0, a1)
}
func (W _github_com_breadchris_share_gen_proto_kanban_kanbanconnect_KanbanServiceClient) UpdateCard(a0 context.Context, a1 *connect.Request[kanban.UpdateCardRequest]) (*connect.Response[kanban.UpdateCardResponse], error) {
	return W.WUpdateCard(a0, a1)
}
func (W _github_com_breadchris_share_gen_proto_kanban_kanbanconnect_KanbanServiceClient) UpdateColumn(a0 context.Context, a1 *connect.Request[kanban.UpdateColumnRequest]) (*connect.Response[kanban.UpdateColumnResponse], error) {
	return W.WUpdateColumn(a0, a1)
}

// _github_com_breadchris_share_gen_proto_kanban_kanbanconnect_KanbanServiceHandler is an interface wrapper for KanbanServiceHandler type
type _github_com_breadchris_share_gen_proto_kanban_kanbanconnect_KanbanServiceHandler struct {
	IValue        interface{}
	WCreateBoard  func(a0 context.Context, a1 *connect.Request[kanban.CreateBoardRequest]) (*connect.Response[kanban.CreateBoardResponse], error)
	WCreateCard   func(a0 context.Context, a1 *connect.Request[kanban.CreateCardRequest]) (*connect.Response[kanban.CreateCardResponse], error)
	WCreateColumn func(a0 context.Context, a1 *connect.Request[kanban.CreateColumnRequest]) (*connect.Response[kanban.CreateColumnResponse], error)
	WDeleteBoard  func(a0 context.Context, a1 *connect.Request[kanban.DeleteBoardRequest]) (*connect.Response[kanban.DeleteBoardResponse], error)
	WDeleteCard   func(a0 context.Context, a1 *connect.Request[kanban.DeleteCardRequest]) (*connect.Response[kanban.DeleteCardResponse], error)
	WDeleteColumn func(a0 context.Context, a1 *connect.Request[kanban.DeleteColumnRequest]) (*connect.Response[kanban.DeleteColumnResponse], error)
	WGetBoard     func(a0 context.Context, a1 *connect.Request[kanban.GetBoardRequest]) (*connect.Response[kanban.GetBoardResponse], error)
	WListBoards   func(a0 context.Context, a1 *connect.Request[kanban.ListBoardsRequest]) (*connect.Response[kanban.ListBoardsResponse], error)
	WMoveCard     func(a0 context.Context, a1 *connect.Request[kanban.MoveCardRequest]) (*connect.Response[kanban.MoveCardResponse], error)
	WMoveColumn   func(a0 context.Context, a1 *connect.Request[kanban.MoveColumnRequest]) (*connect.Response[kanban.MoveColumnResponse], error)
	WUpdateBoard  func(a0 context.Context, a1 *connect.Request[kanban.UpdateBoardRequest]) (*connect.Response[kanban.UpdateBoardResponse], error)
	WUpdateCard   func(a0 context.Context, a1 *connect.Request[kanban.UpdateCardRequest]) (*connect.Response[kanban.UpdateCardResponse], error)
	WUpdateColumn func(a0 context.Context, a1 *connect.Request[kanban.UpdateColumnRequest]) (*connect.Response[kanban.UpdateColumnResponse], error)
}

func (W _github_com_breadchris_share_gen_proto_kanban_kanbanconnect_KanbanServiceHandler) CreateBoard(a0 context.Context, a1 *connect.Request[kanban.CreateBoardRequest]) (*connect.Response[kanban.CreateBoardResponse], error) {
	return W.WCreateBoard(a0, a1)
}
func (W _github_com_breadchris_share_gen_proto_kanban_kanbanconnect_KanbanServiceHandler) CreateCard(a0 context.Context, a1 *connect.Request[kanban.CreateCardRequest]) (*connect.Response[kanban.CreateCardResponse], error) {
	return W.WCreateCard(a0, a1)
}
func (W _github_com_breadchris_share_gen_proto_kanban_kanbanconnect_KanbanServiceHandler) CreateColumn(a0 context.Context, a1 *connect.Request[kanban.CreateColumnRequest]) (*connect.Response[kanban.CreateColumnResponse], error) {
	return W.WCreateColumn(a0, a1)
}
func (W _github_com_breadchris_share_gen_proto_kanban_kanbanconnect_KanbanServiceHandler) DeleteBoard(a0 context.Context, a1 *connect.Request[kanban.DeleteBoardRequest]) (*connect.Response[kanban.DeleteBoardResponse], error) {
	return W.WDeleteBoard(a0, a1)
}
func (W _github_com_breadchris_share_gen_proto_kanban_kanbanconnect_KanbanServiceHandler) DeleteCard(a0 context.Context, a1 *connect.Request[kanban.DeleteCardRequest]) (*connect.Response[kanban.DeleteCardResponse], error) {
	return W.WDeleteCard(a0, a1)
}
func (W _github_com_breadchris_share_gen_proto_kanban_kanbanconnect_KanbanServiceHandler) DeleteColumn(a0 context.Context, a1 *connect.Request[kanban.DeleteColumnRequest]) (*connect.Response[kanban.DeleteColumnResponse], error) {
	return W.WDeleteColumn(a0, a1)
}
func (W _github_com_breadchris_share_gen_proto_kanban_kanbanconnect_KanbanServiceHandler) GetBoard(a0 context.Context, a1 *connect.Request[kanban.GetBoardRequest]) (*connect.Response[kanban.GetBoardResponse], error) {
	return W.WGetBoard(a0, a1)
}
func (W _github_com_breadchris_share_gen_proto_kanban_kanbanconnect_KanbanServiceHandler) ListBoards(a0 context.Context, a1 *connect.Request[kanban.ListBoardsRequest]) (*connect.Response[kanban.ListBoardsResponse], error) {
	return W.WListBoards(a0, a1)
}
func (W _github_com_breadchris_share_gen_proto_kanban_kanbanconnect_KanbanServiceHandler) MoveCard(a0 context.Context, a1 *connect.Request[kanban.MoveCardRequest]) (*connect.Response[kanban.MoveCardResponse], error) {
	return W.WMoveCard(a0, a1)
}
func (W _github_com_breadchris_share_gen_proto_kanban_kanbanconnect_KanbanServiceHandler) MoveColumn(a0 context.Context, a1 *connect.Request[kanban.MoveColumnRequest]) (*connect.Response[kanban.MoveColumnResponse], error) {
	return W.WMoveColumn(a0, a1)
}
func (W _github_com_breadchris_share_gen_proto_kanban_kanbanconnect_KanbanServiceHandler) UpdateBoard(a0 context.Context, a1 *connect.Request[kanban.UpdateBoardRequest]) (*connect.Response[kanban.UpdateBoardResponse], error) {
	return W.WUpdateBoard(a0, a1)
}
func (W _github_com_breadchris_share_gen_proto_kanban_kanbanconnect_KanbanServiceHandler) UpdateCard(a0 context.Context, a1 *connect.Request[kanban.UpdateCardRequest]) (*connect.Response[kanban.UpdateCardResponse], error) {
	return W.WUpdateCard(a0, a1)
}
func (W _github_com_breadchris_share_gen_proto_kanban_kanbanconnect_KanbanServiceHandler) UpdateColumn(a0 context.Context, a1 *connect.Request[kanban.UpdateColumnRequest]) (*connect.Response[kanban.UpdateColumnResponse], error) {
	return W.WUpdateColumn(a0, a1)
}
