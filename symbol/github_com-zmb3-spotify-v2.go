// Code generated by 'yaegi extract github.com/zmb3/spotify/v2'. DO NOT EDIT.

package symbol

import (
	"github.com/zmb3/spotify/v2"
	"go/constant"
	"go/token"
	"reflect"
)

func init() {
	Symbols["github.com/zmb3/spotify/v2/spotify"] = map[string]reflect.Value{
		// function, constant and variable definitions
		"A":                         reflect.ValueOf(spotify.A),
		"AFlat":                     reflect.ValueOf(spotify.AFlat),
		"ASharp":                    reflect.ValueOf(spotify.ASharp),
		"AdditionalTypes":           reflect.ValueOf(spotify.AdditionalTypes),
		"After":                     reflect.ValueOf(spotify.After),
		"AlbumTypeAlbum":            reflect.ValueOf(spotify.AlbumTypeAlbum),
		"AlbumTypeAppearsOn":        reflect.ValueOf(spotify.AlbumTypeAppearsOn),
		"AlbumTypeCompilation":      reflect.ValueOf(spotify.AlbumTypeCompilation),
		"AlbumTypeSingle":           reflect.ValueOf(spotify.AlbumTypeSingle),
		"B":                         reflect.ValueOf(spotify.B),
		"BFlat":                     reflect.ValueOf(spotify.BFlat),
		"C":                         reflect.ValueOf(spotify.C),
		"CSharp":                    reflect.ValueOf(spotify.CSharp),
		"Country":                   reflect.ValueOf(spotify.Country),
		"CountryArgentina":          reflect.ValueOf(constant.MakeFromLiteral("\"AR\"", token.STRING, 0)),
		"CountryAustralia":          reflect.ValueOf(constant.MakeFromLiteral("\"AU\"", token.STRING, 0)),
		"CountryAustria":            reflect.ValueOf(constant.MakeFromLiteral("\"AT\"", token.STRING, 0)),
		"CountryBelarus":            reflect.ValueOf(constant.MakeFromLiteral("\"BY\"", token.STRING, 0)),
		"CountryBelgium":            reflect.ValueOf(constant.MakeFromLiteral("\"BE\"", token.STRING, 0)),
		"CountryBrazil":             reflect.ValueOf(constant.MakeFromLiteral("\"BR\"", token.STRING, 0)),
		"CountryCanada":             reflect.ValueOf(constant.MakeFromLiteral("\"CA\"", token.STRING, 0)),
		"CountryChile":              reflect.ValueOf(constant.MakeFromLiteral("\"CL\"", token.STRING, 0)),
		"CountryChina":              reflect.ValueOf(constant.MakeFromLiteral("\"CN\"", token.STRING, 0)),
		"CountryFinland":            reflect.ValueOf(constant.MakeFromLiteral("\"FI\"", token.STRING, 0)),
		"CountryFrance":             reflect.ValueOf(constant.MakeFromLiteral("\"FR\"", token.STRING, 0)),
		"CountryGermany":            reflect.ValueOf(constant.MakeFromLiteral("\"DE\"", token.STRING, 0)),
		"CountryHongKong":           reflect.ValueOf(constant.MakeFromLiteral("\"HK\"", token.STRING, 0)),
		"CountryIndia":              reflect.ValueOf(constant.MakeFromLiteral("\"IN\"", token.STRING, 0)),
		"CountryIreland":            reflect.ValueOf(constant.MakeFromLiteral("\"IE\"", token.STRING, 0)),
		"CountryItaly":              reflect.ValueOf(constant.MakeFromLiteral("\"IT\"", token.STRING, 0)),
		"CountryJapan":              reflect.ValueOf(constant.MakeFromLiteral("\"JP\"", token.STRING, 0)),
		"CountryMexico":             reflect.ValueOf(constant.MakeFromLiteral("\"MX\"", token.STRING, 0)),
		"CountryNewZealand":         reflect.ValueOf(constant.MakeFromLiteral("\"NZ\"", token.STRING, 0)),
		"CountryRussia":             reflect.ValueOf(constant.MakeFromLiteral("\"RU\"", token.STRING, 0)),
		"CountrySpain":              reflect.ValueOf(constant.MakeFromLiteral("\"ES\"", token.STRING, 0)),
		"CountrySwitzerland":        reflect.ValueOf(constant.MakeFromLiteral("\"CH\"", token.STRING, 0)),
		"CountryUSA":                reflect.ValueOf(constant.MakeFromLiteral("\"US\"", token.STRING, 0)),
		"CountryUnitedArabEmirates": reflect.ValueOf(constant.MakeFromLiteral("\"AE\"", token.STRING, 0)),
		"CountryUnitedKingdom":      reflect.ValueOf(constant.MakeFromLiteral("\"GB\"", token.STRING, 0)),
		"D":                         reflect.ValueOf(spotify.D),
		"DFlat":                     reflect.ValueOf(spotify.DFlat),
		"DSharp":                    reflect.ValueOf(spotify.DSharp),
		"DateLayout":                reflect.ValueOf(constant.MakeFromLiteral("\"2006-01-02\"", token.STRING, 0)),
		"E":                         reflect.ValueOf(spotify.E),
		"EFlat":                     reflect.ValueOf(spotify.EFlat),
		"EpisodeAdditionalType":     reflect.ValueOf(constant.MakeFromLiteral("\"episode\"", token.STRING, 0)),
		"ErrNoMorePages":            reflect.ValueOf(&spotify.ErrNoMorePages).Elem(),
		"F":                         reflect.ValueOf(spotify.F),
		"FSharp":                    reflect.ValueOf(spotify.FSharp),
		"Fields":                    reflect.ValueOf(spotify.Fields),
		"G":                         reflect.ValueOf(spotify.G),
		"GFlat":                     reflect.ValueOf(spotify.GFlat),
		"GSharp":                    reflect.ValueOf(spotify.GSharp),
		"Limit":                     reflect.ValueOf(spotify.Limit),
		"Locale":                    reflect.ValueOf(spotify.Locale),
		"LongTermRange":             reflect.ValueOf(spotify.LongTermRange),
		"Major":                     reflect.ValueOf(spotify.Major),
		"Market":                    reflect.ValueOf(spotify.Market),
		"MarketFromToken":           reflect.ValueOf(constant.MakeFromLiteral("\"from_token\"", token.STRING, 0)),
		"MaxNumberOfSeeds":          reflect.ValueOf(constant.MakeFromLiteral("5", token.INT, 0)),
		"MediumTermRange":           reflect.ValueOf(spotify.MediumTermRange),
		"Minor":                     reflect.ValueOf(spotify.Minor),
		"New":                       reflect.ValueOf(spotify.New),
		"NewTrackAttributes":        reflect.ValueOf(spotify.NewTrackAttributes),
		"NewTrackToRemove":          reflect.ValueOf(spotify.NewTrackToRemove),
		"Offset":                    reflect.ValueOf(spotify.Offset),
		"SearchTypeAlbum":           reflect.ValueOf(spotify.SearchTypeAlbum),
		"SearchTypeArtist":          reflect.ValueOf(constant.MakeFromLiteral("2", token.INT, 0)),
		"SearchTypeEpisode":         reflect.ValueOf(constant.MakeFromLiteral("32", token.INT, 0)),
		"SearchTypePlaylist":        reflect.ValueOf(constant.MakeFromLiteral("4", token.INT, 0)),
		"SearchTypeShow":            reflect.ValueOf(constant.MakeFromLiteral("16", token.INT, 0)),
		"SearchTypeTrack":           reflect.ValueOf(constant.MakeFromLiteral("8", token.INT, 0)),
		"ShortTermRange":            reflect.ValueOf(spotify.ShortTermRange),
		"Timerange":                 reflect.ValueOf(spotify.Timerange),
		"Timestamp":                 reflect.ValueOf(spotify.Timestamp),
		"TimestampLayout":           reflect.ValueOf(constant.MakeFromLiteral("\"2006-01-02T15:04:05Z\"", token.STRING, 0)),
		"TrackAdditionalType":       reflect.ValueOf(constant.MakeFromLiteral("\"track\"", token.STRING, 0)),
		"Version":                   reflect.ValueOf(constant.MakeFromLiteral("\"1.0.0\"", token.STRING, 0)),
		"WithAcceptLanguage":        reflect.ValueOf(spotify.WithAcceptLanguage),
		"WithBaseURL":               reflect.ValueOf(spotify.WithBaseURL),
		"WithRetry":                 reflect.ValueOf(spotify.WithRetry),

		// type definitions
		"AdditionalType":         reflect.ValueOf((*spotify.AdditionalType)(nil)),
		"AlbumType":              reflect.ValueOf((*spotify.AlbumType)(nil)),
		"AnalysisMeta":           reflect.ValueOf((*spotify.AnalysisMeta)(nil)),
		"AnalysisTrack":          reflect.ValueOf((*spotify.AnalysisTrack)(nil)),
		"AudioAnalysis":          reflect.ValueOf((*spotify.AudioAnalysis)(nil)),
		"AudioFeatures":          reflect.ValueOf((*spotify.AudioFeatures)(nil)),
		"Category":               reflect.ValueOf((*spotify.Category)(nil)),
		"CategoryPage":           reflect.ValueOf((*spotify.CategoryPage)(nil)),
		"Client":                 reflect.ValueOf((*spotify.Client)(nil)),
		"ClientOption":           reflect.ValueOf((*spotify.ClientOption)(nil)),
		"Copyright":              reflect.ValueOf((*spotify.Copyright)(nil)),
		"CurrentlyPlaying":       reflect.ValueOf((*spotify.CurrentlyPlaying)(nil)),
		"Cursor":                 reflect.ValueOf((*spotify.Cursor)(nil)),
		"EpisodePage":            reflect.ValueOf((*spotify.EpisodePage)(nil)),
		"Error":                  reflect.ValueOf((*spotify.Error)(nil)),
		"Followers":              reflect.ValueOf((*spotify.Followers)(nil)),
		"FullAlbum":              reflect.ValueOf((*spotify.FullAlbum)(nil)),
		"FullArtist":             reflect.ValueOf((*spotify.FullArtist)(nil)),
		"FullArtistCursorPage":   reflect.ValueOf((*spotify.FullArtistCursorPage)(nil)),
		"FullArtistPage":         reflect.ValueOf((*spotify.FullArtistPage)(nil)),
		"FullPlaylist":           reflect.ValueOf((*spotify.FullPlaylist)(nil)),
		"FullShow":               reflect.ValueOf((*spotify.FullShow)(nil)),
		"FullTrack":              reflect.ValueOf((*spotify.FullTrack)(nil)),
		"FullTrackPage":          reflect.ValueOf((*spotify.FullTrackPage)(nil)),
		"ID":                     reflect.ValueOf((*spotify.ID)(nil)),
		"Image":                  reflect.ValueOf((*spotify.Image)(nil)),
		"Key":                    reflect.ValueOf((*spotify.Key)(nil)),
		"LinkedFromInfo":         reflect.ValueOf((*spotify.LinkedFromInfo)(nil)),
		"Marker":                 reflect.ValueOf((*spotify.Marker)(nil)),
		"Mode":                   reflect.ValueOf((*spotify.Mode)(nil)),
		"Numeric":                reflect.ValueOf((*spotify.Numeric)(nil)),
		"PlayOptions":            reflect.ValueOf((*spotify.PlayOptions)(nil)),
		"PlaybackContext":        reflect.ValueOf((*spotify.PlaybackContext)(nil)),
		"PlaybackOffset":         reflect.ValueOf((*spotify.PlaybackOffset)(nil)),
		"PlayerDevice":           reflect.ValueOf((*spotify.PlayerDevice)(nil)),
		"PlayerState":            reflect.ValueOf((*spotify.PlayerState)(nil)),
		"PlaylistItem":           reflect.ValueOf((*spotify.PlaylistItem)(nil)),
		"PlaylistItemPage":       reflect.ValueOf((*spotify.PlaylistItemPage)(nil)),
		"PlaylistItemTrack":      reflect.ValueOf((*spotify.PlaylistItemTrack)(nil)),
		"PlaylistReorderOptions": reflect.ValueOf((*spotify.PlaylistReorderOptions)(nil)),
		"PlaylistTrack":          reflect.ValueOf((*spotify.PlaylistTrack)(nil)),
		"PlaylistTrackPage":      reflect.ValueOf((*spotify.PlaylistTrackPage)(nil)),
		"PlaylistTracks":         reflect.ValueOf((*spotify.PlaylistTracks)(nil)),
		"PrivateUser":            reflect.ValueOf((*spotify.PrivateUser)(nil)),
		"Queue":                  reflect.ValueOf((*spotify.Queue)(nil)),
		"Range":                  reflect.ValueOf((*spotify.Range)(nil)),
		"RecentlyPlayedItem":     reflect.ValueOf((*spotify.RecentlyPlayedItem)(nil)),
		"RecentlyPlayedOptions":  reflect.ValueOf((*spotify.RecentlyPlayedOptions)(nil)),
		"RecentlyPlayedResult":   reflect.ValueOf((*spotify.RecentlyPlayedResult)(nil)),
		"RecommendationSeed":     reflect.ValueOf((*spotify.RecommendationSeed)(nil)),
		"Recommendations":        reflect.ValueOf((*spotify.Recommendations)(nil)),
		"RequestOption":          reflect.ValueOf((*spotify.RequestOption)(nil)),
		"ResumePointObject":      reflect.ValueOf((*spotify.ResumePointObject)(nil)),
		"SavedAlbum":             reflect.ValueOf((*spotify.SavedAlbum)(nil)),
		"SavedAlbumPage":         reflect.ValueOf((*spotify.SavedAlbumPage)(nil)),
		"SavedShow":              reflect.ValueOf((*spotify.SavedShow)(nil)),
		"SavedShowPage":          reflect.ValueOf((*spotify.SavedShowPage)(nil)),
		"SavedTrack":             reflect.ValueOf((*spotify.SavedTrack)(nil)),
		"SavedTrackPage":         reflect.ValueOf((*spotify.SavedTrackPage)(nil)),
		"SearchResult":           reflect.ValueOf((*spotify.SearchResult)(nil)),
		"SearchType":             reflect.ValueOf((*spotify.SearchType)(nil)),
		"Section":                reflect.ValueOf((*spotify.Section)(nil)),
		"Seeds":                  reflect.ValueOf((*spotify.Seeds)(nil)),
		"Segment":                reflect.ValueOf((*spotify.Segment)(nil)),
		"SimpleAlbum":            reflect.ValueOf((*spotify.SimpleAlbum)(nil)),
		"SimpleAlbumPage":        reflect.ValueOf((*spotify.SimpleAlbumPage)(nil)),
		"SimpleArtist":           reflect.ValueOf((*spotify.SimpleArtist)(nil)),
		"SimpleEpisodePage":      reflect.ValueOf((*spotify.SimpleEpisodePage)(nil)),
		"SimplePlaylist":         reflect.ValueOf((*spotify.SimplePlaylist)(nil)),
		"SimplePlaylistPage":     reflect.ValueOf((*spotify.SimplePlaylistPage)(nil)),
		"SimpleShow":             reflect.ValueOf((*spotify.SimpleShow)(nil)),
		"SimpleShowPage":         reflect.ValueOf((*spotify.SimpleShowPage)(nil)),
		"SimpleTrack":            reflect.ValueOf((*spotify.SimpleTrack)(nil)),
		"SimpleTrackPage":        reflect.ValueOf((*spotify.SimpleTrackPage)(nil)),
		"TrackAttributes":        reflect.ValueOf((*spotify.TrackAttributes)(nil)),
		"TrackExternalIDs":       reflect.ValueOf((*spotify.TrackExternalIDs)(nil)),
		"TrackToRemove":          reflect.ValueOf((*spotify.TrackToRemove)(nil)),
		"URI":                    reflect.ValueOf((*spotify.URI)(nil)),
		"User":                   reflect.ValueOf((*spotify.User)(nil)),
	}
}
