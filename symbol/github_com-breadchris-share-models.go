// Code generated by 'yaegi extract github.com/breadchris/share/models'. DO NOT EDIT.

package symbol

import (
	"github.com/breadchris/share/models"
	"reflect"
)

func init() {
	Symbols["github.com/breadchris/share/models/models"] = map[string]reflect.Value{
		// function, constant and variable definitions
		"AIRecipeToModel": reflect.ValueOf(models.AIRecipeToModel),
		"HashToken":       reflect.ValueOf(models.HashToken),
		"NewApiKey":       reflect.ValueOf(models.NewApiKey),
		"NewContent":      reflect.ValueOf(models.NewContent),
		"NewContentReply": reflect.ValueOf(models.NewContentReply),

		// type definitions
		"AIRecipe":             reflect.ValueOf((*models.AIRecipe)(nil)),
		"ApiKey":               reflect.ValueOf((*models.ApiKey)(nil)),
		"ClaudeDoc":            reflect.ValueOf((*models.ClaudeDoc)(nil)),
		"ClaudeDocStar":        reflect.ValueOf((*models.ClaudeDocStar)(nil)),
		"ClaudeDocTag":         reflect.ValueOf((*models.ClaudeDocTag)(nil)),
		"ClaudeSession":        reflect.ValueOf((*models.ClaudeSession)(nil)),
		"Container":            reflect.ValueOf((*models.Container)(nil)),
		"ContainerSession":     reflect.ValueOf((*models.ContainerSession)(nil)),
		"Content":              reflect.ValueOf((*models.Content)(nil)),
		"ContentTag":           reflect.ValueOf((*models.ContentTag)(nil)),
		"Deployment":           reflect.ValueOf((*models.Deployment)(nil)),
		"Direction":            reflect.ValueOf((*models.Direction)(nil)),
		"DockerHost":           reflect.ValueOf((*models.DockerHost)(nil)),
		"Equipment":            reflect.ValueOf((*models.Equipment)(nil)),
		"Food":                 reflect.ValueOf((*models.Food)(nil)),
		"FoodName":             reflect.ValueOf((*models.FoodName)(nil)),
		"Group":                reflect.ValueOf((*models.Group)(nil)),
		"GroupMembership":      reflect.ValueOf((*models.GroupMembership)(nil)),
		"HostMapping":          reflect.ValueOf((*models.HostMapping)(nil)),
		"Identity":             reflect.ValueOf((*models.Identity)(nil)),
		"Ingredient":           reflect.ValueOf((*models.Ingredient)(nil)),
		"KanbanBoard":          reflect.ValueOf((*models.KanbanBoard)(nil)),
		"KanbanCard":           reflect.ValueOf((*models.KanbanCard)(nil)),
		"KanbanColumn":         reflect.ValueOf((*models.KanbanColumn)(nil)),
		"Model":                reflect.ValueOf((*models.Model)(nil)),
		"Page":                 reflect.ValueOf((*models.Page)(nil)),
		"PinnedFile":           reflect.ValueOf((*models.PinnedFile)(nil)),
		"Prompt":               reflect.ValueOf((*models.Prompt)(nil)),
		"PromptContext":        reflect.ValueOf((*models.PromptContext)(nil)),
		"PromptRun":            reflect.ValueOf((*models.PromptRun)(nil)),
		"Recipe":               reflect.ValueOf((*models.Recipe)(nil)),
		"Tag":                  reflect.ValueOf((*models.Tag)(nil)),
		"User":                 reflect.ValueOf((*models.User)(nil)),
		"UserSecret":           reflect.ValueOf((*models.UserSecret)(nil)),
		"VibeAgentConfig":      reflect.ValueOf((*models.VibeAgentConfig)(nil)),
		"VibeExecutionProcess": reflect.ValueOf((*models.VibeExecutionProcess)(nil)),
		"VibeExecutorSession":  reflect.ValueOf((*models.VibeExecutorSession)(nil)),
		"VibeMCPServer":        reflect.ValueOf((*models.VibeMCPServer)(nil)),
		"VibeProject":          reflect.ValueOf((*models.VibeProject)(nil)),
		"VibeTask":             reflect.ValueOf((*models.VibeTask)(nil)),
		"VibeTaskAttempt":      reflect.ValueOf((*models.VibeTaskAttempt)(nil)),
	}
}
