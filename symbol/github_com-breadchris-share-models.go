// Code generated by 'yaegi extract github.com/breadchris/share/models'. DO NOT EDIT.

package symbol

import (
	"github.com/breadchris/share/models"
	"reflect"
)

func init() {
	Symbols["github.com/breadchris/share/models/models"] = map[string]reflect.Value{
		// function, constant and variable definitions
		"AIRecipeToModel": reflect.ValueOf(models.AIRecipeToModel),

		// type definitions
		"AIRecipe":         reflect.ValueOf((*models.AIRecipe)(nil)),
		"ClaudeDoc":        reflect.ValueOf((*models.ClaudeDoc)(nil)),
		"ClaudeDocStar":    reflect.ValueOf((*models.ClaudeDocStar)(nil)),
		"ClaudeDocTag":     reflect.ValueOf((*models.ClaudeDocTag)(nil)),
		"Container":        reflect.ValueOf((*models.Container)(nil)),
		"ContainerSession": reflect.ValueOf((*models.ContainerSession)(nil)),
		"Content":          reflect.ValueOf((*models.Content)(nil)),
		"ContentTag":       reflect.ValueOf((*models.ContentTag)(nil)),
		"Direction":        reflect.ValueOf((*models.Direction)(nil)),
		"DockerHost":       reflect.ValueOf((*models.DockerHost)(nil)),
		"Equipment":        reflect.ValueOf((*models.Equipment)(nil)),
		"Food":             reflect.ValueOf((*models.Food)(nil)),
		"FoodName":         reflect.ValueOf((*models.FoodName)(nil)),
		"Group":            reflect.ValueOf((*models.Group)(nil)),
		"GroupMembership":  reflect.ValueOf((*models.GroupMembership)(nil)),
		"Identity":         reflect.ValueOf((*models.Identity)(nil)),
		"Ingredient":       reflect.ValueOf((*models.Ingredient)(nil)),
		"Model":            reflect.ValueOf((*models.Model)(nil)),
		"Page":             reflect.ValueOf((*models.Page)(nil)),
		"Prompt":           reflect.ValueOf((*models.Prompt)(nil)),
		"PromptContext":    reflect.ValueOf((*models.PromptContext)(nil)),
		"PromptRun":        reflect.ValueOf((*models.PromptRun)(nil)),
		"Recipe":           reflect.ValueOf((*models.Recipe)(nil)),
		"Tag":              reflect.ValueOf((*models.Tag)(nil)),
		"User":             reflect.ValueOf((*models.User)(nil)),
		"UserSecret":       reflect.ValueOf((*models.UserSecret)(nil)),
	}
}
