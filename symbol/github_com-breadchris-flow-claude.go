// Code generated by 'yaegi extract github.com/breadchris/flow/claude'. DO NOT EDIT.

package symbol

import (
	"github.com/breadchris/flow/claude"
	"reflect"
)

func init() {
	Symbols["github.com/breadchris/flow/claude/claude"] = map[string]reflect.Value{
		// function, constant and variable definitions
		"NewClaudeService": reflect.ValueOf(claude.NewClaudeService),
		"NewService":       reflect.ValueOf(claude.NewService),

		// type definitions
		"ClaudeService":          reflect.ValueOf((*claude.ClaudeService)(nil)),
		"Config":                 reflect.ValueOf((*claude.Config)(nil)),
		"Input":                  reflect.ValueOf((*claude.Input)(nil)),
		"InputMessage":           reflect.ValueOf((*claude.InputMessage)(nil)),
		"InputMessageContent":    reflect.ValueOf((*claude.InputMessageContent)(nil)),
		"Message":                reflect.ValueOf((*claude.Message)(nil)),
		"Process":                reflect.ValueOf((*claude.Process)(nil)),
		"ProcessWithCallback":    reflect.ValueOf((*claude.ProcessWithCallback)(nil)),
		"Service":                reflect.ValueOf((*claude.Service)(nil)),
		"SessionIDCallback":      reflect.ValueOf((*claude.SessionIDCallback)(nil)),
		"SessionIDMismatchError": reflect.ValueOf((*claude.SessionIDMismatchError)(nil)),
		"SessionInfo":            reflect.ValueOf((*claude.SessionInfo)(nil)),
	}
}
