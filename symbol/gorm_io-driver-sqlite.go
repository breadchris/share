// Code generated by 'yaegi extract gorm.io/driver/sqlite'. DO NOT EDIT.

package symbol

import (
	"go/constant"
	"go/token"
	"gorm.io/driver/sqlite"
	"reflect"
)

func init() {
	Symbols["gorm.io/driver/sqlite/sqlite"] = map[string]reflect.Value{
		// function, constant and variable definitions
		"DriverName":                   reflect.ValueOf(constant.MakeFromLiteral("\"sqlite3\"", token.STRING, 0)),
		"ErrConstraintsNotImplemented": reflect.ValueOf(&sqlite.ErrConstraintsNotImplemented).Elem(),
		"New":                          reflect.ValueOf(sqlite.New),
		"Open":                         reflect.ValueOf(sqlite.Open),

		// type definitions
		"Config":     reflect.ValueOf((*sqlite.Config)(nil)),
		"Dialector":  reflect.ValueOf((*sqlite.Dialector)(nil)),
		"ErrMessage": reflect.ValueOf((*sqlite.ErrMessage)(nil)),
		"Index":      reflect.ValueOf((*sqlite.Index)(nil)),
		"Migrator":   reflect.ValueOf((*sqlite.Migrator)(nil)),
	}
}
