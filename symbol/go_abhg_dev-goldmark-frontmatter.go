// Code generated by 'yaegi extract go.abhg.dev/goldmark/frontmatter'. DO NOT EDIT.

package symbol

import (
	"go.abhg.dev/goldmark/frontmatter"
	"reflect"
)

func init() {
	Symbols["go.abhg.dev/goldmark/frontmatter/frontmatter"] = map[string]reflect.Value{
		// function, constant and variable definitions
		"DefaultFormats": reflect.ValueOf(&frontmatter.DefaultFormats).Elem(),
		"Get":            reflect.ValueOf(frontmatter.Get),
		"SetMetadata":    reflect.ValueOf(frontmatter.SetMetadata),
		"TOML":           reflect.ValueOf(&frontmatter.TOML).Elem(),
		"YAML":           reflect.ValueOf(&frontmatter.YAML).Elem(),

		// type definitions
		"Data":            reflect.ValueOf((*frontmatter.Data)(nil)),
		"Extender":        reflect.ValueOf((*frontmatter.Extender)(nil)),
		"Format":          reflect.ValueOf((*frontmatter.Format)(nil)),
		"MetaTransformer": reflect.ValueOf((*frontmatter.MetaTransformer)(nil)),
		"Mode":            reflect.ValueOf((*frontmatter.Mode)(nil)),
		"Parser":          reflect.ValueOf((*frontmatter.Parser)(nil)),
	}
}
