// Code generated by 'yaegi extract github.com/google/gopacket/layers'. DO NOT EDIT.

package symbol

import (
	"github.com/google/gopacket/layers"
	"go/constant"
	"go/token"
	"reflect"
)

func init() {
	Symbols["github.com/google/gopacket/layers/layers"] = map[string]reflect.Value{
		// function, constant and variable definitions
		"ARPReply":                                                reflect.ValueOf(constant.MakeFromLiteral("2", token.INT, 0)),
		"ARPRequest":                                              reflect.ValueOf(constant.MakeFromLiteral("1", token.INT, 0)),
		"ASExternalLSAtype":                                       reflect.ValueOf(constant.MakeFromLiteral("16389", token.INT, 0)),
		"ASExternalLSAtypeV2":                                     reflect.ValueOf(constant.MakeFromLiteral("5", token.INT, 0)),
		"ASFDCMIEnterprise":                                       reflect.ValueOf(layers.ASFDCMIEnterprise),
		"ASFDataIdentifierPresencePing":                           reflect.ValueOf(&layers.ASFDataIdentifierPresencePing).Elem(),
		"ASFDataIdentifierPresencePong":                           reflect.ValueOf(&layers.ASFDataIdentifierPresencePong).Elem(),
		"ASFPresencePongEntityASFv1":                              reflect.ValueOf(layers.ASFPresencePongEntityASFv1),
		"ASFPresencePongEntityIPMI":                               reflect.ValueOf(layers.ASFPresencePongEntityIPMI),
		"ASFPresencePongInteractionDASH":                          reflect.ValueOf(layers.ASFPresencePongInteractionDASH),
		"ASFPresencePongInteractionSecurityExtensions":            reflect.ValueOf(layers.ASFPresencePongInteractionSecurityExtensions),
		"ASFRMCPEnterprise":                                       reflect.ValueOf(layers.ASFRMCPEnterprise),
		"BFDAuthTypeKeyedMD5":                                     reflect.ValueOf(layers.BFDAuthTypeKeyedMD5),
		"BFDAuthTypeKeyedSHA1":                                    reflect.ValueOf(layers.BFDAuthTypeKeyedSHA1),
		"BFDAuthTypeMeticulousKeyedMD5":                           reflect.ValueOf(layers.BFDAuthTypeMeticulousKeyedMD5),
		"BFDAuthTypeMeticulousKeyedSHA1":                          reflect.ValueOf(layers.BFDAuthTypeMeticulousKeyedSHA1),
		"BFDAuthTypeNone":                                         reflect.ValueOf(layers.BFDAuthTypeNone),
		"BFDAuthTypePassword":                                     reflect.ValueOf(layers.BFDAuthTypePassword),
		"BFDDiagnosticAdminDown":                                  reflect.ValueOf(layers.BFDDiagnosticAdminDown),
		"BFDDiagnosticConcatPathDown":                             reflect.ValueOf(layers.BFDDiagnosticConcatPathDown),
		"BFDDiagnosticEchoFailed":                                 reflect.ValueOf(layers.BFDDiagnosticEchoFailed),
		"BFDDiagnosticForwardPlaneReset":                          reflect.ValueOf(layers.BFDDiagnosticForwardPlaneReset),
		"BFDDiagnosticNeighborSignalDown":                         reflect.ValueOf(layers.BFDDiagnosticNeighborSignalDown),
		"BFDDiagnosticNone":                                       reflect.ValueOf(layers.BFDDiagnosticNone),
		"BFDDiagnosticPathDown":                                   reflect.ValueOf(layers.BFDDiagnosticPathDown),
		"BFDDiagnosticRevConcatPathDown":                          reflect.ValueOf(layers.BFDDiagnosticRevConcatPathDown),
		"BFDDiagnosticTimeExpired":                                reflect.ValueOf(layers.BFDDiagnosticTimeExpired),
		"BFDStateAdminDown":                                       reflect.ValueOf(layers.BFDStateAdminDown),
		"BFDStateDown":                                            reflect.ValueOf(layers.BFDStateDown),
		"BFDStateInit":                                            reflect.ValueOf(layers.BFDStateInit),
		"BFDStateUp":                                              reflect.ValueOf(layers.BFDStateUp),
		"CDPAddressTypeAPOLLO":                                    reflect.ValueOf(layers.CDPAddressTypeAPOLLO),
		"CDPAddressTypeAPPLETALK":                                 reflect.ValueOf(layers.CDPAddressTypeAPPLETALK),
		"CDPAddressTypeCLNP":                                      reflect.ValueOf(layers.CDPAddressTypeCLNP),
		"CDPAddressTypeDECNET":                                    reflect.ValueOf(layers.CDPAddressTypeDECNET),
		"CDPAddressTypeIPV4":                                      reflect.ValueOf(layers.CDPAddressTypeIPV4),
		"CDPAddressTypeIPV6":                                      reflect.ValueOf(layers.CDPAddressTypeIPV6),
		"CDPAddressTypeIPX":                                       reflect.ValueOf(layers.CDPAddressTypeIPX),
		"CDPAddressTypeVINES":                                     reflect.ValueOf(layers.CDPAddressTypeVINES),
		"CDPAddressTypeXNS":                                       reflect.ValueOf(layers.CDPAddressTypeXNS),
		"CDPCapMaskHost":                                          reflect.ValueOf(layers.CDPCapMaskHost),
		"CDPCapMaskIGMPFilter":                                    reflect.ValueOf(layers.CDPCapMaskIGMPFilter),
		"CDPCapMaskPhone":                                         reflect.ValueOf(layers.CDPCapMaskPhone),
		"CDPCapMaskRemote":                                        reflect.ValueOf(layers.CDPCapMaskRemote),
		"CDPCapMaskRepeater":                                      reflect.ValueOf(layers.CDPCapMaskRepeater),
		"CDPCapMaskRouter":                                        reflect.ValueOf(layers.CDPCapMaskRouter),
		"CDPCapMaskSPBridge":                                      reflect.ValueOf(layers.CDPCapMaskSPBridge),
		"CDPCapMaskSwitch":                                        reflect.ValueOf(layers.CDPCapMaskSwitch),
		"CDPCapMaskTBBridge":                                      reflect.ValueOf(layers.CDPCapMaskTBBridge),
		"CDPEnergyWiseDomain":                                     reflect.ValueOf(layers.CDPEnergyWiseDomain),
		"CDPEnergyWiseName":                                       reflect.ValueOf(layers.CDPEnergyWiseName),
		"CDPEnergyWiseReplyTo":                                    reflect.ValueOf(layers.CDPEnergyWiseReplyTo),
		"CDPEnergyWiseRole":                                       reflect.ValueOf(layers.CDPEnergyWiseRole),
		"CDPPoEFourWire":                                          reflect.ValueOf(layers.CDPPoEFourWire),
		"CDPPoEPDArch":                                            reflect.ValueOf(layers.CDPPoEPDArch),
		"CDPPoEPDRequest":                                         reflect.ValueOf(layers.CDPPoEPDRequest),
		"CDPPoEPSE":                                               reflect.ValueOf(layers.CDPPoEPSE),
		"CDPProtocolType802_2":                                    reflect.ValueOf(layers.CDPProtocolType802_2),
		"CDPProtocolTypeNLPID":                                    reflect.ValueOf(layers.CDPProtocolTypeNLPID),
		"CDPTLVAddress":                                           reflect.ValueOf(layers.CDPTLVAddress),
		"CDPTLVCapabilities":                                      reflect.ValueOf(layers.CDPTLVCapabilities),
		"CDPTLVDevID":                                             reflect.ValueOf(layers.CDPTLVDevID),
		"CDPTLVEnergyWise":                                        reflect.ValueOf(layers.CDPTLVEnergyWise),
		"CDPTLVExtendedTrust":                                     reflect.ValueOf(layers.CDPTLVExtendedTrust),
		"CDPTLVExternalPortID":                                    reflect.ValueOf(layers.CDPTLVExternalPortID),
		"CDPTLVFullDuplex":                                        reflect.ValueOf(layers.CDPTLVFullDuplex),
		"CDPTLVHello":                                             reflect.ValueOf(layers.CDPTLVHello),
		"CDPTLVIPPrefix":                                          reflect.ValueOf(layers.CDPTLVIPPrefix),
		"CDPTLVLocation":                                          reflect.ValueOf(layers.CDPTLVLocation),
		"CDPTLVMTU":                                               reflect.ValueOf(layers.CDPTLVMTU),
		"CDPTLVMgmtAddresses":                                     reflect.ValueOf(layers.CDPTLVMgmtAddresses),
		"CDPTLVNativeVLAN":                                        reflect.ValueOf(layers.CDPTLVNativeVLAN),
		"CDPTLVPlatform":                                          reflect.ValueOf(layers.CDPTLVPlatform),
		"CDPTLVPortID":                                            reflect.ValueOf(layers.CDPTLVPortID),
		"CDPTLVPortUnidirectional":                                reflect.ValueOf(layers.CDPTLVPortUnidirectional),
		"CDPTLVPower":                                             reflect.ValueOf(layers.CDPTLVPower),
		"CDPTLVPowerAvailable":                                    reflect.ValueOf(layers.CDPTLVPowerAvailable),
		"CDPTLVPowerRequested":                                    reflect.ValueOf(layers.CDPTLVPowerRequested),
		"CDPTLVSparePairPOE":                                      reflect.ValueOf(layers.CDPTLVSparePairPOE),
		"CDPTLVSysName":                                           reflect.ValueOf(layers.CDPTLVSysName),
		"CDPTLVSysOID":                                            reflect.ValueOf(layers.CDPTLVSysOID),
		"CDPTLVUntrustedCOS":                                      reflect.ValueOf(layers.CDPTLVUntrustedCOS),
		"CDPTLVVLANQuery":                                         reflect.ValueOf(layers.CDPTLVVLANQuery),
		"CDPTLVVLANReply":                                         reflect.ValueOf(layers.CDPTLVVLANReply),
		"CDPTLVVTPDomain":                                         reflect.ValueOf(layers.CDPTLVVTPDomain),
		"CDPTLVVersion":                                           reflect.ValueOf(layers.CDPTLVVersion),
		"CreateICMPv4TypeCode":                                    reflect.ValueOf(layers.CreateICMPv4TypeCode),
		"CreateICMPv6TypeCode":                                    reflect.ValueOf(layers.CreateICMPv6TypeCode),
		"DHCPMagic":                                               reflect.ValueOf(&layers.DHCPMagic).Elem(),
		"DHCPMsgTypeAck":                                          reflect.ValueOf(layers.DHCPMsgTypeAck),
		"DHCPMsgTypeDecline":                                      reflect.ValueOf(layers.DHCPMsgTypeDecline),
		"DHCPMsgTypeDiscover":                                     reflect.ValueOf(layers.DHCPMsgTypeDiscover),
		"DHCPMsgTypeInform":                                       reflect.ValueOf(layers.DHCPMsgTypeInform),
		"DHCPMsgTypeNak":                                          reflect.ValueOf(layers.DHCPMsgTypeNak),
		"DHCPMsgTypeOffer":                                        reflect.ValueOf(layers.DHCPMsgTypeOffer),
		"DHCPMsgTypeRelease":                                      reflect.ValueOf(layers.DHCPMsgTypeRelease),
		"DHCPMsgTypeRequest":                                      reflect.ValueOf(layers.DHCPMsgTypeRequest),
		"DHCPMsgTypeUnspecified":                                  reflect.ValueOf(layers.DHCPMsgTypeUnspecified),
		"DHCPOpReply":                                             reflect.ValueOf(layers.DHCPOpReply),
		"DHCPOpRequest":                                           reflect.ValueOf(layers.DHCPOpRequest),
		"DHCPOptARPTimeout":                                       reflect.ValueOf(layers.DHCPOptARPTimeout),
		"DHCPOptARPTrailers":                                      reflect.ValueOf(layers.DHCPOptARPTrailers),
		"DHCPOptAllSubsLocal":                                     reflect.ValueOf(layers.DHCPOptAllSubsLocal),
		"DHCPOptBootfileSize":                                     reflect.ValueOf(layers.DHCPOptBootfileSize),
		"DHCPOptBroadcastAddr":                                    reflect.ValueOf(layers.DHCPOptBroadcastAddr),
		"DHCPOptClassID":                                          reflect.ValueOf(layers.DHCPOptClassID),
		"DHCPOptClasslessStaticRoute":                             reflect.ValueOf(layers.DHCPOptClasslessStaticRoute),
		"DHCPOptClientID":                                         reflect.ValueOf(layers.DHCPOptClientID),
		"DHCPOptCookieServer":                                     reflect.ValueOf(layers.DHCPOptCookieServer),
		"DHCPOptDNS":                                              reflect.ValueOf(layers.DHCPOptDNS),
		"DHCPOptDatagramMTU":                                      reflect.ValueOf(layers.DHCPOptDatagramMTU),
		"DHCPOptDefaultTTL":                                       reflect.ValueOf(layers.DHCPOptDefaultTTL),
		"DHCPOptDomainName":                                       reflect.ValueOf(layers.DHCPOptDomainName),
		"DHCPOptDomainSearch":                                     reflect.ValueOf(layers.DHCPOptDomainSearch),
		"DHCPOptEnd":                                              reflect.ValueOf(layers.DHCPOptEnd),
		"DHCPOptEthernetEncap":                                    reflect.ValueOf(layers.DHCPOptEthernetEncap),
		"DHCPOptExtOptions":                                       reflect.ValueOf(layers.DHCPOptExtOptions),
		"DHCPOptExtensionsPath":                                   reflect.ValueOf(layers.DHCPOptExtensionsPath),
		"DHCPOptHostname":                                         reflect.ValueOf(layers.DHCPOptHostname),
		"DHCPOptIPForwarding":                                     reflect.ValueOf(layers.DHCPOptIPForwarding),
		"DHCPOptImpressServer":                                    reflect.ValueOf(layers.DHCPOptImpressServer),
		"DHCPOptInterfaceMTU":                                     reflect.ValueOf(layers.DHCPOptInterfaceMTU),
		"DHCPOptLPRServer":                                        reflect.ValueOf(layers.DHCPOptLPRServer),
		"DHCPOptLeaseTime":                                        reflect.ValueOf(layers.DHCPOptLeaseTime),
		"DHCPOptLogServer":                                        reflect.ValueOf(layers.DHCPOptLogServer),
		"DHCPOptMaskDiscovery":                                    reflect.ValueOf(layers.DHCPOptMaskDiscovery),
		"DHCPOptMaskSupplier":                                     reflect.ValueOf(layers.DHCPOptMaskSupplier),
		"DHCPOptMaxMessageSize":                                   reflect.ValueOf(layers.DHCPOptMaxMessageSize),
		"DHCPOptMeritDumpFile":                                    reflect.ValueOf(layers.DHCPOptMeritDumpFile),
		"DHCPOptMessage":                                          reflect.ValueOf(layers.DHCPOptMessage),
		"DHCPOptMessageType":                                      reflect.ValueOf(layers.DHCPOptMessageType),
		"DHCPOptNETBIOSTCPNodeType":                               reflect.ValueOf(layers.DHCPOptNETBIOSTCPNodeType),
		"DHCPOptNISDomain":                                        reflect.ValueOf(layers.DHCPOptNISDomain),
		"DHCPOptNISServers":                                       reflect.ValueOf(layers.DHCPOptNISServers),
		"DHCPOptNTPServers":                                       reflect.ValueOf(layers.DHCPOptNTPServers),
		"DHCPOptNameServer":                                       reflect.ValueOf(layers.DHCPOptNameServer),
		"DHCPOptNetBIOSTCPDDS":                                    reflect.ValueOf(layers.DHCPOptNetBIOSTCPDDS),
		"DHCPOptNetBIOSTCPNS":                                     reflect.ValueOf(layers.DHCPOptNetBIOSTCPNS),
		"DHCPOptNetBIOSTCPScope":                                  reflect.ValueOf(layers.DHCPOptNetBIOSTCPScope),
		"DHCPOptPad":                                              reflect.ValueOf(layers.DHCPOptPad),
		"DHCPOptParamsRequest":                                    reflect.ValueOf(layers.DHCPOptParamsRequest),
		"DHCPOptPathMTUAgingTimeout":                              reflect.ValueOf(layers.DHCPOptPathMTUAgingTimeout),
		"DHCPOptPathPlateuTableOption":                            reflect.ValueOf(layers.DHCPOptPathPlateuTableOption),
		"DHCPOptPolicyFilter":                                     reflect.ValueOf(layers.DHCPOptPolicyFilter),
		"DHCPOptRequestIP":                                        reflect.ValueOf(layers.DHCPOptRequestIP),
		"DHCPOptResLocServer":                                     reflect.ValueOf(layers.DHCPOptResLocServer),
		"DHCPOptRootPath":                                         reflect.ValueOf(layers.DHCPOptRootPath),
		"DHCPOptRouter":                                           reflect.ValueOf(layers.DHCPOptRouter),
		"DHCPOptRouterDiscovery":                                  reflect.ValueOf(layers.DHCPOptRouterDiscovery),
		"DHCPOptSIPServers":                                       reflect.ValueOf(layers.DHCPOptSIPServers),
		"DHCPOptServerID":                                         reflect.ValueOf(layers.DHCPOptServerID),
		"DHCPOptSolicitAddr":                                      reflect.ValueOf(layers.DHCPOptSolicitAddr),
		"DHCPOptSourceRouting":                                    reflect.ValueOf(layers.DHCPOptSourceRouting),
		"DHCPOptStaticRoute":                                      reflect.ValueOf(layers.DHCPOptStaticRoute),
		"DHCPOptSubnetMask":                                       reflect.ValueOf(layers.DHCPOptSubnetMask),
		"DHCPOptSwapServer":                                       reflect.ValueOf(layers.DHCPOptSwapServer),
		"DHCPOptT1":                                               reflect.ValueOf(layers.DHCPOptT1),
		"DHCPOptT2":                                               reflect.ValueOf(layers.DHCPOptT2),
		"DHCPOptTCPKeepAliveGarbage":                              reflect.ValueOf(layers.DHCPOptTCPKeepAliveGarbage),
		"DHCPOptTCPKeepAliveInt":                                  reflect.ValueOf(layers.DHCPOptTCPKeepAliveInt),
		"DHCPOptTCPTTL":                                           reflect.ValueOf(layers.DHCPOptTCPTTL),
		"DHCPOptTimeOffset":                                       reflect.ValueOf(layers.DHCPOptTimeOffset),
		"DHCPOptTimeServer":                                       reflect.ValueOf(layers.DHCPOptTimeServer),
		"DHCPOptVendorOption":                                     reflect.ValueOf(layers.DHCPOptVendorOption),
		"DHCPOptXDisplayManager":                                  reflect.ValueOf(layers.DHCPOptXDisplayManager),
		"DHCPOptXFontServer":                                      reflect.ValueOf(layers.DHCPOptXFontServer),
		"DHCPv6DUIDTypeEN":                                        reflect.ValueOf(layers.DHCPv6DUIDTypeEN),
		"DHCPv6DUIDTypeLL":                                        reflect.ValueOf(layers.DHCPv6DUIDTypeLL),
		"DHCPv6DUIDTypeLLT":                                       reflect.ValueOf(layers.DHCPv6DUIDTypeLLT),
		"DHCPv6MsgTypeAdverstise":                                 reflect.ValueOf(layers.DHCPv6MsgTypeAdverstise),
		"DHCPv6MsgTypeConfirm":                                    reflect.ValueOf(layers.DHCPv6MsgTypeConfirm),
		"DHCPv6MsgTypeDecline":                                    reflect.ValueOf(layers.DHCPv6MsgTypeDecline),
		"DHCPv6MsgTypeInformationRequest":                         reflect.ValueOf(layers.DHCPv6MsgTypeInformationRequest),
		"DHCPv6MsgTypeRebind":                                     reflect.ValueOf(layers.DHCPv6MsgTypeRebind),
		"DHCPv6MsgTypeReconfigure":                                reflect.ValueOf(layers.DHCPv6MsgTypeReconfigure),
		"DHCPv6MsgTypeRelayForward":                               reflect.ValueOf(layers.DHCPv6MsgTypeRelayForward),
		"DHCPv6MsgTypeRelayReply":                                 reflect.ValueOf(layers.DHCPv6MsgTypeRelayReply),
		"DHCPv6MsgTypeRelease":                                    reflect.ValueOf(layers.DHCPv6MsgTypeRelease),
		"DHCPv6MsgTypeRenew":                                      reflect.ValueOf(layers.DHCPv6MsgTypeRenew),
		"DHCPv6MsgTypeReply":                                      reflect.ValueOf(layers.DHCPv6MsgTypeReply),
		"DHCPv6MsgTypeRequest":                                    reflect.ValueOf(layers.DHCPv6MsgTypeRequest),
		"DHCPv6MsgTypeSolicit":                                    reflect.ValueOf(layers.DHCPv6MsgTypeSolicit),
		"DHCPv6MsgTypeUnspecified":                                reflect.ValueOf(layers.DHCPv6MsgTypeUnspecified),
		"DHCPv6Opt4RD":                                            reflect.ValueOf(layers.DHCPv6Opt4RD),
		"DHCPv6Opt4RDMapRule":                                     reflect.ValueOf(layers.DHCPv6Opt4RDMapRule),
		"DHCPv6Opt4RDNonMapRule":                                  reflect.ValueOf(layers.DHCPv6Opt4RDNonMapRule),
		"DHCPv6OptAFTRName":                                       reflect.ValueOf(layers.DHCPv6OptAFTRName),
		"DHCPv6OptANIAPBSSID":                                     reflect.ValueOf(layers.DHCPv6OptANIAPBSSID),
		"DHCPv6OptANIAPName":                                      reflect.ValueOf(layers.DHCPv6OptANIAPName),
		"DHCPv6OptANIATT":                                         reflect.ValueOf(layers.DHCPv6OptANIATT),
		"DHCPv6OptANINetworkName":                                 reflect.ValueOf(layers.DHCPv6OptANINetworkName),
		"DHCPv6OptANIOperatorID":                                  reflect.ValueOf(layers.DHCPv6OptANIOperatorID),
		"DHCPv6OptANIOperatorRealm":                               reflect.ValueOf(layers.DHCPv6OptANIOperatorRealm),
		"DHCPv6OptAddrSel":                                        reflect.ValueOf(layers.DHCPv6OptAddrSel),
		"DHCPv6OptAddrSelTable":                                   reflect.ValueOf(layers.DHCPv6OptAddrSelTable),
		"DHCPv6OptAuth":                                           reflect.ValueOf(layers.DHCPv6OptAuth),
		"DHCPv6OptBCMCSServerAddressList":                         reflect.ValueOf(layers.DHCPv6OptBCMCSServerAddressList),
		"DHCPv6OptBCMCSServerDomainNameList":                      reflect.ValueOf(layers.DHCPv6OptBCMCSServerDomainNameList),
		"DHCPv6OptBootFileParam":                                  reflect.ValueOf(layers.DHCPv6OptBootFileParam),
		"DHCPv6OptBootFileURL":                                    reflect.ValueOf(layers.DHCPv6OptBootFileURL),
		"DHCPv6OptCAPWAPACV6":                                     reflect.ValueOf(layers.DHCPv6OptCAPWAPACV6),
		"DHCPv6OptCLTTime":                                        reflect.ValueOf(layers.DHCPv6OptCLTTime),
		"DHCPv6OptCaptivePortal":                                  reflect.ValueOf(layers.DHCPv6OptCaptivePortal),
		"DHCPv6OptClientArchType":                                 reflect.ValueOf(layers.DHCPv6OptClientArchType),
		"DHCPv6OptClientData":                                     reflect.ValueOf(layers.DHCPv6OptClientData),
		"DHCPv6OptClientFQDN":                                     reflect.ValueOf(layers.DHCPv6OptClientFQDN),
		"DHCPv6OptClientID":                                       reflect.ValueOf(layers.DHCPv6OptClientID),
		"DHCPv6OptClientLinkLayerAddress":                         reflect.ValueOf(layers.DHCPv6OptClientLinkLayerAddress),
		"DHCPv6OptDHCPv4Message":                                  reflect.ValueOf(layers.DHCPv6OptDHCPv4Message),
		"DHCPv6OptDHCPv4OverDHCPv6Server":                         reflect.ValueOf(layers.DHCPv6OptDHCPv4OverDHCPv6Server),
		"DHCPv6OptDNSServers":                                     reflect.ValueOf(layers.DHCPv6OptDNSServers),
		"DHCPv6OptDomainList":                                     reflect.ValueOf(layers.DHCPv6OptDomainList),
		"DHCPv6OptERPLocalDomainName":                             reflect.ValueOf(layers.DHCPv6OptERPLocalDomainName),
		"DHCPv6OptEchoRequestOption":                              reflect.ValueOf(layers.DHCPv6OptEchoRequestOption),
		"DHCPv6OptElapsedTime":                                    reflect.ValueOf(layers.DHCPv6OptElapsedTime),
		"DHCPv6OptFBindingStatus":                                 reflect.ValueOf(layers.DHCPv6OptFBindingStatus),
		"DHCPv6OptFConnectFlags":                                  reflect.ValueOf(layers.DHCPv6OptFConnectFlags),
		"DHCPv6OptFDNSFlags":                                      reflect.ValueOf(layers.DHCPv6OptFDNSFlags),
		"DHCPv6OptFDNSHostName":                                   reflect.ValueOf(layers.DHCPv6OptFDNSHostName),
		"DHCPv6OptFDNSRemovalInfo":                                reflect.ValueOf(layers.DHCPv6OptFDNSRemovalInfo),
		"DHCPv6OptFDNSZoneName":                                   reflect.ValueOf(layers.DHCPv6OptFDNSZoneName),
		"DHCPv6OptFExpirationTime":                                reflect.ValueOf(layers.DHCPv6OptFExpirationTime),
		"DHCPv6OptFKeepaliveTime":                                 reflect.ValueOf(layers.DHCPv6OptFKeepaliveTime),
		"DHCPv6OptFMCLT":                                          reflect.ValueOf(layers.DHCPv6OptFMCLT),
		"DHCPv6OptFMaxUnacknowledgedBNDUPD":                       reflect.ValueOf(layers.DHCPv6OptFMaxUnacknowledgedBNDUPD),
		"DHCPv6OptFPartnerDownTime":                               reflect.ValueOf(layers.DHCPv6OptFPartnerDownTime),
		"DHCPv6OptFPartnerLifetime":                               reflect.ValueOf(layers.DHCPv6OptFPartnerLifetime),
		"DHCPv6OptFPartnerLifetimeSent":                           reflect.ValueOf(layers.DHCPv6OptFPartnerLifetimeSent),
		"DHCPv6OptFPartnerRawCltTime":                             reflect.ValueOf(layers.DHCPv6OptFPartnerRawCltTime),
		"DHCPv6OptFProtocolVersion":                               reflect.ValueOf(layers.DHCPv6OptFProtocolVersion),
		"DHCPv6OptFReconfigureData":                               reflect.ValueOf(layers.DHCPv6OptFReconfigureData),
		"DHCPv6OptFRelationshipName":                              reflect.ValueOf(layers.DHCPv6OptFRelationshipName),
		"DHCPv6OptFServerFlags":                                   reflect.ValueOf(layers.DHCPv6OptFServerFlags),
		"DHCPv6OptFServerState":                                   reflect.ValueOf(layers.DHCPv6OptFServerState),
		"DHCPv6OptFStartTimeOfState":                              reflect.ValueOf(layers.DHCPv6OptFStartTimeOfState),
		"DHCPv6OptFStateExpirationTime":                           reflect.ValueOf(layers.DHCPv6OptFStateExpirationTime),
		"DHCPv6OptGeoconfCivic":                                   reflect.ValueOf(layers.DHCPv6OptGeoconfCivic),
		"DHCPv6OptGeolocation":                                    reflect.ValueOf(layers.DHCPv6OptGeolocation),
		"DHCPv6OptIAAddr":                                         reflect.ValueOf(layers.DHCPv6OptIAAddr),
		"DHCPv6OptIANA":                                           reflect.ValueOf(layers.DHCPv6OptIANA),
		"DHCPv6OptIAPD":                                           reflect.ValueOf(layers.DHCPv6OptIAPD),
		"DHCPv6OptIAPrefix":                                       reflect.ValueOf(layers.DHCPv6OptIAPrefix),
		"DHCPv6OptIATA":                                           reflect.ValueOf(layers.DHCPv6OptIATA),
		"DHCPv6OptIPV6AddressANDSF":                               reflect.ValueOf(layers.DHCPv6OptIPV6AddressANDSF),
		"DHCPv6OptIPv6AddressMoS":                                 reflect.ValueOf(layers.DHCPv6OptIPv6AddressMoS),
		"DHCPv6OptIPv6FQDNMoS":                                    reflect.ValueOf(layers.DHCPv6OptIPv6FQDNMoS),
		"DHCPv6OptInfMaxRt":                                       reflect.ValueOf(layers.DHCPv6OptInfMaxRt),
		"DHCPv6OptInformationRefreshTime":                         reflect.ValueOf(layers.DHCPv6OptInformationRefreshTime),
		"DHCPv6OptInterfaceID":                                    reflect.ValueOf(layers.DHCPv6OptInterfaceID),
		"DHCPv6OptKRBKDC":                                         reflect.ValueOf(layers.DHCPv6OptKRBKDC),
		"DHCPv6OptKRBPrincipalName":                               reflect.ValueOf(layers.DHCPv6OptKRBPrincipalName),
		"DHCPv6OptKRBRealmName":                                   reflect.ValueOf(layers.DHCPv6OptKRBRealmName),
		"DHCPv6OptLQBaseTime":                                     reflect.ValueOf(layers.DHCPv6OptLQBaseTime),
		"DHCPv6OptLQClientLink":                                   reflect.ValueOf(layers.DHCPv6OptLQClientLink),
		"DHCPv6OptLQEndTime":                                      reflect.ValueOf(layers.DHCPv6OptLQEndTime),
		"DHCPv6OptLQQuery":                                        reflect.ValueOf(layers.DHCPv6OptLQQuery),
		"DHCPv6OptLQRelayData":                                    reflect.ValueOf(layers.DHCPv6OptLQRelayData),
		"DHCPv6OptLQStartTime":                                    reflect.ValueOf(layers.DHCPv6OptLQStartTime),
		"DHCPv6OptLinkAddress":                                    reflect.ValueOf(layers.DHCPv6OptLinkAddress),
		"DHCPv6OptMIP6HAA":                                        reflect.ValueOf(layers.DHCPv6OptMIP6HAA),
		"DHCPv6OptMIP6HAF":                                        reflect.ValueOf(layers.DHCPv6OptMIP6HAF),
		"DHCPv6OptMIP6HNIDF":                                      reflect.ValueOf(layers.DHCPv6OptMIP6HNIDF),
		"DHCPv6OptMIP6HNP":                                        reflect.ValueOf(layers.DHCPv6OptMIP6HNP),
		"DHCPv6OptMIP6IDINF":                                      reflect.ValueOf(layers.DHCPv6OptMIP6IDINF),
		"DHCPv6OptMIP6UDINF":                                      reflect.ValueOf(layers.DHCPv6OptMIP6UDINF),
		"DHCPv6OptMIP6VDINF":                                      reflect.ValueOf(layers.DHCPv6OptMIP6VDINF),
		"DHCPv6OptMPLParameters":                                  reflect.ValueOf(layers.DHCPv6OptMPLParameters),
		"DHCPv6OptMUDURLV6":                                       reflect.ValueOf(layers.DHCPv6OptMUDURLV6),
		"DHCPv6OptNII":                                            reflect.ValueOf(layers.DHCPv6OptNII),
		"DHCPv6OptNISDomainName":                                  reflect.ValueOf(layers.DHCPv6OptNISDomainName),
		"DHCPv6OptNISPDomainName":                                 reflect.ValueOf(layers.DHCPv6OptNISPDomainName),
		"DHCPv6OptNISPServers":                                    reflect.ValueOf(layers.DHCPv6OptNISPServers),
		"DHCPv6OptNISServers":                                     reflect.ValueOf(layers.DHCPv6OptNISServers),
		"DHCPv6OptNTPServer":                                      reflect.ValueOf(layers.DHCPv6OptNTPServer),
		"DHCPv6OptNewPOSIXTimezone":                               reflect.ValueOf(layers.DHCPv6OptNewPOSIXTimezone),
		"DHCPv6OptNewTZDBTimezone":                                reflect.ValueOf(layers.DHCPv6OptNewTZDBTimezone),
		"DHCPv6OptOro":                                            reflect.ValueOf(layers.DHCPv6OptOro),
		"DHCPv6OptPDExclude":                                      reflect.ValueOf(layers.DHCPv6OptPDExclude),
		"DHCPv6OptPanaAgent":                                      reflect.ValueOf(layers.DHCPv6OptPanaAgent),
		"DHCPv6OptPreference":                                     reflect.ValueOf(layers.DHCPv6OptPreference),
		"DHCPv6OptRADIUS":                                         reflect.ValueOf(layers.DHCPv6OptRADIUS),
		"DHCPv6OptRDNSSSelection":                                 reflect.ValueOf(layers.DHCPv6OptRDNSSSelection),
		"DHCPv6OptRSOO":                                           reflect.ValueOf(layers.DHCPv6OptRSOO),
		"DHCPv6OptRapidCommit":                                    reflect.ValueOf(layers.DHCPv6OptRapidCommit),
		"DHCPv6OptReconfigureAccept":                              reflect.ValueOf(layers.DHCPv6OptReconfigureAccept),
		"DHCPv6OptReconfigureMessage":                             reflect.ValueOf(layers.DHCPv6OptReconfigureMessage),
		"DHCPv6OptRelayID":                                        reflect.ValueOf(layers.DHCPv6OptRelayID),
		"DHCPv6OptRelayMessage":                                   reflect.ValueOf(layers.DHCPv6OptRelayMessage),
		"DHCPv6OptRelayPort":                                      reflect.ValueOf(layers.DHCPv6OptRelayPort),
		"DHCPv6OptRemoteID":                                       reflect.ValueOf(layers.DHCPv6OptRemoteID),
		"DHCPv6OptS46BR":                                          reflect.ValueOf(layers.DHCPv6OptS46BR),
		"DHCPv6OptS46ContLW":                                      reflect.ValueOf(layers.DHCPv6OptS46ContLW),
		"DHCPv6OptS46ContMAPE":                                    reflect.ValueOf(layers.DHCPv6OptS46ContMAPE),
		"DHCPv6OptS46ContMAPT":                                    reflect.ValueOf(layers.DHCPv6OptS46ContMAPT),
		"DHCPv6OptS46DMR":                                         reflect.ValueOf(layers.DHCPv6OptS46DMR),
		"DHCPv6OptS46PortParameters":                              reflect.ValueOf(layers.DHCPv6OptS46PortParameters),
		"DHCPv6OptS46Priority":                                    reflect.ValueOf(layers.DHCPv6OptS46Priority),
		"DHCPv6OptS46Rule":                                        reflect.ValueOf(layers.DHCPv6OptS46Rule),
		"DHCPv6OptS46V4V4Bind":                                    reflect.ValueOf(layers.DHCPv6OptS46V4V4Bind),
		"DHCPv6OptSIPServersAddressList":                          reflect.ValueOf(layers.DHCPv6OptSIPServersAddressList),
		"DHCPv6OptSIPServersDomainList":                           reflect.ValueOf(layers.DHCPv6OptSIPServersDomainList),
		"DHCPv6OptSIPUACSList":                                    reflect.ValueOf(layers.DHCPv6OptSIPUACSList),
		"DHCPv6OptSNTPServers":                                    reflect.ValueOf(layers.DHCPv6OptSNTPServers),
		"DHCPv6OptServerID":                                       reflect.ValueOf(layers.DHCPv6OptServerID),
		"DHCPv6OptSolMaxRt":                                       reflect.ValueOf(layers.DHCPv6OptSolMaxRt),
		"DHCPv6OptStatusCode":                                     reflect.ValueOf(layers.DHCPv6OptStatusCode),
		"DHCPv6OptSubscriberID":                                   reflect.ValueOf(layers.DHCPv6OptSubscriberID),
		"DHCPv6OptUnicast":                                        reflect.ValueOf(layers.DHCPv6OptUnicast),
		"DHCPv6OptUserClass":                                      reflect.ValueOf(layers.DHCPv6OptUserClass),
		"DHCPv6OptV6AccessDomain":                                 reflect.ValueOf(layers.DHCPv6OptV6AccessDomain),
		"DHCPv6OptV6LOST":                                         reflect.ValueOf(layers.DHCPv6OptV6LOST),
		"DHCPv6OptV6PCPServer":                                    reflect.ValueOf(layers.DHCPv6OptV6PCPServer),
		"DHCPv6OptV6Prefix64":                                     reflect.ValueOf(layers.DHCPv6OptV6Prefix64),
		"DHCPv6OptV6ZeroTouchRedirect":                            reflect.ValueOf(layers.DHCPv6OptV6ZeroTouchRedirect),
		"DHCPv6OptVSS":                                            reflect.ValueOf(layers.DHCPv6OptVSS),
		"DHCPv6OptVendorClass":                                    reflect.ValueOf(layers.DHCPv6OptVendorClass),
		"DHCPv6OptVendorOpts":                                     reflect.ValueOf(layers.DHCPv6OptVendorOpts),
		"DHCPv6StatusCodeNoAddrsAvail":                            reflect.ValueOf(layers.DHCPv6StatusCodeNoAddrsAvail),
		"DHCPv6StatusCodeNoBinding":                               reflect.ValueOf(layers.DHCPv6StatusCodeNoBinding),
		"DHCPv6StatusCodeNotOnLink":                               reflect.ValueOf(layers.DHCPv6StatusCodeNotOnLink),
		"DHCPv6StatusCodeSuccess":                                 reflect.ValueOf(layers.DHCPv6StatusCodeSuccess),
		"DHCPv6StatusCodeUnspecFail":                              reflect.ValueOf(layers.DHCPv6StatusCodeUnspecFail),
		"DHCPv6StatusCodeUseMulticast":                            reflect.ValueOf(layers.DHCPv6StatusCodeUseMulticast),
		"DNSClassAny":                                             reflect.ValueOf(layers.DNSClassAny),
		"DNSClassCH":                                              reflect.ValueOf(layers.DNSClassCH),
		"DNSClassCS":                                              reflect.ValueOf(layers.DNSClassCS),
		"DNSClassHS":                                              reflect.ValueOf(layers.DNSClassHS),
		"DNSClassIN":                                              reflect.ValueOf(layers.DNSClassIN),
		"DNSOpCodeIQuery":                                         reflect.ValueOf(layers.DNSOpCodeIQuery),
		"DNSOpCodeNotify":                                         reflect.ValueOf(layers.DNSOpCodeNotify),
		"DNSOpCodeQuery":                                          reflect.ValueOf(layers.DNSOpCodeQuery),
		"DNSOpCodeStatus":                                         reflect.ValueOf(layers.DNSOpCodeStatus),
		"DNSOpCodeUpdate":                                         reflect.ValueOf(layers.DNSOpCodeUpdate),
		"DNSOptionCodeChain":                                      reflect.ValueOf(layers.DNSOptionCodeChain),
		"DNSOptionCodeCookie":                                     reflect.ValueOf(layers.DNSOptionCodeCookie),
		"DNSOptionCodeDAU":                                        reflect.ValueOf(layers.DNSOptionCodeDAU),
		"DNSOptionCodeDHU":                                        reflect.ValueOf(layers.DNSOptionCodeDHU),
		"DNSOptionCodeDeviceID":                                   reflect.ValueOf(layers.DNSOptionCodeDeviceID),
		"DNSOptionCodeEDNSClientSubnet":                           reflect.ValueOf(layers.DNSOptionCodeEDNSClientSubnet),
		"DNSOptionCodeEDNSClientTag":                              reflect.ValueOf(layers.DNSOptionCodeEDNSClientTag),
		"DNSOptionCodeEDNSExpire":                                 reflect.ValueOf(layers.DNSOptionCodeEDNSExpire),
		"DNSOptionCodeEDNSKeepAlive":                              reflect.ValueOf(layers.DNSOptionCodeEDNSKeepAlive),
		"DNSOptionCodeEDNSKeyTag":                                 reflect.ValueOf(layers.DNSOptionCodeEDNSKeyTag),
		"DNSOptionCodeEDNSServerTag":                              reflect.ValueOf(layers.DNSOptionCodeEDNSServerTag),
		"DNSOptionCodeN3U":                                        reflect.ValueOf(layers.DNSOptionCodeN3U),
		"DNSOptionCodeNSID":                                       reflect.ValueOf(layers.DNSOptionCodeNSID),
		"DNSOptionCodePadding":                                    reflect.ValueOf(layers.DNSOptionCodePadding),
		"DNSResponseCodeBadAlg":                                   reflect.ValueOf(layers.DNSResponseCodeBadAlg),
		"DNSResponseCodeBadCookie":                                reflect.ValueOf(layers.DNSResponseCodeBadCookie),
		"DNSResponseCodeBadKey":                                   reflect.ValueOf(layers.DNSResponseCodeBadKey),
		"DNSResponseCodeBadMode":                                  reflect.ValueOf(layers.DNSResponseCodeBadMode),
		"DNSResponseCodeBadName":                                  reflect.ValueOf(layers.DNSResponseCodeBadName),
		"DNSResponseCodeBadSig":                                   reflect.ValueOf(layers.DNSResponseCodeBadSig),
		"DNSResponseCodeBadTime":                                  reflect.ValueOf(layers.DNSResponseCodeBadTime),
		"DNSResponseCodeBadTruc":                                  reflect.ValueOf(layers.DNSResponseCodeBadTruc),
		"DNSResponseCodeBadVers":                                  reflect.ValueOf(layers.DNSResponseCodeBadVers),
		"DNSResponseCodeFormErr":                                  reflect.ValueOf(layers.DNSResponseCodeFormErr),
		"DNSResponseCodeNXDomain":                                 reflect.ValueOf(layers.DNSResponseCodeNXDomain),
		"DNSResponseCodeNXRRSet":                                  reflect.ValueOf(layers.DNSResponseCodeNXRRSet),
		"DNSResponseCodeNoErr":                                    reflect.ValueOf(layers.DNSResponseCodeNoErr),
		"DNSResponseCodeNotAuth":                                  reflect.ValueOf(layers.DNSResponseCodeNotAuth),
		"DNSResponseCodeNotImp":                                   reflect.ValueOf(layers.DNSResponseCodeNotImp),
		"DNSResponseCodeNotZone":                                  reflect.ValueOf(layers.DNSResponseCodeNotZone),
		"DNSResponseCodeRefused":                                  reflect.ValueOf(layers.DNSResponseCodeRefused),
		"DNSResponseCodeServFail":                                 reflect.ValueOf(layers.DNSResponseCodeServFail),
		"DNSResponseCodeYXDomain":                                 reflect.ValueOf(layers.DNSResponseCodeYXDomain),
		"DNSResponseCodeYXRRSet":                                  reflect.ValueOf(layers.DNSResponseCodeYXRRSet),
		"DNSTypeA":                                                reflect.ValueOf(layers.DNSTypeA),
		"DNSTypeAAAA":                                             reflect.ValueOf(layers.DNSTypeAAAA),
		"DNSTypeCNAME":                                            reflect.ValueOf(layers.DNSTypeCNAME),
		"DNSTypeHINFO":                                            reflect.ValueOf(layers.DNSTypeHINFO),
		"DNSTypeMB":                                               reflect.ValueOf(layers.DNSTypeMB),
		"DNSTypeMD":                                               reflect.ValueOf(layers.DNSTypeMD),
		"DNSTypeMF":                                               reflect.ValueOf(layers.DNSTypeMF),
		"DNSTypeMG":                                               reflect.ValueOf(layers.DNSTypeMG),
		"DNSTypeMINFO":                                            reflect.ValueOf(layers.DNSTypeMINFO),
		"DNSTypeMR":                                               reflect.ValueOf(layers.DNSTypeMR),
		"DNSTypeMX":                                               reflect.ValueOf(layers.DNSTypeMX),
		"DNSTypeNS":                                               reflect.ValueOf(layers.DNSTypeNS),
		"DNSTypeNULL":                                             reflect.ValueOf(layers.DNSTypeNULL),
		"DNSTypeOPT":                                              reflect.ValueOf(layers.DNSTypeOPT),
		"DNSTypePTR":                                              reflect.ValueOf(layers.DNSTypePTR),
		"DNSTypeSOA":                                              reflect.ValueOf(layers.DNSTypeSOA),
		"DNSTypeSRV":                                              reflect.ValueOf(layers.DNSTypeSRV),
		"DNSTypeTXT":                                              reflect.ValueOf(layers.DNSTypeTXT),
		"DNSTypeURI":                                              reflect.ValueOf(layers.DNSTypeURI),
		"DNSTypeWKS":                                              reflect.ValueOf(layers.DNSTypeWKS),
		"DecOptionMalformed":                                      reflect.ValueOf(layers.DecOptionMalformed),
		"DecOptionNotEnoughData":                                  reflect.ValueOf(layers.DecOptionNotEnoughData),
		"Dot11AckPolicyBlock":                                     reflect.ValueOf(layers.Dot11AckPolicyBlock),
		"Dot11AckPolicyNoExplicit":                                reflect.ValueOf(layers.Dot11AckPolicyNoExplicit),
		"Dot11AckPolicyNone":                                      reflect.ValueOf(layers.Dot11AckPolicyNone),
		"Dot11AckPolicyNormal":                                    reflect.ValueOf(layers.Dot11AckPolicyNormal),
		"Dot11AlgorithmOpen":                                      reflect.ValueOf(layers.Dot11AlgorithmOpen),
		"Dot11AlgorithmSharedKey":                                 reflect.ValueOf(layers.Dot11AlgorithmSharedKey),
		"Dot11CodingTypeBCC":                                      reflect.ValueOf(constant.MakeFromLiteral("0", token.INT, 0)),
		"Dot11CodingTypeLDPC":                                     reflect.ValueOf(constant.MakeFromLiteral("1", token.INT, 0)),
		"Dot11FlagsFromDS":                                        reflect.ValueOf(layers.Dot11FlagsFromDS),
		"Dot11FlagsMD":                                            reflect.ValueOf(layers.Dot11FlagsMD),
		"Dot11FlagsMF":                                            reflect.ValueOf(layers.Dot11FlagsMF),
		"Dot11FlagsOrder":                                         reflect.ValueOf(layers.Dot11FlagsOrder),
		"Dot11FlagsPowerManagement":                               reflect.ValueOf(layers.Dot11FlagsPowerManagement),
		"Dot11FlagsRetry":                                         reflect.ValueOf(layers.Dot11FlagsRetry),
		"Dot11FlagsToDS":                                          reflect.ValueOf(layers.Dot11FlagsToDS),
		"Dot11FlagsWEP":                                           reflect.ValueOf(layers.Dot11FlagsWEP),
		"Dot11InformationElementID2040BSSCoExist":                 reflect.ValueOf(layers.Dot11InformationElementID2040BSSCoExist),
		"Dot11InformationElementID2040BSSIntChanReport":           reflect.ValueOf(layers.Dot11InformationElementID2040BSSIntChanReport),
		"Dot11InformationElementIDADDBAExtension":                 reflect.ValueOf(layers.Dot11InformationElementIDADDBAExtension),
		"Dot11InformationElementIDAPChannelReport":                reflect.ValueOf(layers.Dot11InformationElementIDAPChannelReport),
		"Dot11InformationElementIDAdvertisementProtocol":          reflect.ValueOf(layers.Dot11InformationElementIDAdvertisementProtocol),
		"Dot11InformationElementIDAgereProprietary":               reflect.ValueOf(layers.Dot11InformationElementIDAgereProprietary),
		"Dot11InformationElementIDAntenna":                        reflect.ValueOf(layers.Dot11InformationElementIDAntenna),
		"Dot11InformationElementIDAntennaSectorID":                reflect.ValueOf(layers.Dot11InformationElementIDAntennaSectorID),
		"Dot11InformationElementIDAuthMeshPerringExch":            reflect.ValueOf(layers.Dot11InformationElementIDAuthMeshPerringExch),
		"Dot11InformationElementIDAwakeWindow":                    reflect.ValueOf(layers.Dot11InformationElementIDAwakeWindow),
		"Dot11InformationElementIDBSSACAccDelayWAPIParam":         reflect.ValueOf(layers.Dot11InformationElementIDBSSACAccDelayWAPIParam),
		"Dot11InformationElementIDBSSAvailAdmCapacity":            reflect.ValueOf(layers.Dot11InformationElementIDBSSAvailAdmCapacity),
		"Dot11InformationElementIDBSSAverageAccessDelay":          reflect.ValueOf(layers.Dot11InformationElementIDBSSAverageAccessDelay),
		"Dot11InformationElementIDBSSMaxIdlePeriod":               reflect.ValueOf(layers.Dot11InformationElementIDBSSMaxIdlePeriod),
		"Dot11InformationElementIDBeaconTiming":                   reflect.ValueOf(layers.Dot11InformationElementIDBeaconTiming),
		"Dot11InformationElementIDBeamlinkMaintenance":            reflect.ValueOf(layers.Dot11InformationElementIDBeamlinkMaintenance),
		"Dot11InformationElementIDCFSet":                          reflect.ValueOf(layers.Dot11InformationElementIDCFSet),
		"Dot11InformationElementIDChallenge":                      reflect.ValueOf(layers.Dot11InformationElementIDChallenge),
		"Dot11InformationElementIDChannelMeasFeedback":            reflect.ValueOf(layers.Dot11InformationElementIDChannelMeasFeedback),
		"Dot11InformationElementIDChannelSwitchTiming":            reflect.ValueOf(layers.Dot11InformationElementIDChannelSwitchTiming),
		"Dot11InformationElementIDChannelSwitchWrapper":           reflect.ValueOf(layers.Dot11InformationElementIDChannelSwitchWrapper),
		"Dot11InformationElementIDChannelUsage":                   reflect.ValueOf(layers.Dot11InformationElementIDChannelUsage),
		"Dot11InformationElementIDCiscoCCX1CKIPDeviceName":        reflect.ValueOf(layers.Dot11InformationElementIDCiscoCCX1CKIPDeviceName),
		"Dot11InformationElementIDCiscoCCX2":                      reflect.ValueOf(layers.Dot11InformationElementIDCiscoCCX2),
		"Dot11InformationElementIDCiscoUnknown95":                 reflect.ValueOf(layers.Dot11InformationElementIDCiscoUnknown95),
		"Dot11InformationElementIDClusterReport":                  reflect.ValueOf(layers.Dot11InformationElementIDClusterReport),
		"Dot11InformationElementIDClusterTimeOffset":              reflect.ValueOf(layers.Dot11InformationElementIDClusterTimeOffset),
		"Dot11InformationElementIDCollInterferenceReport":         reflect.ValueOf(layers.Dot11InformationElementIDCollInterferenceReport),
		"Dot11InformationElementIDCongestionNotification":         reflect.ValueOf(layers.Dot11InformationElementIDCongestionNotification),
		"Dot11InformationElementIDCountryInfo":                    reflect.ValueOf(layers.Dot11InformationElementIDCountryInfo),
		"Dot11InformationElementIDDMGBSSParamChange":              reflect.ValueOf(layers.Dot11InformationElementIDDMGBSSParamChange),
		"Dot11InformationElementIDDMGBeamRefinement":              reflect.ValueOf(layers.Dot11InformationElementIDDMGBeamRefinement),
		"Dot11InformationElementIDDMGLinkAdaptionAck":             reflect.ValueOf(layers.Dot11InformationElementIDDMGLinkAdaptionAck),
		"Dot11InformationElementIDDMGLinkMargin":                  reflect.ValueOf(layers.Dot11InformationElementIDDMGLinkMargin),
		"Dot11InformationElementIDDMGOperating":                   reflect.ValueOf(layers.Dot11InformationElementIDDMGOperating),
		"Dot11InformationElementIDDMGTSPEC":                       reflect.ValueOf(layers.Dot11InformationElementIDDMGTSPEC),
		"Dot11InformationElementIDDMSCapabilities":                reflect.ValueOf(layers.Dot11InformationElementIDDMSCapabilities),
		"Dot11InformationElementIDDMSRequest":                     reflect.ValueOf(layers.Dot11InformationElementIDDMSRequest),
		"Dot11InformationElementIDDMSResponse":                    reflect.ValueOf(layers.Dot11InformationElementIDDMSResponse),
		"Dot11InformationElementIDDSERegisteredLoc":               reflect.ValueOf(layers.Dot11InformationElementIDDSERegisteredLoc),
		"Dot11InformationElementIDDSSet":                          reflect.ValueOf(layers.Dot11InformationElementIDDSSet),
		"Dot11InformationElementIDDestinationURI":                 reflect.ValueOf(layers.Dot11InformationElementIDDestinationURI),
		"Dot11InformationElementIDDeviceLocation":                 reflect.ValueOf(layers.Dot11InformationElementIDDeviceLocation),
		"Dot11InformationElementIDDiagnosticReport":               reflect.ValueOf(layers.Dot11InformationElementIDDiagnosticReport),
		"Dot11InformationElementIDDiagnosticRequest":              reflect.ValueOf(layers.Dot11InformationElementIDDiagnosticRequest),
		"Dot11InformationElementIDDynamicTonePairReport":          reflect.ValueOf(layers.Dot11InformationElementIDDynamicTonePairReport),
		"Dot11InformationElementIDECPACPolicy":                    reflect.ValueOf(layers.Dot11InformationElementIDECPACPolicy),
		"Dot11InformationElementIDEDCAParamSet":                   reflect.ValueOf(layers.Dot11InformationElementIDEDCAParamSet),
		"Dot11InformationElementIDERPInfo":                        reflect.ValueOf(layers.Dot11InformationElementIDERPInfo),
		"Dot11InformationElementIDERPInfo2":                       reflect.ValueOf(layers.Dot11InformationElementIDERPInfo2),
		"Dot11InformationElementIDESRates":                        reflect.ValueOf(layers.Dot11InformationElementIDESRates),
		"Dot11InformationElementIDEmergencyAlertIdentifier":       reflect.ValueOf(layers.Dot11InformationElementIDEmergencyAlertIdentifier),
		"Dot11InformationElementIDEventReport":                    reflect.ValueOf(layers.Dot11InformationElementIDEventReport),
		"Dot11InformationElementIDEventRequest":                   reflect.ValueOf(layers.Dot11InformationElementIDEventRequest),
		"Dot11InformationElementIDExpBWRequest":                   reflect.ValueOf(layers.Dot11InformationElementIDExpBWRequest),
		"Dot11InformationElementIDExtCapability":                  reflect.ValueOf(layers.Dot11InformationElementIDExtCapability),
		"Dot11InformationElementIDExtChanSwitchAnnounce":          reflect.ValueOf(layers.Dot11InformationElementIDExtChanSwitchAnnounce),
		"Dot11InformationElementIDExtendedBSSLoad":                reflect.ValueOf(layers.Dot11InformationElementIDExtendedBSSLoad),
		"Dot11InformationElementIDExtendedSchedule":               reflect.ValueOf(layers.Dot11InformationElementIDExtendedSchedule),
		"Dot11InformationElementIDFHSet":                          reflect.ValueOf(layers.Dot11InformationElementIDFHSet),
		"Dot11InformationElementIDFMSDescriptor":                  reflect.ValueOf(layers.Dot11InformationElementIDFMSDescriptor),
		"Dot11InformationElementIDFMSRequest":                     reflect.ValueOf(layers.Dot11InformationElementIDFMSRequest),
		"Dot11InformationElementIDFMSResponse":                    reflect.ValueOf(layers.Dot11InformationElementIDFMSResponse),
		"Dot11InformationElementIDFastBSSTrans":                   reflect.ValueOf(layers.Dot11InformationElementIDFastBSSTrans),
		"Dot11InformationElementIDFineTuningMeasureParams":        reflect.ValueOf(layers.Dot11InformationElementIDFineTuningMeasureParams),
		"Dot11InformationElementIDGateAnnouncement":               reflect.ValueOf(layers.Dot11InformationElementIDGateAnnouncement),
		"Dot11InformationElementIDHTCapabilities":                 reflect.ValueOf(layers.Dot11InformationElementIDHTCapabilities),
		"Dot11InformationElementIDHTInfo":                         reflect.ValueOf(layers.Dot11InformationElementIDHTInfo),
		"Dot11InformationElementIDHoppingPatternParam":            reflect.ValueOf(layers.Dot11InformationElementIDHoppingPatternParam),
		"Dot11InformationElementIDHoppingPatternTable":            reflect.ValueOf(layers.Dot11InformationElementIDHoppingPatternTable),
		"Dot11InformationElementIDIBSSDFS":                        reflect.ValueOf(layers.Dot11InformationElementIDIBSSDFS),
		"Dot11InformationElementIDIBSSSet":                        reflect.ValueOf(layers.Dot11InformationElementIDIBSSSet),
		"Dot11InformationElementIDInterworking":                   reflect.ValueOf(layers.Dot11InformationElementIDInterworking),
		"Dot11InformationElementIDLinkIdentifier":                 reflect.ValueOf(layers.Dot11InformationElementIDLinkIdentifier),
		"Dot11InformationElementIDLocationParam":                  reflect.ValueOf(layers.Dot11InformationElementIDLocationParam),
		"Dot11InformationElementIDMCCAOPAdvertOverview":           reflect.ValueOf(layers.Dot11InformationElementIDMCCAOPAdvertOverview),
		"Dot11InformationElementIDMCCAOPAdvertisement":            reflect.ValueOf(layers.Dot11InformationElementIDMCCAOPAdvertisement),
		"Dot11InformationElementIDMCCAOPSetupReply":               reflect.ValueOf(layers.Dot11InformationElementIDMCCAOPSetupReply),
		"Dot11InformationElementIDMCCAOPSetupRequest":             reflect.ValueOf(layers.Dot11InformationElementIDMCCAOPSetupRequest),
		"Dot11InformationElementIDMCCAOPTeardown":                 reflect.ValueOf(layers.Dot11InformationElementIDMCCAOPTeardown),
		"Dot11InformationElementIDMIC":                            reflect.ValueOf(layers.Dot11InformationElementIDMIC),
		"Dot11InformationElementIDManagementMIC":                  reflect.ValueOf(layers.Dot11InformationElementIDManagementMIC),
		"Dot11InformationElementIDMeasurePilotTrans":              reflect.ValueOf(layers.Dot11InformationElementIDMeasurePilotTrans),
		"Dot11InformationElementIDMeasureReport":                  reflect.ValueOf(layers.Dot11InformationElementIDMeasureReport),
		"Dot11InformationElementIDMeasureRequest":                 reflect.ValueOf(layers.Dot11InformationElementIDMeasureRequest),
		"Dot11InformationElementIDMeshAwakeWindows":               reflect.ValueOf(layers.Dot11InformationElementIDMeshAwakeWindows),
		"Dot11InformationElementIDMeshChannelSwitchParam":         reflect.ValueOf(layers.Dot11InformationElementIDMeshChannelSwitchParam),
		"Dot11InformationElementIDMeshConfiguration":              reflect.ValueOf(layers.Dot11InformationElementIDMeshConfiguration),
		"Dot11InformationElementIDMeshID":                         reflect.ValueOf(layers.Dot11InformationElementIDMeshID),
		"Dot11InformationElementIDMeshLinkMetricReport":           reflect.ValueOf(layers.Dot11InformationElementIDMeshLinkMetricReport),
		"Dot11InformationElementIDMeshPeeringManagement":          reflect.ValueOf(layers.Dot11InformationElementIDMeshPeeringManagement),
		"Dot11InformationElementIDMobilityDomain":                 reflect.ValueOf(layers.Dot11InformationElementIDMobilityDomain),
		"Dot11InformationElementIDMultiBand":                      reflect.ValueOf(layers.Dot11InformationElementIDMultiBand),
		"Dot11InformationElementIDMultipleBSSID":                  reflect.ValueOf(layers.Dot11InformationElementIDMultipleBSSID),
		"Dot11InformationElementIDMultipleBSSIDIndex":             reflect.ValueOf(layers.Dot11InformationElementIDMultipleBSSIDIndex),
		"Dot11InformationElementIDMultipleMacSublayers":           reflect.ValueOf(layers.Dot11InformationElementIDMultipleMacSublayers),
		"Dot11InformationElementIDNEXTPCPList":                    reflect.ValueOf(layers.Dot11InformationElementIDNEXTPCPList),
		"Dot11InformationElementIDNeighborReport":                 reflect.ValueOf(layers.Dot11InformationElementIDNeighborReport),
		"Dot11InformationElementIDNextDMGATI":                     reflect.ValueOf(layers.Dot11InformationElementIDNextDMGATI),
		"Dot11InformationElementIDNonTransBSSIDCapability":        reflect.ValueOf(layers.Dot11InformationElementIDNonTransBSSIDCapability),
		"Dot11InformationElementIDOperatingModeNotification":      reflect.ValueOf(layers.Dot11InformationElementIDOperatingModeNotification),
		"Dot11InformationElementIDOverlapBSSScanParam":            reflect.ValueOf(layers.Dot11InformationElementIDOverlapBSSScanParam),
		"Dot11InformationElementIDPCPHandover":                    reflect.ValueOf(layers.Dot11InformationElementIDPCPHandover),
		"Dot11InformationElementIDPTIControl":                     reflect.ValueOf(layers.Dot11InformationElementIDPTIControl),
		"Dot11InformationElementIDPUBufferStatus":                 reflect.ValueOf(layers.Dot11InformationElementIDPUBufferStatus),
		"Dot11InformationElementIDPathError":                      reflect.ValueOf(layers.Dot11InformationElementIDPathError),
		"Dot11InformationElementIDPathReply":                      reflect.ValueOf(layers.Dot11InformationElementIDPathReply),
		"Dot11InformationElementIDPathRequest":                    reflect.ValueOf(layers.Dot11InformationElementIDPathRequest),
		"Dot11InformationElementIDPowerCapability":                reflect.ValueOf(layers.Dot11InformationElementIDPowerCapability),
		"Dot11InformationElementIDPowerConst":                     reflect.ValueOf(layers.Dot11InformationElementIDPowerConst),
		"Dot11InformationElementIDProxyUpdate":                    reflect.ValueOf(layers.Dot11InformationElementIDProxyUpdate),
		"Dot11InformationElementIDProxyUpdateConfirmation":        reflect.ValueOf(layers.Dot11InformationElementIDProxyUpdateConfirmation),
		"Dot11InformationElementIDQBSSLoadElem":                   reflect.ValueOf(layers.Dot11InformationElementIDQBSSLoadElem),
		"Dot11InformationElementIDQOSCapability":                  reflect.ValueOf(layers.Dot11InformationElementIDQOSCapability),
		"Dot11InformationElementIDQOSMapSet":                      reflect.ValueOf(layers.Dot11InformationElementIDQOSMapSet),
		"Dot11InformationElementIDQOSTrafficCapability":           reflect.ValueOf(layers.Dot11InformationElementIDQOSTrafficCapability),
		"Dot11InformationElementIDQuiet":                          reflect.ValueOf(layers.Dot11InformationElementIDQuiet),
		"Dot11InformationElementIDQuietPeriodRequest":             reflect.ValueOf(layers.Dot11InformationElementIDQuietPeriodRequest),
		"Dot11InformationElementIDQuietPeriodResponse":            reflect.ValueOf(layers.Dot11InformationElementIDQuietPeriodResponse),
		"Dot11InformationElementIDRCPI":                           reflect.ValueOf(layers.Dot11InformationElementIDRCPI),
		"Dot11InformationElementIDRICData":                        reflect.ValueOf(layers.Dot11InformationElementIDRICData),
		"Dot11InformationElementIDRICDescriptor":                  reflect.ValueOf(layers.Dot11InformationElementIDRICDescriptor),
		"Dot11InformationElementIDRMEnabledCapabilities":          reflect.ValueOf(layers.Dot11InformationElementIDRMEnabledCapabilities),
		"Dot11InformationElementIDRSNI":                           reflect.ValueOf(layers.Dot11InformationElementIDRSNI),
		"Dot11InformationElementIDRSNInfo":                        reflect.ValueOf(layers.Dot11InformationElementIDRSNInfo),
		"Dot11InformationElementIDRates":                          reflect.ValueOf(layers.Dot11InformationElementIDRates),
		"Dot11InformationElementIDReducedNeighborReport":          reflect.ValueOf(layers.Dot11InformationElementIDReducedNeighborReport),
		"Dot11InformationElementIDRelayCapabilities":              reflect.ValueOf(layers.Dot11InformationElementIDRelayCapabilities),
		"Dot11InformationElementIDRelayTransferParameter":         reflect.ValueOf(layers.Dot11InformationElementIDRelayTransferParameter),
		"Dot11InformationElementIDRequest":                        reflect.ValueOf(layers.Dot11InformationElementIDRequest),
		"Dot11InformationElementIDRoamingConsortium":              reflect.ValueOf(layers.Dot11InformationElementIDRoamingConsortium),
		"Dot11InformationElementIDRootAnnouncement":               reflect.ValueOf(layers.Dot11InformationElementIDRootAnnouncement),
		"Dot11InformationElementIDSSID":                           reflect.ValueOf(layers.Dot11InformationElementIDSSID),
		"Dot11InformationElementIDSSIDList":                       reflect.ValueOf(layers.Dot11InformationElementIDSSIDList),
		"Dot11InformationElementIDSTAAvailability":                reflect.ValueOf(layers.Dot11InformationElementIDSTAAvailability),
		"Dot11InformationElementIDSchedule":                       reflect.ValueOf(layers.Dot11InformationElementIDSchedule),
		"Dot11InformationElementIDSecChanOffset":                  reflect.ValueOf(layers.Dot11InformationElementIDSecChanOffset),
		"Dot11InformationElementIDSessionTransmission":            reflect.ValueOf(layers.Dot11InformationElementIDSessionTransmission),
		"Dot11InformationElementIDSuppOperatingClass":             reflect.ValueOf(layers.Dot11InformationElementIDSuppOperatingClass),
		"Dot11InformationElementIDSupportedChannels":              reflect.ValueOf(layers.Dot11InformationElementIDSupportedChannels),
		"Dot11InformationElementIDSwitchChannelAnnounce":          reflect.ValueOf(layers.Dot11InformationElementIDSwitchChannelAnnounce),
		"Dot11InformationElementIDSwitchingStream":                reflect.ValueOf(layers.Dot11InformationElementIDSwitchingStream),
		"Dot11InformationElementIDSymbolProprietary":              reflect.ValueOf(layers.Dot11InformationElementIDSymbolProprietary),
		"Dot11InformationElementIDTCLASProcessing":                reflect.ValueOf(layers.Dot11InformationElementIDTCLASProcessing),
		"Dot11InformationElementIDTFSRequest":                     reflect.ValueOf(layers.Dot11InformationElementIDTFSRequest),
		"Dot11InformationElementIDTFSResponse":                    reflect.ValueOf(layers.Dot11InformationElementIDTFSResponse),
		"Dot11InformationElementIDTIM":                            reflect.ValueOf(layers.Dot11InformationElementIDTIM),
		"Dot11InformationElementIDTIMBroadcastRequest":            reflect.ValueOf(layers.Dot11InformationElementIDTIMBroadcastRequest),
		"Dot11InformationElementIDTIMBroadcastResponse":           reflect.ValueOf(layers.Dot11InformationElementIDTIMBroadcastResponse),
		"Dot11InformationElementIDTPCReport":                      reflect.ValueOf(layers.Dot11InformationElementIDTPCReport),
		"Dot11InformationElementIDTPCRequest":                     reflect.ValueOf(layers.Dot11InformationElementIDTPCRequest),
		"Dot11InformationElementIDTSDelay":                        reflect.ValueOf(layers.Dot11InformationElementIDTSDelay),
		"Dot11InformationElementIDTVHTOperation":                  reflect.ValueOf(layers.Dot11InformationElementIDTVHTOperation),
		"Dot11InformationElementIDTimeAdvertisement":              reflect.ValueOf(layers.Dot11InformationElementIDTimeAdvertisement),
		"Dot11InformationElementIDTimeZone":                       reflect.ValueOf(layers.Dot11InformationElementIDTimeZone),
		"Dot11InformationElementIDTimeoutInt":                     reflect.ValueOf(layers.Dot11InformationElementIDTimeoutInt),
		"Dot11InformationElementIDTrafficClass":                   reflect.ValueOf(layers.Dot11InformationElementIDTrafficClass),
		"Dot11InformationElementIDTrafficSpec":                    reflect.ValueOf(layers.Dot11InformationElementIDTrafficSpec),
		"Dot11InformationElementIDUAPSDCoexistence":               reflect.ValueOf(layers.Dot11InformationElementIDUAPSDCoexistence),
		"Dot11InformationElementIDUPID":                           reflect.ValueOf(layers.Dot11InformationElementIDUPID),
		"Dot11InformationElementIDUPSIM":                          reflect.ValueOf(layers.Dot11InformationElementIDUPSIM),
		"Dot11InformationElementIDVHTCapabilities":                reflect.ValueOf(layers.Dot11InformationElementIDVHTCapabilities),
		"Dot11InformationElementIDVHTOperation":                   reflect.ValueOf(layers.Dot11InformationElementIDVHTOperation),
		"Dot11InformationElementIDVHTTxPowerEnvelope":             reflect.ValueOf(layers.Dot11InformationElementIDVHTTxPowerEnvelope),
		"Dot11InformationElementIDVendor":                         reflect.ValueOf(layers.Dot11InformationElementIDVendor),
		"Dot11InformationElementIDVendor2":                        reflect.ValueOf(layers.Dot11InformationElementIDVendor2),
		"Dot11InformationElementIDWNMSleepMode":                   reflect.ValueOf(layers.Dot11InformationElementIDWNMSleepMode),
		"Dot11InformationElementIDWakeupSchedule":                 reflect.ValueOf(layers.Dot11InformationElementIDWakeupSchedule),
		"Dot11InformationElementIDWakeupSchedule80211ad":          reflect.ValueOf(layers.Dot11InformationElementIDWakeupSchedule80211ad),
		"Dot11InformationElementIDWhiteSpaceMap":                  reflect.ValueOf(layers.Dot11InformationElementIDWhiteSpaceMap),
		"Dot11InformationElementIDWideBWChannelSwitch":            reflect.ValueOf(layers.Dot11InformationElementIDWideBWChannelSwitch),
		"Dot11ReasonApFull":                                       reflect.ValueOf(layers.Dot11ReasonApFull),
		"Dot11ReasonAuthExpired":                                  reflect.ValueOf(layers.Dot11ReasonAuthExpired),
		"Dot11ReasonClass2FromNonAuth":                            reflect.ValueOf(layers.Dot11ReasonClass2FromNonAuth),
		"Dot11ReasonClass3FromNonAss":                             reflect.ValueOf(layers.Dot11ReasonClass3FromNonAss),
		"Dot11ReasonDeauthStLeaving":                              reflect.ValueOf(layers.Dot11ReasonDeauthStLeaving),
		"Dot11ReasonDisasStLeaving":                               reflect.ValueOf(layers.Dot11ReasonDisasStLeaving),
		"Dot11ReasonInactivity":                                   reflect.ValueOf(layers.Dot11ReasonInactivity),
		"Dot11ReasonReserved":                                     reflect.ValueOf(layers.Dot11ReasonReserved),
		"Dot11ReasonStNotAuth":                                    reflect.ValueOf(layers.Dot11ReasonStNotAuth),
		"Dot11ReasonUnspecified":                                  reflect.ValueOf(layers.Dot11ReasonUnspecified),
		"Dot11StatusAPUnableToHandle":                             reflect.ValueOf(layers.Dot11StatusAPUnableToHandle),
		"Dot11StatusAlgorithmUnsupported":                         reflect.ValueOf(layers.Dot11StatusAlgorithmUnsupported),
		"Dot11StatusAssociationDenied":                            reflect.ValueOf(layers.Dot11StatusAssociationDenied),
		"Dot11StatusCannotSupportAllCapabilities":                 reflect.ValueOf(layers.Dot11StatusCannotSupportAllCapabilities),
		"Dot11StatusChallengeFailure":                             reflect.ValueOf(layers.Dot11StatusChallengeFailure),
		"Dot11StatusFailure":                                      reflect.ValueOf(layers.Dot11StatusFailure),
		"Dot11StatusInabilityExistsAssociation":                   reflect.ValueOf(layers.Dot11StatusInabilityExistsAssociation),
		"Dot11StatusOufOfExpectedSequence":                        reflect.ValueOf(layers.Dot11StatusOufOfExpectedSequence),
		"Dot11StatusRateUnsupported":                              reflect.ValueOf(layers.Dot11StatusRateUnsupported),
		"Dot11StatusSuccess":                                      reflect.ValueOf(layers.Dot11StatusSuccess),
		"Dot11StatusTimeout":                                      reflect.ValueOf(layers.Dot11StatusTimeout),
		"Dot11TypeCtrl":                                           reflect.ValueOf(layers.Dot11TypeCtrl),
		"Dot11TypeCtrlAck":                                        reflect.ValueOf(layers.Dot11TypeCtrlAck),
		"Dot11TypeCtrlBlockAck":                                   reflect.ValueOf(layers.Dot11TypeCtrlBlockAck),
		"Dot11TypeCtrlBlockAckReq":                                reflect.ValueOf(layers.Dot11TypeCtrlBlockAckReq),
		"Dot11TypeCtrlCFEnd":                                      reflect.ValueOf(layers.Dot11TypeCtrlCFEnd),
		"Dot11TypeCtrlCFEndAck":                                   reflect.ValueOf(layers.Dot11TypeCtrlCFEndAck),
		"Dot11TypeCtrlCTS":                                        reflect.ValueOf(layers.Dot11TypeCtrlCTS),
		"Dot11TypeCtrlPowersavePoll":                              reflect.ValueOf(layers.Dot11TypeCtrlPowersavePoll),
		"Dot11TypeCtrlRTS":                                        reflect.ValueOf(layers.Dot11TypeCtrlRTS),
		"Dot11TypeCtrlWrapper":                                    reflect.ValueOf(layers.Dot11TypeCtrlWrapper),
		"Dot11TypeData":                                           reflect.ValueOf(layers.Dot11TypeData),
		"Dot11TypeDataCFAck":                                      reflect.ValueOf(layers.Dot11TypeDataCFAck),
		"Dot11TypeDataCFAckNoData":                                reflect.ValueOf(layers.Dot11TypeDataCFAckNoData),
		"Dot11TypeDataCFAckPoll":                                  reflect.ValueOf(layers.Dot11TypeDataCFAckPoll),
		"Dot11TypeDataCFAckPollNoData":                            reflect.ValueOf(layers.Dot11TypeDataCFAckPollNoData),
		"Dot11TypeDataCFPoll":                                     reflect.ValueOf(layers.Dot11TypeDataCFPoll),
		"Dot11TypeDataCFPollNoData":                               reflect.ValueOf(layers.Dot11TypeDataCFPollNoData),
		"Dot11TypeDataNull":                                       reflect.ValueOf(layers.Dot11TypeDataNull),
		"Dot11TypeDataQOSCFAckPollNoData":                         reflect.ValueOf(layers.Dot11TypeDataQOSCFAckPollNoData),
		"Dot11TypeDataQOSCFPollNoData":                            reflect.ValueOf(layers.Dot11TypeDataQOSCFPollNoData),
		"Dot11TypeDataQOSData":                                    reflect.ValueOf(layers.Dot11TypeDataQOSData),
		"Dot11TypeDataQOSDataCFAck":                               reflect.ValueOf(layers.Dot11TypeDataQOSDataCFAck),
		"Dot11TypeDataQOSDataCFAckPoll":                           reflect.ValueOf(layers.Dot11TypeDataQOSDataCFAckPoll),
		"Dot11TypeDataQOSDataCFPoll":                              reflect.ValueOf(layers.Dot11TypeDataQOSDataCFPoll),
		"Dot11TypeDataQOSNull":                                    reflect.ValueOf(layers.Dot11TypeDataQOSNull),
		"Dot11TypeMetadata":                                       reflect.ValueOf(&layers.Dot11TypeMetadata).Elem(),
		"Dot11TypeMgmt":                                           reflect.ValueOf(layers.Dot11TypeMgmt),
		"Dot11TypeMgmtATIM":                                       reflect.ValueOf(layers.Dot11TypeMgmtATIM),
		"Dot11TypeMgmtAction":                                     reflect.ValueOf(layers.Dot11TypeMgmtAction),
		"Dot11TypeMgmtActionNoAck":                                reflect.ValueOf(layers.Dot11TypeMgmtActionNoAck),
		"Dot11TypeMgmtAssociationReq":                             reflect.ValueOf(layers.Dot11TypeMgmtAssociationReq),
		"Dot11TypeMgmtAssociationResp":                            reflect.ValueOf(layers.Dot11TypeMgmtAssociationResp),
		"Dot11TypeMgmtAuthentication":                             reflect.ValueOf(layers.Dot11TypeMgmtAuthentication),
		"Dot11TypeMgmtBeacon":                                     reflect.ValueOf(layers.Dot11TypeMgmtBeacon),
		"Dot11TypeMgmtDeauthentication":                           reflect.ValueOf(layers.Dot11TypeMgmtDeauthentication),
		"Dot11TypeMgmtDisassociation":                             reflect.ValueOf(layers.Dot11TypeMgmtDisassociation),
		"Dot11TypeMgmtMeasurementPilot":                           reflect.ValueOf(layers.Dot11TypeMgmtMeasurementPilot),
		"Dot11TypeMgmtProbeReq":                                   reflect.ValueOf(layers.Dot11TypeMgmtProbeReq),
		"Dot11TypeMgmtProbeResp":                                  reflect.ValueOf(layers.Dot11TypeMgmtProbeResp),
		"Dot11TypeMgmtReassociationReq":                           reflect.ValueOf(layers.Dot11TypeMgmtReassociationReq),
		"Dot11TypeMgmtReassociationResp":                          reflect.ValueOf(layers.Dot11TypeMgmtReassociationResp),
		"Dot11TypeReserved":                                       reflect.ValueOf(layers.Dot11TypeReserved),
		"EAPCodeFailure":                                          reflect.ValueOf(layers.EAPCodeFailure),
		"EAPCodeRequest":                                          reflect.ValueOf(layers.EAPCodeRequest),
		"EAPCodeResponse":                                         reflect.ValueOf(layers.EAPCodeResponse),
		"EAPCodeSuccess":                                          reflect.ValueOf(layers.EAPCodeSuccess),
		"EAPOLKeyDescriptorTypeDot11":                             reflect.ValueOf(layers.EAPOLKeyDescriptorTypeDot11),
		"EAPOLKeyDescriptorTypeRC4":                               reflect.ValueOf(layers.EAPOLKeyDescriptorTypeRC4),
		"EAPOLKeyDescriptorTypeWPA":                               reflect.ValueOf(layers.EAPOLKeyDescriptorTypeWPA),
		"EAPOLKeyDescriptorVersionAES128CMAC":                     reflect.ValueOf(layers.EAPOLKeyDescriptorVersionAES128CMAC),
		"EAPOLKeyDescriptorVersionAESHMACSHA1":                    reflect.ValueOf(layers.EAPOLKeyDescriptorVersionAESHMACSHA1),
		"EAPOLKeyDescriptorVersionOther":                          reflect.ValueOf(layers.EAPOLKeyDescriptorVersionOther),
		"EAPOLKeyDescriptorVersionRC4HMACMD5":                     reflect.ValueOf(layers.EAPOLKeyDescriptorVersionRC4HMACMD5),
		"EAPOLKeyTypeGroupSMK":                                    reflect.ValueOf(layers.EAPOLKeyTypeGroupSMK),
		"EAPOLKeyTypePairwise":                                    reflect.ValueOf(layers.EAPOLKeyTypePairwise),
		"EAPOLTypeASFAlert":                                       reflect.ValueOf(layers.EAPOLTypeASFAlert),
		"EAPOLTypeEAP":                                            reflect.ValueOf(layers.EAPOLTypeEAP),
		"EAPOLTypeKey":                                            reflect.ValueOf(layers.EAPOLTypeKey),
		"EAPOLTypeLogOff":                                         reflect.ValueOf(layers.EAPOLTypeLogOff),
		"EAPOLTypeMetadata":                                       reflect.ValueOf(&layers.EAPOLTypeMetadata).Elem(),
		"EAPOLTypeStart":                                          reflect.ValueOf(layers.EAPOLTypeStart),
		"EAPTypeIdentity":                                         reflect.ValueOf(layers.EAPTypeIdentity),
		"EAPTypeNACK":                                             reflect.ValueOf(layers.EAPTypeNACK),
		"EAPTypeNone":                                             reflect.ValueOf(layers.EAPTypeNone),
		"EAPTypeNotification":                                     reflect.ValueOf(layers.EAPTypeNotification),
		"EAPTypeOTP":                                              reflect.ValueOf(layers.EAPTypeOTP),
		"EAPTypeTokenCard":                                        reflect.ValueOf(layers.EAPTypeTokenCard),
		"ERSPANIIVersion":                                         reflect.ValueOf(constant.MakeFromLiteral("1", token.INT, 0)),
		"ERSPANIIVersionObsolete":                                 reflect.ValueOf(constant.MakeFromLiteral("0", token.INT, 0)),
		"EndpointIPv4":                                            reflect.ValueOf(&layers.EndpointIPv4).Elem(),
		"EndpointIPv6":                                            reflect.ValueOf(&layers.EndpointIPv6).Elem(),
		"EndpointMAC":                                             reflect.ValueOf(&layers.EndpointMAC).Elem(),
		"EndpointPPP":                                             reflect.ValueOf(&layers.EndpointPPP).Elem(),
		"EndpointRUDPPort":                                        reflect.ValueOf(&layers.EndpointRUDPPort).Elem(),
		"EndpointSCTPPort":                                        reflect.ValueOf(&layers.EndpointSCTPPort).Elem(),
		"EndpointTCPPort":                                         reflect.ValueOf(&layers.EndpointTCPPort).Elem(),
		"EndpointUDPLitePort":                                     reflect.ValueOf(&layers.EndpointUDPLitePort).Elem(),
		"EndpointUDPPort":                                         reflect.ValueOf(&layers.EndpointUDPPort).Elem(),
		"ErrPrismExpectedMoreData":                                reflect.ValueOf(&layers.ErrPrismExpectedMoreData).Elem(),
		"ErrPrismInvalidCode":                                     reflect.ValueOf(&layers.ErrPrismInvalidCode).Elem(),
		"EthernetBroadcast":                                       reflect.ValueOf(&layers.EthernetBroadcast).Elem(),
		"EthernetCTPFunctionForwardData":                          reflect.ValueOf(layers.EthernetCTPFunctionForwardData),
		"EthernetCTPFunctionReply":                                reflect.ValueOf(layers.EthernetCTPFunctionReply),
		"EthernetTypeARP":                                         reflect.ValueOf(layers.EthernetTypeARP),
		"EthernetTypeCiscoDiscovery":                              reflect.ValueOf(layers.EthernetTypeCiscoDiscovery),
		"EthernetTypeDot1Q":                                       reflect.ValueOf(layers.EthernetTypeDot1Q),
		"EthernetTypeEAPOL":                                       reflect.ValueOf(layers.EthernetTypeEAPOL),
		"EthernetTypeERSPAN":                                      reflect.ValueOf(layers.EthernetTypeERSPAN),
		"EthernetTypeEthernetCTP":                                 reflect.ValueOf(layers.EthernetTypeEthernetCTP),
		"EthernetTypeIPv4":                                        reflect.ValueOf(layers.EthernetTypeIPv4),
		"EthernetTypeIPv6":                                        reflect.ValueOf(layers.EthernetTypeIPv6),
		"EthernetTypeLLC":                                         reflect.ValueOf(layers.EthernetTypeLLC),
		"EthernetTypeLinkLayerDiscovery":                          reflect.ValueOf(layers.EthernetTypeLinkLayerDiscovery),
		"EthernetTypeMPLSMulticast":                               reflect.ValueOf(layers.EthernetTypeMPLSMulticast),
		"EthernetTypeMPLSUnicast":                                 reflect.ValueOf(layers.EthernetTypeMPLSUnicast),
		"EthernetTypeMetadata":                                    reflect.ValueOf(&layers.EthernetTypeMetadata).Elem(),
		"EthernetTypeNortelDiscovery":                             reflect.ValueOf(layers.EthernetTypeNortelDiscovery),
		"EthernetTypePPP":                                         reflect.ValueOf(layers.EthernetTypePPP),
		"EthernetTypePPPoEDiscovery":                              reflect.ValueOf(layers.EthernetTypePPPoEDiscovery),
		"EthernetTypePPPoESession":                                reflect.ValueOf(layers.EthernetTypePPPoESession),
		"EthernetTypeQinQ":                                        reflect.ValueOf(layers.EthernetTypeQinQ),
		"EthernetTypeTransparentEthernetBridging":                 reflect.ValueOf(layers.EthernetTypeTransparentEthernetBridging),
		"FDDIFrameControlLLC":                                     reflect.ValueOf(layers.FDDIFrameControlLLC),
		"FDDIFrameControlMetadata":                                reflect.ValueOf(&layers.FDDIFrameControlMetadata).Elem(),
		"FuzzLayer":                                               reflect.ValueOf(layers.FuzzLayer),
		"GetLCMLayerType":                                         reflect.ValueOf(layers.GetLCMLayerType),
		"GetSIPMethod":                                            reflect.ValueOf(layers.GetSIPMethod),
		"GetSIPVersion":                                           reflect.ValueOf(layers.GetSIPVersion),
		"IANAAddressFamily802":                                    reflect.ValueOf(layers.IANAAddressFamily802),
		"IANAAddressFamilyASNumber":                               reflect.ValueOf(layers.IANAAddressFamilyASNumber),
		"IANAAddressFamilyAtalk":                                  reflect.ValueOf(layers.IANAAddressFamilyAtalk),
		"IANAAddressFamilyBBN1822":                                reflect.ValueOf(layers.IANAAddressFamilyBBN1822),
		"IANAAddressFamilyBanyan":                                 reflect.ValueOf(layers.IANAAddressFamilyBanyan),
		"IANAAddressFamilyDNS":                                    reflect.ValueOf(layers.IANAAddressFamilyDNS),
		"IANAAddressFamilyDecnet":                                 reflect.ValueOf(layers.IANAAddressFamilyDecnet),
		"IANAAddressFamilyDistname":                               reflect.ValueOf(layers.IANAAddressFamilyDistname),
		"IANAAddressFamilyE163":                                   reflect.ValueOf(layers.IANAAddressFamilyE163),
		"IANAAddressFamilyE164":                                   reflect.ValueOf(layers.IANAAddressFamilyE164),
		"IANAAddressFamilyE164NSAP":                               reflect.ValueOf(layers.IANAAddressFamilyE164NSAP),
		"IANAAddressFamilyF69":                                    reflect.ValueOf(layers.IANAAddressFamilyF69),
		"IANAAddressFamilyFcWWNN":                                 reflect.ValueOf(layers.IANAAddressFamilyFcWWNN),
		"IANAAddressFamilyFcWWPN":                                 reflect.ValueOf(layers.IANAAddressFamilyFcWWPN),
		"IANAAddressFamilyGWID":                                   reflect.ValueOf(layers.IANAAddressFamilyGWID),
		"IANAAddressFamilyHDLC":                                   reflect.ValueOf(layers.IANAAddressFamilyHDLC),
		"IANAAddressFamilyIPV4":                                   reflect.ValueOf(layers.IANAAddressFamilyIPV4),
		"IANAAddressFamilyIPV6":                                   reflect.ValueOf(layers.IANAAddressFamilyIPV6),
		"IANAAddressFamilyIPX":                                    reflect.ValueOf(layers.IANAAddressFamilyIPX),
		"IANAAddressFamilyL2VPN":                                  reflect.ValueOf(layers.IANAAddressFamilyL2VPN),
		"IANAAddressFamilyNSAP":                                   reflect.ValueOf(layers.IANAAddressFamilyNSAP),
		"IANAAddressFamilyReserved":                               reflect.ValueOf(layers.IANAAddressFamilyReserved),
		"IANAAddressFamilyX121":                                   reflect.ValueOf(layers.IANAAddressFamilyX121),
		"IANAAddressFamilyXTP":                                    reflect.ValueOf(layers.IANAAddressFamilyXTP),
		"IANAAddressFamilyXTPIPV4":                                reflect.ValueOf(layers.IANAAddressFamilyXTPIPV4),
		"IANAAddressFamilyXTPIPV6":                                reflect.ValueOf(layers.IANAAddressFamilyXTPIPV6),
		"ICMPv4CodeBadLength":                                     reflect.ValueOf(constant.MakeFromLiteral("2", token.INT, 0)),
		"ICMPv4CodeCommAdminProhibited":                           reflect.ValueOf(constant.MakeFromLiteral("13", token.INT, 0)),
		"ICMPv4CodeFragmentReassemblyTimeExceeded":                reflect.ValueOf(constant.MakeFromLiteral("1", token.INT, 0)),
		"ICMPv4CodeFragmentationNeeded":                           reflect.ValueOf(constant.MakeFromLiteral("4", token.INT, 0)),
		"ICMPv4CodeHost":                                          reflect.ValueOf(constant.MakeFromLiteral("1", token.INT, 0)),
		"ICMPv4CodeHostAdminProhibited":                           reflect.ValueOf(constant.MakeFromLiteral("10", token.INT, 0)),
		"ICMPv4CodeHostPrecedence":                                reflect.ValueOf(constant.MakeFromLiteral("14", token.INT, 0)),
		"ICMPv4CodeHostTOS":                                       reflect.ValueOf(constant.MakeFromLiteral("12", token.INT, 0)),
		"ICMPv4CodeHostUnknown":                                   reflect.ValueOf(constant.MakeFromLiteral("7", token.INT, 0)),
		"ICMPv4CodeMissingOption":                                 reflect.ValueOf(constant.MakeFromLiteral("1", token.INT, 0)),
		"ICMPv4CodeNet":                                           reflect.ValueOf(constant.MakeFromLiteral("0", token.INT, 0)),
		"ICMPv4CodeNetAdminProhibited":                            reflect.ValueOf(constant.MakeFromLiteral("9", token.INT, 0)),
		"ICMPv4CodeNetTOS":                                        reflect.ValueOf(constant.MakeFromLiteral("11", token.INT, 0)),
		"ICMPv4CodeNetUnknown":                                    reflect.ValueOf(constant.MakeFromLiteral("6", token.INT, 0)),
		"ICMPv4CodePointerIndicatesError":                         reflect.ValueOf(constant.MakeFromLiteral("0", token.INT, 0)),
		"ICMPv4CodePort":                                          reflect.ValueOf(constant.MakeFromLiteral("3", token.INT, 0)),
		"ICMPv4CodePrecedenceCutoff":                              reflect.ValueOf(constant.MakeFromLiteral("15", token.INT, 0)),
		"ICMPv4CodeProtocol":                                      reflect.ValueOf(constant.MakeFromLiteral("2", token.INT, 0)),
		"ICMPv4CodeSourceIsolated":                                reflect.ValueOf(constant.MakeFromLiteral("8", token.INT, 0)),
		"ICMPv4CodeSourceRoutingFailed":                           reflect.ValueOf(constant.MakeFromLiteral("5", token.INT, 0)),
		"ICMPv4CodeTOSHost":                                       reflect.ValueOf(constant.MakeFromLiteral("3", token.INT, 0)),
		"ICMPv4CodeTOSNet":                                        reflect.ValueOf(constant.MakeFromLiteral("2", token.INT, 0)),
		"ICMPv4CodeTTLExceeded":                                   reflect.ValueOf(constant.MakeFromLiteral("0", token.INT, 0)),
		"ICMPv4TypeAddressMaskReply":                              reflect.ValueOf(constant.MakeFromLiteral("18", token.INT, 0)),
		"ICMPv4TypeAddressMaskRequest":                            reflect.ValueOf(constant.MakeFromLiteral("17", token.INT, 0)),
		"ICMPv4TypeDestinationUnreachable":                        reflect.ValueOf(constant.MakeFromLiteral("3", token.INT, 0)),
		"ICMPv4TypeEchoReply":                                     reflect.ValueOf(constant.MakeFromLiteral("0", token.INT, 0)),
		"ICMPv4TypeEchoRequest":                                   reflect.ValueOf(constant.MakeFromLiteral("8", token.INT, 0)),
		"ICMPv4TypeInfoReply":                                     reflect.ValueOf(constant.MakeFromLiteral("16", token.INT, 0)),
		"ICMPv4TypeInfoRequest":                                   reflect.ValueOf(constant.MakeFromLiteral("15", token.INT, 0)),
		"ICMPv4TypeParameterProblem":                              reflect.ValueOf(constant.MakeFromLiteral("12", token.INT, 0)),
		"ICMPv4TypeRedirect":                                      reflect.ValueOf(constant.MakeFromLiteral("5", token.INT, 0)),
		"ICMPv4TypeRouterAdvertisement":                           reflect.ValueOf(constant.MakeFromLiteral("9", token.INT, 0)),
		"ICMPv4TypeRouterSolicitation":                            reflect.ValueOf(constant.MakeFromLiteral("10", token.INT, 0)),
		"ICMPv4TypeSourceQuench":                                  reflect.ValueOf(constant.MakeFromLiteral("4", token.INT, 0)),
		"ICMPv4TypeTimeExceeded":                                  reflect.ValueOf(constant.MakeFromLiteral("11", token.INT, 0)),
		"ICMPv4TypeTimestampReply":                                reflect.ValueOf(constant.MakeFromLiteral("14", token.INT, 0)),
		"ICMPv4TypeTimestampRequest":                              reflect.ValueOf(constant.MakeFromLiteral("13", token.INT, 0)),
		"ICMPv6CodeAddressUnreachable":                            reflect.ValueOf(constant.MakeFromLiteral("3", token.INT, 0)),
		"ICMPv6CodeAdminProhibited":                               reflect.ValueOf(constant.MakeFromLiteral("1", token.INT, 0)),
		"ICMPv6CodeBeyondScopeOfSrc":                              reflect.ValueOf(constant.MakeFromLiteral("2", token.INT, 0)),
		"ICMPv6CodeErroneousHeaderField":                          reflect.ValueOf(constant.MakeFromLiteral("0", token.INT, 0)),
		"ICMPv6CodeFragmentReassemblyTimeExceeded":                reflect.ValueOf(constant.MakeFromLiteral("1", token.INT, 0)),
		"ICMPv6CodeHopLimitExceeded":                              reflect.ValueOf(constant.MakeFromLiteral("0", token.INT, 0)),
		"ICMPv6CodeNoRouteToDst":                                  reflect.ValueOf(constant.MakeFromLiteral("0", token.INT, 0)),
		"ICMPv6CodePortUnreachable":                               reflect.ValueOf(constant.MakeFromLiteral("4", token.INT, 0)),
		"ICMPv6CodeRejectRouteToDst":                              reflect.ValueOf(constant.MakeFromLiteral("6", token.INT, 0)),
		"ICMPv6CodeSrcAddressFailedPolicy":                        reflect.ValueOf(constant.MakeFromLiteral("5", token.INT, 0)),
		"ICMPv6CodeUnrecognizedIPv6Option":                        reflect.ValueOf(constant.MakeFromLiteral("2", token.INT, 0)),
		"ICMPv6CodeUnrecognizedNextHeader":                        reflect.ValueOf(constant.MakeFromLiteral("1", token.INT, 0)),
		"ICMPv6OptMTU":                                            reflect.ValueOf(layers.ICMPv6OptMTU),
		"ICMPv6OptPrefixInfo":                                     reflect.ValueOf(layers.ICMPv6OptPrefixInfo),
		"ICMPv6OptRedirectedHeader":                               reflect.ValueOf(layers.ICMPv6OptRedirectedHeader),
		"ICMPv6OptSourceAddress":                                  reflect.ValueOf(layers.ICMPv6OptSourceAddress),
		"ICMPv6OptTargetAddress":                                  reflect.ValueOf(layers.ICMPv6OptTargetAddress),
		"ICMPv6TypeDestinationUnreachable":                        reflect.ValueOf(constant.MakeFromLiteral("1", token.INT, 0)),
		"ICMPv6TypeEchoReply":                                     reflect.ValueOf(constant.MakeFromLiteral("129", token.INT, 0)),
		"ICMPv6TypeEchoRequest":                                   reflect.ValueOf(constant.MakeFromLiteral("128", token.INT, 0)),
		"ICMPv6TypeMLDv1MulticastListenerDoneMessage":             reflect.ValueOf(constant.MakeFromLiteral("132", token.INT, 0)),
		"ICMPv6TypeMLDv1MulticastListenerQueryMessage":            reflect.ValueOf(constant.MakeFromLiteral("130", token.INT, 0)),
		"ICMPv6TypeMLDv1MulticastListenerReportMessage":           reflect.ValueOf(constant.MakeFromLiteral("131", token.INT, 0)),
		"ICMPv6TypeMLDv2MulticastListenerReportMessageV2":         reflect.ValueOf(constant.MakeFromLiteral("143", token.INT, 0)),
		"ICMPv6TypeNeighborAdvertisement":                         reflect.ValueOf(constant.MakeFromLiteral("136", token.INT, 0)),
		"ICMPv6TypeNeighborSolicitation":                          reflect.ValueOf(constant.MakeFromLiteral("135", token.INT, 0)),
		"ICMPv6TypePacketTooBig":                                  reflect.ValueOf(constant.MakeFromLiteral("2", token.INT, 0)),
		"ICMPv6TypeParameterProblem":                              reflect.ValueOf(constant.MakeFromLiteral("4", token.INT, 0)),
		"ICMPv6TypeRedirect":                                      reflect.ValueOf(constant.MakeFromLiteral("137", token.INT, 0)),
		"ICMPv6TypeRouterAdvertisement":                           reflect.ValueOf(constant.MakeFromLiteral("134", token.INT, 0)),
		"ICMPv6TypeRouterSolicitation":                            reflect.ValueOf(constant.MakeFromLiteral("133", token.INT, 0)),
		"ICMPv6TypeTimeExceeded":                                  reflect.ValueOf(constant.MakeFromLiteral("3", token.INT, 0)),
		"IEEEOUI8021":                                             reflect.ValueOf(layers.IEEEOUI8021),
		"IEEEOUI80211":                                            reflect.ValueOf(layers.IEEEOUI80211),
		"IEEEOUI8021Qbg":                                          reflect.ValueOf(layers.IEEEOUI8021Qbg),
		"IEEEOUI8023":                                             reflect.ValueOf(layers.IEEEOUI8023),
		"IEEEOUICisco2":                                           reflect.ValueOf(layers.IEEEOUICisco2),
		"IEEEOUIDCBX":                                             reflect.ValueOf(layers.IEEEOUIDCBX),
		"IEEEOUIMedia":                                            reflect.ValueOf(layers.IEEEOUIMedia),
		"IEEEOUIProfinet":                                         reflect.ValueOf(layers.IEEEOUIProfinet),
		"IGMPAllow":                                               reflect.ValueOf(layers.IGMPAllow),
		"IGMPBlock":                                               reflect.ValueOf(layers.IGMPBlock),
		"IGMPIsEx":                                                reflect.ValueOf(layers.IGMPIsEx),
		"IGMPIsIn":                                                reflect.ValueOf(layers.IGMPIsIn),
		"IGMPLeaveGroup":                                          reflect.ValueOf(layers.IGMPLeaveGroup),
		"IGMPMembershipQuery":                                     reflect.ValueOf(layers.IGMPMembershipQuery),
		"IGMPMembershipReportV1":                                  reflect.ValueOf(layers.IGMPMembershipReportV1),
		"IGMPMembershipReportV2":                                  reflect.ValueOf(layers.IGMPMembershipReportV2),
		"IGMPMembershipReportV3":                                  reflect.ValueOf(layers.IGMPMembershipReportV3),
		"IGMPToEx":                                                reflect.ValueOf(layers.IGMPToEx),
		"IGMPToIn":                                                reflect.ValueOf(layers.IGMPToIn),
		"IPProtocolAH":                                            reflect.ValueOf(layers.IPProtocolAH),
		"IPProtocolESP":                                           reflect.ValueOf(layers.IPProtocolESP),
		"IPProtocolEtherIP":                                       reflect.ValueOf(layers.IPProtocolEtherIP),
		"IPProtocolGRE":                                           reflect.ValueOf(layers.IPProtocolGRE),
		"IPProtocolICMPv4":                                        reflect.ValueOf(layers.IPProtocolICMPv4),
		"IPProtocolICMPv6":                                        reflect.ValueOf(layers.IPProtocolICMPv6),
		"IPProtocolIGMP":                                          reflect.ValueOf(layers.IPProtocolIGMP),
		"IPProtocolIPIP":                                          reflect.ValueOf(layers.IPProtocolIPIP),
		"IPProtocolIPv4":                                          reflect.ValueOf(layers.IPProtocolIPv4),
		"IPProtocolIPv6":                                          reflect.ValueOf(layers.IPProtocolIPv6),
		"IPProtocolIPv6Destination":                               reflect.ValueOf(layers.IPProtocolIPv6Destination),
		"IPProtocolIPv6Fragment":                                  reflect.ValueOf(layers.IPProtocolIPv6Fragment),
		"IPProtocolIPv6HopByHop":                                  reflect.ValueOf(layers.IPProtocolIPv6HopByHop),
		"IPProtocolIPv6Routing":                                   reflect.ValueOf(layers.IPProtocolIPv6Routing),
		"IPProtocolMPLSInIP":                                      reflect.ValueOf(layers.IPProtocolMPLSInIP),
		"IPProtocolMetadata":                                      reflect.ValueOf(&layers.IPProtocolMetadata).Elem(),
		"IPProtocolNoNextHeader":                                  reflect.ValueOf(layers.IPProtocolNoNextHeader),
		"IPProtocolOSPF":                                          reflect.ValueOf(layers.IPProtocolOSPF),
		"IPProtocolRUDP":                                          reflect.ValueOf(layers.IPProtocolRUDP),
		"IPProtocolSCTP":                                          reflect.ValueOf(layers.IPProtocolSCTP),
		"IPProtocolTCP":                                           reflect.ValueOf(layers.IPProtocolTCP),
		"IPProtocolUDP":                                           reflect.ValueOf(layers.IPProtocolUDP),
		"IPProtocolUDPLite":                                       reflect.ValueOf(layers.IPProtocolUDPLite),
		"IPProtocolVRRP":                                          reflect.ValueOf(layers.IPProtocolVRRP),
		"IPv4DontFragment":                                        reflect.ValueOf(layers.IPv4DontFragment),
		"IPv4EvilBit":                                             reflect.ValueOf(layers.IPv4EvilBit),
		"IPv4MoreFragments":                                       reflect.ValueOf(layers.IPv4MoreFragments),
		"IPv6HopByHopOptionJumbogram":                             reflect.ValueOf(constant.MakeFromLiteral("194", token.INT, 0)),
		"InterAreaPrefixLSAtype":                                  reflect.ValueOf(constant.MakeFromLiteral("8195", token.INT, 0)),
		"InterAreaRouterLSAtype":                                  reflect.ValueOf(constant.MakeFromLiteral("8196", token.INT, 0)),
		"IntraAreaPrefixLSAtype":                                  reflect.ValueOf(constant.MakeFromLiteral("8201", token.INT, 0)),
		"InvalidMagicCookie":                                      reflect.ValueOf(layers.InvalidMagicCookie),
		"LCMFragmentedHeaderMagic":                                reflect.ValueOf(layers.LCMFragmentedHeaderMagic),
		"LCMShortHeaderMagic":                                     reflect.ValueOf(layers.LCMShortHeaderMagic),
		"LLDP8021QbgCDCP":                                         reflect.ValueOf(layers.LLDP8021QbgCDCP),
		"LLDP8021QbgEVB":                                          reflect.ValueOf(layers.LLDP8021QbgEVB),
		"LLDP8021QbgEVB22":                                        reflect.ValueOf(layers.LLDP8021QbgEVB22),
		"LLDP8021QbgVDP":                                          reflect.ValueOf(layers.LLDP8021QbgVDP),
		"LLDP8021SubtypeLinkAggregation":                          reflect.ValueOf(layers.LLDP8021SubtypeLinkAggregation),
		"LLDP8021SubtypeManagementVID":                            reflect.ValueOf(layers.LLDP8021SubtypeManagementVID),
		"LLDP8021SubtypePortVLANID":                               reflect.ValueOf(layers.LLDP8021SubtypePortVLANID),
		"LLDP8021SubtypeProtocolIdentity":                         reflect.ValueOf(layers.LLDP8021SubtypeProtocolIdentity),
		"LLDP8021SubtypeProtocolVLANID":                           reflect.ValueOf(layers.LLDP8021SubtypeProtocolVLANID),
		"LLDP8021SubtypeVDIUsageDigest":                           reflect.ValueOf(layers.LLDP8021SubtypeVDIUsageDigest),
		"LLDP8021SubtypeVLANName":                                 reflect.ValueOf(layers.LLDP8021SubtypeVLANName),
		"LLDP8023SubtypeLinkAggregation":                          reflect.ValueOf(layers.LLDP8023SubtypeLinkAggregation),
		"LLDP8023SubtypeMACPHY":                                   reflect.ValueOf(layers.LLDP8023SubtypeMACPHY),
		"LLDP8023SubtypeMDIPower":                                 reflect.ValueOf(layers.LLDP8023SubtypeMDIPower),
		"LLDP8023SubtypeMTU":                                      reflect.ValueOf(layers.LLDP8023SubtypeMTU),
		"LLDPAggregationCapability":                               reflect.ValueOf(layers.LLDPAggregationCapability),
		"LLDPAggregationStatus":                                   reflect.ValueOf(layers.LLDPAggregationStatus),
		"LLDPAppTypeReserved":                                     reflect.ValueOf(layers.LLDPAppTypeReserved),
		"LLDPAppTypeVoice":                                        reflect.ValueOf(layers.LLDPAppTypeVoice),
		"LLDPCapsBridge":                                          reflect.ValueOf(layers.LLDPCapsBridge),
		"LLDPCapsCVLAN":                                           reflect.ValueOf(layers.LLDPCapsCVLAN),
		"LLDPCapsDocSis":                                          reflect.ValueOf(layers.LLDPCapsDocSis),
		"LLDPCapsOther":                                           reflect.ValueOf(layers.LLDPCapsOther),
		"LLDPCapsPhone":                                           reflect.ValueOf(layers.LLDPCapsPhone),
		"LLDPCapsRepeater":                                        reflect.ValueOf(layers.LLDPCapsRepeater),
		"LLDPCapsRouter":                                          reflect.ValueOf(layers.LLDPCapsRouter),
		"LLDPCapsSVLAN":                                           reflect.ValueOf(layers.LLDPCapsSVLAN),
		"LLDPCapsStationOnly":                                     reflect.ValueOf(layers.LLDPCapsStationOnly),
		"LLDPCapsTmpr":                                            reflect.ValueOf(layers.LLDPCapsTmpr),
		"LLDPCapsWLANAP":                                          reflect.ValueOf(layers.LLDPCapsWLANAP),
		"LLDPChassisIDSubTypeChassisComp":                         reflect.ValueOf(layers.LLDPChassisIDSubTypeChassisComp),
		"LLDPChassisIDSubTypeLocal":                               reflect.ValueOf(layers.LLDPChassisIDSubTypeLocal),
		"LLDPChassisIDSubTypeMACAddr":                             reflect.ValueOf(layers.LLDPChassisIDSubTypeMACAddr),
		"LLDPChassisIDSubTypeNetworkAddr":                         reflect.ValueOf(layers.LLDPChassisIDSubTypeNetworkAddr),
		"LLDPChassisIDSubTypePortComp":                            reflect.ValueOf(layers.LLDPChassisIDSubTypePortComp),
		"LLDPChassisIDSubTypeReserved":                            reflect.ValueOf(layers.LLDPChassisIDSubTypeReserved),
		"LLDPChassisIDSubtypeIfaceAlias":                          reflect.ValueOf(layers.LLDPChassisIDSubtypeIfaceAlias),
		"LLDPChassisIDSubtypeIfaceName":                           reflect.ValueOf(layers.LLDPChassisIDSubtypeIfaceName),
		"LLDPCisco2PowerViaMDI":                                   reflect.ValueOf(layers.LLDPCisco2PowerViaMDI),
		"LLDPCiscoArchShared":                                     reflect.ValueOf(layers.LLDPCiscoArchShared),
		"LLDPCiscoPDSparePair":                                    reflect.ValueOf(layers.LLDPCiscoPDSparePair),
		"LLDPCiscoPSESparePair":                                   reflect.ValueOf(layers.LLDPCiscoPSESparePair),
		"LLDPCiscoPSESupport":                                     reflect.ValueOf(layers.LLDPCiscoPSESupport),
		"LLDPEVBCapsECP":                                          reflect.ValueOf(layers.LLDPEVBCapsECP),
		"LLDPEVBCapsRR":                                           reflect.ValueOf(layers.LLDPEVBCapsRR),
		"LLDPEVBCapsRTE":                                          reflect.ValueOf(layers.LLDPEVBCapsRTE),
		"LLDPEVBCapsSTD":                                          reflect.ValueOf(layers.LLDPEVBCapsSTD),
		"LLDPEVBCapsVDP":                                          reflect.ValueOf(layers.LLDPEVBCapsVDP),
		"LLDPInterfaceSubtypeSysPort":                             reflect.ValueOf(layers.LLDPInterfaceSubtypeSysPort),
		"LLDPInterfaceSubtypeUnknown":                             reflect.ValueOf(layers.LLDPInterfaceSubtypeUnknown),
		"LLDPInterfaceSubtypeifIndex":                             reflect.ValueOf(layers.LLDPInterfaceSubtypeifIndex),
		"LLDPLocationAddressTypeAdditional":                       reflect.ValueOf(layers.LLDPLocationAddressTypeAdditional),
		"LLDPLocationAddressTypeBuilding":                         reflect.ValueOf(layers.LLDPLocationAddressTypeBuilding),
		"LLDPLocationAddressTypeCity":                             reflect.ValueOf(layers.LLDPLocationAddressTypeCity),
		"LLDPLocationAddressTypeCityDivision":                     reflect.ValueOf(layers.LLDPLocationAddressTypeCityDivision),
		"LLDPLocationAddressTypeCounty":                           reflect.ValueOf(layers.LLDPLocationAddressTypeCounty),
		"LLDPLocationAddressTypeFloor":                            reflect.ValueOf(layers.LLDPLocationAddressTypeFloor),
		"LLDPLocationAddressTypeHouseNum":                         reflect.ValueOf(layers.LLDPLocationAddressTypeHouseNum),
		"LLDPLocationAddressTypeHouseSuffix":                      reflect.ValueOf(layers.LLDPLocationAddressTypeHouseSuffix),
		"LLDPLocationAddressTypeLandmark":                         reflect.ValueOf(layers.LLDPLocationAddressTypeLandmark),
		"LLDPLocationAddressTypeLanguage":                         reflect.ValueOf(layers.LLDPLocationAddressTypeLanguage),
		"LLDPLocationAddressTypeLeadingStreet":                    reflect.ValueOf(layers.LLDPLocationAddressTypeLeadingStreet),
		"LLDPLocationAddressTypeName":                             reflect.ValueOf(layers.LLDPLocationAddressTypeName),
		"LLDPLocationAddressTypeNational":                         reflect.ValueOf(layers.LLDPLocationAddressTypeNational),
		"LLDPLocationAddressTypeNeighborhood":                     reflect.ValueOf(layers.LLDPLocationAddressTypeNeighborhood),
		"LLDPLocationAddressTypePlace":                            reflect.ValueOf(layers.LLDPLocationAddressTypePlace),
		"LLDPLocationAddressTypePostal":                           reflect.ValueOf(layers.LLDPLocationAddressTypePostal),
		"LLDPLocationAddressTypeRoom":                             reflect.ValueOf(layers.LLDPLocationAddressTypeRoom),
		"LLDPLocationAddressTypeScript":                           reflect.ValueOf(layers.LLDPLocationAddressTypeScript),
		"LLDPLocationAddressTypeStreet":                           reflect.ValueOf(layers.LLDPLocationAddressTypeStreet),
		"LLDPLocationAddressTypeStreetSuffix":                     reflect.ValueOf(layers.LLDPLocationAddressTypeStreetSuffix),
		"LLDPLocationAddressTypeTrailingStreet":                   reflect.ValueOf(layers.LLDPLocationAddressTypeTrailingStreet),
		"LLDPLocationAddressTypeUnit":                             reflect.ValueOf(layers.LLDPLocationAddressTypeUnit),
		"LLDPLocationAddressWhatClient":                           reflect.ValueOf(layers.LLDPLocationAddressWhatClient),
		"LLDPLocationAddressWhatDHCP":                             reflect.ValueOf(layers.LLDPLocationAddressWhatDHCP),
		"LLDPLocationAddressWhatNetwork":                          reflect.ValueOf(layers.LLDPLocationAddressWhatNetwork),
		"LLDPLocationFormatAddress":                               reflect.ValueOf(layers.LLDPLocationFormatAddress),
		"LLDPLocationFormatCoordinate":                            reflect.ValueOf(layers.LLDPLocationFormatCoordinate),
		"LLDPLocationFormatECS":                                   reflect.ValueOf(layers.LLDPLocationFormatECS),
		"LLDPLocationFormatInvalid":                               reflect.ValueOf(layers.LLDPLocationFormatInvalid),
		"LLDPMACPHYCapability":                                    reflect.ValueOf(layers.LLDPMACPHYCapability),
		"LLDPMACPHYStatus":                                        reflect.ValueOf(layers.LLDPMACPHYStatus),
		"LLDPMAUPMD1000BaseT":                                     reflect.ValueOf(layers.LLDPMAUPMD1000BaseT),
		"LLDPMAUPMD1000BaseTInv":                                  reflect.ValueOf(layers.LLDPMAUPMD1000BaseTInv),
		"LLDPMAUPMD1000BaseT_FD":                                  reflect.ValueOf(layers.LLDPMAUPMD1000BaseT_FD),
		"LLDPMAUPMD1000BaseT_FDInv":                               reflect.ValueOf(layers.LLDPMAUPMD1000BaseT_FDInv),
		"LLDPMAUPMD1000BaseX":                                     reflect.ValueOf(layers.LLDPMAUPMD1000BaseX),
		"LLDPMAUPMD1000BaseXInv":                                  reflect.ValueOf(layers.LLDPMAUPMD1000BaseXInv),
		"LLDPMAUPMD1000BaseX_FD":                                  reflect.ValueOf(layers.LLDPMAUPMD1000BaseX_FD),
		"LLDPMAUPMD1000BaseX_FDInv":                               reflect.ValueOf(layers.LLDPMAUPMD1000BaseX_FDInv),
		"LLDPMAUPMD100BaseT2":                                     reflect.ValueOf(layers.LLDPMAUPMD100BaseT2),
		"LLDPMAUPMD100BaseT2Inv":                                  reflect.ValueOf(layers.LLDPMAUPMD100BaseT2Inv),
		"LLDPMAUPMD100BaseT2_FD":                                  reflect.ValueOf(layers.LLDPMAUPMD100BaseT2_FD),
		"LLDPMAUPMD100BaseT2_FDInv":                               reflect.ValueOf(layers.LLDPMAUPMD100BaseT2_FDInv),
		"LLDPMAUPMD100BaseT4":                                     reflect.ValueOf(layers.LLDPMAUPMD100BaseT4),
		"LLDPMAUPMD100BaseT4Inv":                                  reflect.ValueOf(layers.LLDPMAUPMD100BaseT4Inv),
		"LLDPMAUPMD100BaseTX":                                     reflect.ValueOf(layers.LLDPMAUPMD100BaseTX),
		"LLDPMAUPMD100BaseTXInv":                                  reflect.ValueOf(layers.LLDPMAUPMD100BaseTXInv),
		"LLDPMAUPMD100BaseTX_FD":                                  reflect.ValueOf(layers.LLDPMAUPMD100BaseTX_FD),
		"LLDPMAUPMD100BaseTX_FDInv":                               reflect.ValueOf(layers.LLDPMAUPMD100BaseTX_FDInv),
		"LLDPMAUPMD10BaseT":                                       reflect.ValueOf(layers.LLDPMAUPMD10BaseT),
		"LLDPMAUPMD10BaseTInv":                                    reflect.ValueOf(layers.LLDPMAUPMD10BaseTInv),
		"LLDPMAUPMD10BaseT_FD":                                    reflect.ValueOf(layers.LLDPMAUPMD10BaseT_FD),
		"LLDPMAUPMD10BaseT_FDInv":                                 reflect.ValueOf(layers.LLDPMAUPMD10BaseT_FDInv),
		"LLDPMAUPMDFDXAPAUSE":                                     reflect.ValueOf(layers.LLDPMAUPMDFDXAPAUSE),
		"LLDPMAUPMDFDXAPAUSEInv":                                  reflect.ValueOf(layers.LLDPMAUPMDFDXAPAUSEInv),
		"LLDPMAUPMDFDXBPAUSE":                                     reflect.ValueOf(layers.LLDPMAUPMDFDXBPAUSE),
		"LLDPMAUPMDFDXBPAUSEInv":                                  reflect.ValueOf(layers.LLDPMAUPMDFDXBPAUSEInv),
		"LLDPMAUPMDFDXPAUSE":                                      reflect.ValueOf(layers.LLDPMAUPMDFDXPAUSE),
		"LLDPMAUPMDFDXPAUSEInv":                                   reflect.ValueOf(layers.LLDPMAUPMDFDXPAUSEInv),
		"LLDPMAUPMDFDXSPAUSE":                                     reflect.ValueOf(layers.LLDPMAUPMDFDXSPAUSE),
		"LLDPMAUPMDFDXSPAUSEInv":                                  reflect.ValueOf(layers.LLDPMAUPMDFDXSPAUSEInv),
		"LLDPMAUPMDOther":                                         reflect.ValueOf(layers.LLDPMAUPMDOther),
		"LLDPMAUPMDOtherInv":                                      reflect.ValueOf(layers.LLDPMAUPMDOtherInv),
		"LLDPMAUType1000BaseBX10D":                                reflect.ValueOf(layers.LLDPMAUType1000BaseBX10D),
		"LLDPMAUType1000BaseBX10U":                                reflect.ValueOf(layers.LLDPMAUType1000BaseBX10U),
		"LLDPMAUType1000BaseCX_FD":                                reflect.ValueOf(layers.LLDPMAUType1000BaseCX_FD),
		"LLDPMAUType1000BaseCX_HD":                                reflect.ValueOf(layers.LLDPMAUType1000BaseCX_HD),
		"LLDPMAUType1000BaseKX":                                   reflect.ValueOf(layers.LLDPMAUType1000BaseKX),
		"LLDPMAUType1000BaseLX10":                                 reflect.ValueOf(layers.LLDPMAUType1000BaseLX10),
		"LLDPMAUType1000BaseLX_FD":                                reflect.ValueOf(layers.LLDPMAUType1000BaseLX_FD),
		"LLDPMAUType1000BaseLX_HD":                                reflect.ValueOf(layers.LLDPMAUType1000BaseLX_HD),
		"LLDPMAUType1000BasePX10D":                                reflect.ValueOf(layers.LLDPMAUType1000BasePX10D),
		"LLDPMAUType1000BasePX10U":                                reflect.ValueOf(layers.LLDPMAUType1000BasePX10U),
		"LLDPMAUType1000BasePX20D":                                reflect.ValueOf(layers.LLDPMAUType1000BasePX20D),
		"LLDPMAUType1000BasePX20U":                                reflect.ValueOf(layers.LLDPMAUType1000BasePX20U),
		"LLDPMAUType1000BaseSX_FD":                                reflect.ValueOf(layers.LLDPMAUType1000BaseSX_FD),
		"LLDPMAUType1000BaseSX_HD":                                reflect.ValueOf(layers.LLDPMAUType1000BaseSX_HD),
		"LLDPMAUType1000BaseT_FD":                                 reflect.ValueOf(layers.LLDPMAUType1000BaseT_FD),
		"LLDPMAUType1000BaseT_HD":                                 reflect.ValueOf(layers.LLDPMAUType1000BaseT_HD),
		"LLDPMAUType1000BaseX_FD":                                 reflect.ValueOf(layers.LLDPMAUType1000BaseX_FD),
		"LLDPMAUType1000BaseX_HD":                                 reflect.ValueOf(layers.LLDPMAUType1000BaseX_HD),
		"LLDPMAUType100BaseBX10D":                                 reflect.ValueOf(layers.LLDPMAUType100BaseBX10D),
		"LLDPMAUType100BaseBX10U":                                 reflect.ValueOf(layers.LLDPMAUType100BaseBX10U),
		"LLDPMAUType100BaseFX_FD":                                 reflect.ValueOf(layers.LLDPMAUType100BaseFX_FD),
		"LLDPMAUType100BaseFX_HD":                                 reflect.ValueOf(layers.LLDPMAUType100BaseFX_HD),
		"LLDPMAUType100BaseLX10":                                  reflect.ValueOf(layers.LLDPMAUType100BaseLX10),
		"LLDPMAUType100BaseT2_FD":                                 reflect.ValueOf(layers.LLDPMAUType100BaseT2_FD),
		"LLDPMAUType100BaseT2_HD":                                 reflect.ValueOf(layers.LLDPMAUType100BaseT2_HD),
		"LLDPMAUType100BaseT4":                                    reflect.ValueOf(layers.LLDPMAUType100BaseT4),
		"LLDPMAUType100BaseTX_FD":                                 reflect.ValueOf(layers.LLDPMAUType100BaseTX_FD),
		"LLDPMAUType100BaseTX_HD":                                 reflect.ValueOf(layers.LLDPMAUType100BaseTX_HD),
		"LLDPMAUType10BROAD36":                                    reflect.ValueOf(layers.LLDPMAUType10BROAD36),
		"LLDPMAUType10Base2":                                      reflect.ValueOf(layers.LLDPMAUType10Base2),
		"LLDPMAUType10Base5":                                      reflect.ValueOf(layers.LLDPMAUType10Base5),
		"LLDPMAUType10BaseFB":                                     reflect.ValueOf(layers.LLDPMAUType10BaseFB),
		"LLDPMAUType10BaseFL":                                     reflect.ValueOf(layers.LLDPMAUType10BaseFL),
		"LLDPMAUType10BaseFL_FD":                                  reflect.ValueOf(layers.LLDPMAUType10BaseFL_FD),
		"LLDPMAUType10BaseFL_HD":                                  reflect.ValueOf(layers.LLDPMAUType10BaseFL_HD),
		"LLDPMAUType10BaseFP":                                     reflect.ValueOf(layers.LLDPMAUType10BaseFP),
		"LLDPMAUType10BaseT":                                      reflect.ValueOf(layers.LLDPMAUType10BaseT),
		"LLDPMAUType10BaseT_FD":                                   reflect.ValueOf(layers.LLDPMAUType10BaseT_FD),
		"LLDPMAUType10BaseT_HD":                                   reflect.ValueOf(layers.LLDPMAUType10BaseT_HD),
		"LLDPMAUType10GBaseCX4":                                   reflect.ValueOf(layers.LLDPMAUType10GBaseCX4),
		"LLDPMAUType10GBaseER":                                    reflect.ValueOf(layers.LLDPMAUType10GBaseER),
		"LLDPMAUType10GBaseEW":                                    reflect.ValueOf(layers.LLDPMAUType10GBaseEW),
		"LLDPMAUType10GBaseKR":                                    reflect.ValueOf(layers.LLDPMAUType10GBaseKR),
		"LLDPMAUType10GBaseKX4":                                   reflect.ValueOf(layers.LLDPMAUType10GBaseKX4),
		"LLDPMAUType10GBaseLR":                                    reflect.ValueOf(layers.LLDPMAUType10GBaseLR),
		"LLDPMAUType10GBaseLRM":                                   reflect.ValueOf(layers.LLDPMAUType10GBaseLRM),
		"LLDPMAUType10GBaseLW":                                    reflect.ValueOf(layers.LLDPMAUType10GBaseLW),
		"LLDPMAUType10GBaseLX4":                                   reflect.ValueOf(layers.LLDPMAUType10GBaseLX4),
		"LLDPMAUType10GBasePR_D1":                                 reflect.ValueOf(layers.LLDPMAUType10GBasePR_D1),
		"LLDPMAUType10GBasePR_D2":                                 reflect.ValueOf(layers.LLDPMAUType10GBasePR_D2),
		"LLDPMAUType10GBasePR_D3":                                 reflect.ValueOf(layers.LLDPMAUType10GBasePR_D3),
		"LLDPMAUType10GBasePR_U1":                                 reflect.ValueOf(layers.LLDPMAUType10GBasePR_U1),
		"LLDPMAUType10GBasePR_U3":                                 reflect.ValueOf(layers.LLDPMAUType10GBasePR_U3),
		"LLDPMAUType10GBaseR":                                     reflect.ValueOf(layers.LLDPMAUType10GBaseR),
		"LLDPMAUType10GBaseSR":                                    reflect.ValueOf(layers.LLDPMAUType10GBaseSR),
		"LLDPMAUType10GBaseSW":                                    reflect.ValueOf(layers.LLDPMAUType10GBaseSW),
		"LLDPMAUType10GBaseT":                                     reflect.ValueOf(layers.LLDPMAUType10GBaseT),
		"LLDPMAUType10GBaseW":                                     reflect.ValueOf(layers.LLDPMAUType10GBaseW),
		"LLDPMAUType10GBaseX":                                     reflect.ValueOf(layers.LLDPMAUType10GBaseX),
		"LLDPMAUType10PASS_TS":                                    reflect.ValueOf(layers.LLDPMAUType10PASS_TS),
		"LLDPMAUType10_1GBasePRX_D1":                              reflect.ValueOf(layers.LLDPMAUType10_1GBasePRX_D1),
		"LLDPMAUType10_1GBasePRX_D2":                              reflect.ValueOf(layers.LLDPMAUType10_1GBasePRX_D2),
		"LLDPMAUType10_1GBasePRX_D3":                              reflect.ValueOf(layers.LLDPMAUType10_1GBasePRX_D3),
		"LLDPMAUType10_1GBasePRX_U1":                              reflect.ValueOf(layers.LLDPMAUType10_1GBasePRX_U1),
		"LLDPMAUType10_1GBasePRX_U2":                              reflect.ValueOf(layers.LLDPMAUType10_1GBasePRX_U2),
		"LLDPMAUType10_1GBasePRX_U3":                              reflect.ValueOf(layers.LLDPMAUType10_1GBasePRX_U3),
		"LLDPMAUType2BaseTL":                                      reflect.ValueOf(layers.LLDPMAUType2BaseTL),
		"LLDPMAUTypeAUI":                                          reflect.ValueOf(layers.LLDPMAUTypeAUI),
		"LLDPMAUTypeFOIRL":                                        reflect.ValueOf(layers.LLDPMAUTypeFOIRL),
		"LLDPMAUTypeUnknown":                                      reflect.ValueOf(layers.LLDPMAUTypeUnknown),
		"LLDPMDIPowerCapability":                                  reflect.ValueOf(layers.LLDPMDIPowerCapability),
		"LLDPMDIPowerPairsAbility":                                reflect.ValueOf(layers.LLDPMDIPowerPairsAbility),
		"LLDPMDIPowerPortClass":                                   reflect.ValueOf(layers.LLDPMDIPowerPortClass),
		"LLDPMDIPowerStatus":                                      reflect.ValueOf(layers.LLDPMDIPowerStatus),
		"LLDPMediaCapsInventory":                                  reflect.ValueOf(layers.LLDPMediaCapsInventory),
		"LLDPMediaCapsLLDP":                                       reflect.ValueOf(layers.LLDPMediaCapsLLDP),
		"LLDPMediaCapsLocation":                                   reflect.ValueOf(layers.LLDPMediaCapsLocation),
		"LLDPMediaCapsNetwork":                                    reflect.ValueOf(layers.LLDPMediaCapsNetwork),
		"LLDPMediaCapsPowerPD":                                    reflect.ValueOf(layers.LLDPMediaCapsPowerPD),
		"LLDPMediaCapsPowerPSE":                                   reflect.ValueOf(layers.LLDPMediaCapsPowerPSE),
		"LLDPMediaClassEndpointI":                                 reflect.ValueOf(layers.LLDPMediaClassEndpointI),
		"LLDPMediaClassEndpointII":                                reflect.ValueOf(layers.LLDPMediaClassEndpointII),
		"LLDPMediaClassEndpointIII":                               reflect.ValueOf(layers.LLDPMediaClassEndpointIII),
		"LLDPMediaClassNetwork":                                   reflect.ValueOf(layers.LLDPMediaClassNetwork),
		"LLDPMediaClassUndefined":                                 reflect.ValueOf(layers.LLDPMediaClassUndefined),
		"LLDPMediaTypeAssetID":                                    reflect.ValueOf(layers.LLDPMediaTypeAssetID),
		"LLDPMediaTypeCapabilities":                               reflect.ValueOf(layers.LLDPMediaTypeCapabilities),
		"LLDPMediaTypeFirmware":                                   reflect.ValueOf(layers.LLDPMediaTypeFirmware),
		"LLDPMediaTypeHardware":                                   reflect.ValueOf(layers.LLDPMediaTypeHardware),
		"LLDPMediaTypeLocation":                                   reflect.ValueOf(layers.LLDPMediaTypeLocation),
		"LLDPMediaTypeManufacturer":                               reflect.ValueOf(layers.LLDPMediaTypeManufacturer),
		"LLDPMediaTypeModel":                                      reflect.ValueOf(layers.LLDPMediaTypeModel),
		"LLDPMediaTypeNetwork":                                    reflect.ValueOf(layers.LLDPMediaTypeNetwork),
		"LLDPMediaTypePower":                                      reflect.ValueOf(layers.LLDPMediaTypePower),
		"LLDPMediaTypeSerial":                                     reflect.ValueOf(layers.LLDPMediaTypeSerial),
		"LLDPMediaTypeSoftware":                                   reflect.ValueOf(layers.LLDPMediaTypeSoftware),
		"LLDPPortIDSubtypeAgentCircuitID":                         reflect.ValueOf(layers.LLDPPortIDSubtypeAgentCircuitID),
		"LLDPPortIDSubtypeIfaceAlias":                             reflect.ValueOf(layers.LLDPPortIDSubtypeIfaceAlias),
		"LLDPPortIDSubtypeIfaceName":                              reflect.ValueOf(layers.LLDPPortIDSubtypeIfaceName),
		"LLDPPortIDSubtypeLocal":                                  reflect.ValueOf(layers.LLDPPortIDSubtypeLocal),
		"LLDPPortIDSubtypeMACAddr":                                reflect.ValueOf(layers.LLDPPortIDSubtypeMACAddr),
		"LLDPPortIDSubtypeNetworkAddr":                            reflect.ValueOf(layers.LLDPPortIDSubtypeNetworkAddr),
		"LLDPPortIDSubtypePortComp":                               reflect.ValueOf(layers.LLDPPortIDSubtypePortComp),
		"LLDPPortIDSubtypeReserved":                               reflect.ValueOf(layers.LLDPPortIDSubtypeReserved),
		"LLDPPowerPriorityHigh":                                   reflect.ValueOf(layers.LLDPPowerPriorityHigh),
		"LLDPPowerPriorityLow":                                    reflect.ValueOf(layers.LLDPPowerPriorityLow),
		"LLDPPowerPriorityMedium":                                 reflect.ValueOf(layers.LLDPPowerPriorityMedium),
		"LLDPPowerPriorityUnknown":                                reflect.ValueOf(layers.LLDPPowerPriorityUnknown),
		"LLDPProfinetPNIOChassisMAC":                              reflect.ValueOf(layers.LLDPProfinetPNIOChassisMAC),
		"LLDPProfinetPNIODelay":                                   reflect.ValueOf(layers.LLDPProfinetPNIODelay),
		"LLDPProfinetPNIOMRPPortStatus":                           reflect.ValueOf(layers.LLDPProfinetPNIOMRPPortStatus),
		"LLDPProfinetPNIOPTCPStatus":                              reflect.ValueOf(layers.LLDPProfinetPNIOPTCPStatus),
		"LLDPProfinetPNIOPortStatus":                              reflect.ValueOf(layers.LLDPProfinetPNIOPortStatus),
		"LLDPProtocolVLANIDCapability":                            reflect.ValueOf(layers.LLDPProtocolVLANIDCapability),
		"LLDPProtocolVLANIDStatus":                                reflect.ValueOf(layers.LLDPProtocolVLANIDStatus),
		"LLDPTLVChassisID":                                        reflect.ValueOf(layers.LLDPTLVChassisID),
		"LLDPTLVEnd":                                              reflect.ValueOf(layers.LLDPTLVEnd),
		"LLDPTLVMgmtAddress":                                      reflect.ValueOf(layers.LLDPTLVMgmtAddress),
		"LLDPTLVOrgSpecific":                                      reflect.ValueOf(layers.LLDPTLVOrgSpecific),
		"LLDPTLVPortDescription":                                  reflect.ValueOf(layers.LLDPTLVPortDescription),
		"LLDPTLVPortID":                                           reflect.ValueOf(layers.LLDPTLVPortID),
		"LLDPTLVSysCapabilities":                                  reflect.ValueOf(layers.LLDPTLVSysCapabilities),
		"LLDPTLVSysDescription":                                   reflect.ValueOf(layers.LLDPTLVSysDescription),
		"LLDPTLVSysName":                                          reflect.ValueOf(layers.LLDPTLVSysName),
		"LLDPTLVTTL":                                              reflect.ValueOf(layers.LLDPTLVTTL),
		"LLDPappTypeGuestVoice":                                   reflect.ValueOf(layers.LLDPappTypeGuestVoice),
		"LLDPappTypeGuestVoiceSignaling":                          reflect.ValueOf(layers.LLDPappTypeGuestVoiceSignaling),
		"LLDPappTypeSoftphoneVoice":                               reflect.ValueOf(layers.LLDPappTypeSoftphoneVoice),
		"LLDPappTypeStreamingVideo":                               reflect.ValueOf(layers.LLDPappTypeStreamingVideo),
		"LLDPappTypeVideoConferencing":                            reflect.ValueOf(layers.LLDPappTypeVideoConferencing),
		"LLDPappTypeVideoSignaling":                               reflect.ValueOf(layers.LLDPappTypeVideoSignaling),
		"LLDPappTypeVoiceSignaling":                               reflect.ValueOf(layers.LLDPappTypeVoiceSignaling),
		"LayerClassICMPv6NDP":                                     reflect.ValueOf(&layers.LayerClassICMPv6NDP).Elem(),
		"LayerClassIPControl":                                     reflect.ValueOf(&layers.LayerClassIPControl).Elem(),
		"LayerClassIPNetwork":                                     reflect.ValueOf(&layers.LayerClassIPNetwork).Elem(),
		"LayerClassIPSec":                                         reflect.ValueOf(&layers.LayerClassIPSec).Elem(),
		"LayerClassIPTransport":                                   reflect.ValueOf(&layers.LayerClassIPTransport).Elem(),
		"LayerClassIPv6Extension":                                 reflect.ValueOf(&layers.LayerClassIPv6Extension).Elem(),
		"LayerClassMLDv1":                                         reflect.ValueOf(&layers.LayerClassMLDv1).Elem(),
		"LayerClassMLDv2":                                         reflect.ValueOf(&layers.LayerClassMLDv2).Elem(),
		"LayerClassSCTPChunk":                                     reflect.ValueOf(&layers.LayerClassSCTPChunk).Elem(),
		"LayerTypeARP":                                            reflect.ValueOf(&layers.LayerTypeARP).Elem(),
		"LayerTypeASF":                                            reflect.ValueOf(&layers.LayerTypeASF).Elem(),
		"LayerTypeASFPresencePong":                                reflect.ValueOf(&layers.LayerTypeASFPresencePong).Elem(),
		"LayerTypeBFD":                                            reflect.ValueOf(&layers.LayerTypeBFD).Elem(),
		"LayerTypeCiscoDiscovery":                                 reflect.ValueOf(&layers.LayerTypeCiscoDiscovery).Elem(),
		"LayerTypeCiscoDiscoveryInfo":                             reflect.ValueOf(&layers.LayerTypeCiscoDiscoveryInfo).Elem(),
		"LayerTypeDHCPv4":                                         reflect.ValueOf(&layers.LayerTypeDHCPv4).Elem(),
		"LayerTypeDHCPv6":                                         reflect.ValueOf(&layers.LayerTypeDHCPv6).Elem(),
		"LayerTypeDNS":                                            reflect.ValueOf(&layers.LayerTypeDNS).Elem(),
		"LayerTypeDot11":                                          reflect.ValueOf(&layers.LayerTypeDot11).Elem(),
		"LayerTypeDot11Ctrl":                                      reflect.ValueOf(&layers.LayerTypeDot11Ctrl).Elem(),
		"LayerTypeDot11CtrlAck":                                   reflect.ValueOf(&layers.LayerTypeDot11CtrlAck).Elem(),
		"LayerTypeDot11CtrlBlockAck":                              reflect.ValueOf(&layers.LayerTypeDot11CtrlBlockAck).Elem(),
		"LayerTypeDot11CtrlBlockAckReq":                           reflect.ValueOf(&layers.LayerTypeDot11CtrlBlockAckReq).Elem(),
		"LayerTypeDot11CtrlCFEnd":                                 reflect.ValueOf(&layers.LayerTypeDot11CtrlCFEnd).Elem(),
		"LayerTypeDot11CtrlCFEndAck":                              reflect.ValueOf(&layers.LayerTypeDot11CtrlCFEndAck).Elem(),
		"LayerTypeDot11CtrlCTS":                                   reflect.ValueOf(&layers.LayerTypeDot11CtrlCTS).Elem(),
		"LayerTypeDot11CtrlPowersavePoll":                         reflect.ValueOf(&layers.LayerTypeDot11CtrlPowersavePoll).Elem(),
		"LayerTypeDot11CtrlRTS":                                   reflect.ValueOf(&layers.LayerTypeDot11CtrlRTS).Elem(),
		"LayerTypeDot11Data":                                      reflect.ValueOf(&layers.LayerTypeDot11Data).Elem(),
		"LayerTypeDot11DataCFAck":                                 reflect.ValueOf(&layers.LayerTypeDot11DataCFAck).Elem(),
		"LayerTypeDot11DataCFAckNoData":                           reflect.ValueOf(&layers.LayerTypeDot11DataCFAckNoData).Elem(),
		"LayerTypeDot11DataCFAckPoll":                             reflect.ValueOf(&layers.LayerTypeDot11DataCFAckPoll).Elem(),
		"LayerTypeDot11DataCFAckPollNoData":                       reflect.ValueOf(&layers.LayerTypeDot11DataCFAckPollNoData).Elem(),
		"LayerTypeDot11DataCFPoll":                                reflect.ValueOf(&layers.LayerTypeDot11DataCFPoll).Elem(),
		"LayerTypeDot11DataCFPollNoData":                          reflect.ValueOf(&layers.LayerTypeDot11DataCFPollNoData).Elem(),
		"LayerTypeDot11DataNull":                                  reflect.ValueOf(&layers.LayerTypeDot11DataNull).Elem(),
		"LayerTypeDot11DataQOSCFAckPollNoData":                    reflect.ValueOf(&layers.LayerTypeDot11DataQOSCFAckPollNoData).Elem(),
		"LayerTypeDot11DataQOSCFPollNoData":                       reflect.ValueOf(&layers.LayerTypeDot11DataQOSCFPollNoData).Elem(),
		"LayerTypeDot11DataQOSData":                               reflect.ValueOf(&layers.LayerTypeDot11DataQOSData).Elem(),
		"LayerTypeDot11DataQOSDataCFAck":                          reflect.ValueOf(&layers.LayerTypeDot11DataQOSDataCFAck).Elem(),
		"LayerTypeDot11DataQOSDataCFAckPoll":                      reflect.ValueOf(&layers.LayerTypeDot11DataQOSDataCFAckPoll).Elem(),
		"LayerTypeDot11DataQOSDataCFPoll":                         reflect.ValueOf(&layers.LayerTypeDot11DataQOSDataCFPoll).Elem(),
		"LayerTypeDot11DataQOSNull":                               reflect.ValueOf(&layers.LayerTypeDot11DataQOSNull).Elem(),
		"LayerTypeDot11InformationElement":                        reflect.ValueOf(&layers.LayerTypeDot11InformationElement).Elem(),
		"LayerTypeDot11MgmtATIM":                                  reflect.ValueOf(&layers.LayerTypeDot11MgmtATIM).Elem(),
		"LayerTypeDot11MgmtAction":                                reflect.ValueOf(&layers.LayerTypeDot11MgmtAction).Elem(),
		"LayerTypeDot11MgmtActionNoAck":                           reflect.ValueOf(&layers.LayerTypeDot11MgmtActionNoAck).Elem(),
		"LayerTypeDot11MgmtArubaWLAN":                             reflect.ValueOf(&layers.LayerTypeDot11MgmtArubaWLAN).Elem(),
		"LayerTypeDot11MgmtAssociationReq":                        reflect.ValueOf(&layers.LayerTypeDot11MgmtAssociationReq).Elem(),
		"LayerTypeDot11MgmtAssociationResp":                       reflect.ValueOf(&layers.LayerTypeDot11MgmtAssociationResp).Elem(),
		"LayerTypeDot11MgmtAuthentication":                        reflect.ValueOf(&layers.LayerTypeDot11MgmtAuthentication).Elem(),
		"LayerTypeDot11MgmtBeacon":                                reflect.ValueOf(&layers.LayerTypeDot11MgmtBeacon).Elem(),
		"LayerTypeDot11MgmtDeauthentication":                      reflect.ValueOf(&layers.LayerTypeDot11MgmtDeauthentication).Elem(),
		"LayerTypeDot11MgmtDisassociation":                        reflect.ValueOf(&layers.LayerTypeDot11MgmtDisassociation).Elem(),
		"LayerTypeDot11MgmtMeasurementPilot":                      reflect.ValueOf(&layers.LayerTypeDot11MgmtMeasurementPilot).Elem(),
		"LayerTypeDot11MgmtProbeReq":                              reflect.ValueOf(&layers.LayerTypeDot11MgmtProbeReq).Elem(),
		"LayerTypeDot11MgmtProbeResp":                             reflect.ValueOf(&layers.LayerTypeDot11MgmtProbeResp).Elem(),
		"LayerTypeDot11MgmtReassociationReq":                      reflect.ValueOf(&layers.LayerTypeDot11MgmtReassociationReq).Elem(),
		"LayerTypeDot11MgmtReassociationResp":                     reflect.ValueOf(&layers.LayerTypeDot11MgmtReassociationResp).Elem(),
		"LayerTypeDot11WEP":                                       reflect.ValueOf(&layers.LayerTypeDot11WEP).Elem(),
		"LayerTypeDot1Q":                                          reflect.ValueOf(&layers.LayerTypeDot1Q).Elem(),
		"LayerTypeEAP":                                            reflect.ValueOf(&layers.LayerTypeEAP).Elem(),
		"LayerTypeEAPOL":                                          reflect.ValueOf(&layers.LayerTypeEAPOL).Elem(),
		"LayerTypeEAPOLKey":                                       reflect.ValueOf(&layers.LayerTypeEAPOLKey).Elem(),
		"LayerTypeERSPANII":                                       reflect.ValueOf(&layers.LayerTypeERSPANII).Elem(),
		"LayerTypeEtherIP":                                        reflect.ValueOf(&layers.LayerTypeEtherIP).Elem(),
		"LayerTypeEthernet":                                       reflect.ValueOf(&layers.LayerTypeEthernet).Elem(),
		"LayerTypeEthernetCTP":                                    reflect.ValueOf(&layers.LayerTypeEthernetCTP).Elem(),
		"LayerTypeEthernetCTPForwardData":                         reflect.ValueOf(&layers.LayerTypeEthernetCTPForwardData).Elem(),
		"LayerTypeEthernetCTPReply":                               reflect.ValueOf(&layers.LayerTypeEthernetCTPReply).Elem(),
		"LayerTypeFDDI":                                           reflect.ValueOf(&layers.LayerTypeFDDI).Elem(),
		"LayerTypeGRE":                                            reflect.ValueOf(&layers.LayerTypeGRE).Elem(),
		"LayerTypeGTPv1U":                                         reflect.ValueOf(&layers.LayerTypeGTPv1U).Elem(),
		"LayerTypeGeneve":                                         reflect.ValueOf(&layers.LayerTypeGeneve).Elem(),
		"LayerTypeICMPv4":                                         reflect.ValueOf(&layers.LayerTypeICMPv4).Elem(),
		"LayerTypeICMPv6":                                         reflect.ValueOf(&layers.LayerTypeICMPv6).Elem(),
		"LayerTypeICMPv6Echo":                                     reflect.ValueOf(&layers.LayerTypeICMPv6Echo).Elem(),
		"LayerTypeICMPv6NeighborAdvertisement":                    reflect.ValueOf(&layers.LayerTypeICMPv6NeighborAdvertisement).Elem(),
		"LayerTypeICMPv6NeighborSolicitation":                     reflect.ValueOf(&layers.LayerTypeICMPv6NeighborSolicitation).Elem(),
		"LayerTypeICMPv6Redirect":                                 reflect.ValueOf(&layers.LayerTypeICMPv6Redirect).Elem(),
		"LayerTypeICMPv6RouterAdvertisement":                      reflect.ValueOf(&layers.LayerTypeICMPv6RouterAdvertisement).Elem(),
		"LayerTypeICMPv6RouterSolicitation":                       reflect.ValueOf(&layers.LayerTypeICMPv6RouterSolicitation).Elem(),
		"LayerTypeIGMP":                                           reflect.ValueOf(&layers.LayerTypeIGMP).Elem(),
		"LayerTypeIPSecAH":                                        reflect.ValueOf(&layers.LayerTypeIPSecAH).Elem(),
		"LayerTypeIPSecESP":                                       reflect.ValueOf(&layers.LayerTypeIPSecESP).Elem(),
		"LayerTypeIPv4":                                           reflect.ValueOf(&layers.LayerTypeIPv4).Elem(),
		"LayerTypeIPv6":                                           reflect.ValueOf(&layers.LayerTypeIPv6).Elem(),
		"LayerTypeIPv6Destination":                                reflect.ValueOf(&layers.LayerTypeIPv6Destination).Elem(),
		"LayerTypeIPv6Fragment":                                   reflect.ValueOf(&layers.LayerTypeIPv6Fragment).Elem(),
		"LayerTypeIPv6HopByHop":                                   reflect.ValueOf(&layers.LayerTypeIPv6HopByHop).Elem(),
		"LayerTypeIPv6Routing":                                    reflect.ValueOf(&layers.LayerTypeIPv6Routing).Elem(),
		"LayerTypeLCM":                                            reflect.ValueOf(&layers.LayerTypeLCM).Elem(),
		"LayerTypeLLC":                                            reflect.ValueOf(&layers.LayerTypeLLC).Elem(),
		"LayerTypeLinkLayerDiscovery":                             reflect.ValueOf(&layers.LayerTypeLinkLayerDiscovery).Elem(),
		"LayerTypeLinkLayerDiscoveryInfo":                         reflect.ValueOf(&layers.LayerTypeLinkLayerDiscoveryInfo).Elem(),
		"LayerTypeLinuxSLL":                                       reflect.ValueOf(&layers.LayerTypeLinuxSLL).Elem(),
		"LayerTypeLoopback":                                       reflect.ValueOf(&layers.LayerTypeLoopback).Elem(),
		"LayerTypeMLDv1MulticastListenerDone":                     reflect.ValueOf(&layers.LayerTypeMLDv1MulticastListenerDone).Elem(),
		"LayerTypeMLDv1MulticastListenerQuery":                    reflect.ValueOf(&layers.LayerTypeMLDv1MulticastListenerQuery).Elem(),
		"LayerTypeMLDv1MulticastListenerReport":                   reflect.ValueOf(&layers.LayerTypeMLDv1MulticastListenerReport).Elem(),
		"LayerTypeMLDv2MulticastListenerQuery":                    reflect.ValueOf(&layers.LayerTypeMLDv2MulticastListenerQuery).Elem(),
		"LayerTypeMLDv2MulticastListenerReport":                   reflect.ValueOf(&layers.LayerTypeMLDv2MulticastListenerReport).Elem(),
		"LayerTypeMPLS":                                           reflect.ValueOf(&layers.LayerTypeMPLS).Elem(),
		"LayerTypeModbusTCP":                                      reflect.ValueOf(&layers.LayerTypeModbusTCP).Elem(),
		"LayerTypeNTP":                                            reflect.ValueOf(&layers.LayerTypeNTP).Elem(),
		"LayerTypeNortelDiscovery":                                reflect.ValueOf(&layers.LayerTypeNortelDiscovery).Elem(),
		"LayerTypeOSPF":                                           reflect.ValueOf(&layers.LayerTypeOSPF).Elem(),
		"LayerTypePFLog":                                          reflect.ValueOf(&layers.LayerTypePFLog).Elem(),
		"LayerTypePPP":                                            reflect.ValueOf(&layers.LayerTypePPP).Elem(),
		"LayerTypePPPoE":                                          reflect.ValueOf(&layers.LayerTypePPPoE).Elem(),
		"LayerTypePrismHeader":                                    reflect.ValueOf(&layers.LayerTypePrismHeader).Elem(),
		"LayerTypeRADIUS":                                         reflect.ValueOf(&layers.LayerTypeRADIUS).Elem(),
		"LayerTypeRMCP":                                           reflect.ValueOf(&layers.LayerTypeRMCP).Elem(),
		"LayerTypeRUDP":                                           reflect.ValueOf(&layers.LayerTypeRUDP).Elem(),
		"LayerTypeRadioTap":                                       reflect.ValueOf(&layers.LayerTypeRadioTap).Elem(),
		"LayerTypeSCTP":                                           reflect.ValueOf(&layers.LayerTypeSCTP).Elem(),
		"LayerTypeSCTPAbort":                                      reflect.ValueOf(&layers.LayerTypeSCTPAbort).Elem(),
		"LayerTypeSCTPCookieAck":                                  reflect.ValueOf(&layers.LayerTypeSCTPCookieAck).Elem(),
		"LayerTypeSCTPCookieEcho":                                 reflect.ValueOf(&layers.LayerTypeSCTPCookieEcho).Elem(),
		"LayerTypeSCTPData":                                       reflect.ValueOf(&layers.LayerTypeSCTPData).Elem(),
		"LayerTypeSCTPEmptyLayer":                                 reflect.ValueOf(&layers.LayerTypeSCTPEmptyLayer).Elem(),
		"LayerTypeSCTPError":                                      reflect.ValueOf(&layers.LayerTypeSCTPError).Elem(),
		"LayerTypeSCTPHeartbeat":                                  reflect.ValueOf(&layers.LayerTypeSCTPHeartbeat).Elem(),
		"LayerTypeSCTPHeartbeatAck":                               reflect.ValueOf(&layers.LayerTypeSCTPHeartbeatAck).Elem(),
		"LayerTypeSCTPInit":                                       reflect.ValueOf(&layers.LayerTypeSCTPInit).Elem(),
		"LayerTypeSCTPInitAck":                                    reflect.ValueOf(&layers.LayerTypeSCTPInitAck).Elem(),
		"LayerTypeSCTPSack":                                       reflect.ValueOf(&layers.LayerTypeSCTPSack).Elem(),
		"LayerTypeSCTPShutdown":                                   reflect.ValueOf(&layers.LayerTypeSCTPShutdown).Elem(),
		"LayerTypeSCTPShutdownAck":                                reflect.ValueOf(&layers.LayerTypeSCTPShutdownAck).Elem(),
		"LayerTypeSCTPShutdownComplete":                           reflect.ValueOf(&layers.LayerTypeSCTPShutdownComplete).Elem(),
		"LayerTypeSCTPUnknownChunkType":                           reflect.ValueOf(&layers.LayerTypeSCTPUnknownChunkType).Elem(),
		"LayerTypeSFlow":                                          reflect.ValueOf(&layers.LayerTypeSFlow).Elem(),
		"LayerTypeSIP":                                            reflect.ValueOf(&layers.LayerTypeSIP).Elem(),
		"LayerTypeSNAP":                                           reflect.ValueOf(&layers.LayerTypeSNAP).Elem(),
		"LayerTypeSTP":                                            reflect.ValueOf(&layers.LayerTypeSTP).Elem(),
		"LayerTypeTCP":                                            reflect.ValueOf(&layers.LayerTypeTCP).Elem(),
		"LayerTypeTLS":                                            reflect.ValueOf(&layers.LayerTypeTLS).Elem(),
		"LayerTypeUDP":                                            reflect.ValueOf(&layers.LayerTypeUDP).Elem(),
		"LayerTypeUDPLite":                                        reflect.ValueOf(&layers.LayerTypeUDPLite).Elem(),
		"LayerTypeUSB":                                            reflect.ValueOf(&layers.LayerTypeUSB).Elem(),
		"LayerTypeUSBBulk":                                        reflect.ValueOf(&layers.LayerTypeUSBBulk).Elem(),
		"LayerTypeUSBControl":                                     reflect.ValueOf(&layers.LayerTypeUSBControl).Elem(),
		"LayerTypeUSBInterrupt":                                   reflect.ValueOf(&layers.LayerTypeUSBInterrupt).Elem(),
		"LayerTypeUSBRequestBlockSetup":                           reflect.ValueOf(&layers.LayerTypeUSBRequestBlockSetup).Elem(),
		"LayerTypeVRRP":                                           reflect.ValueOf(&layers.LayerTypeVRRP).Elem(),
		"LayerTypeVXLAN":                                          reflect.ValueOf(&layers.LayerTypeVXLAN).Elem(),
		"LinkLSAtype":                                             reflect.ValueOf(constant.MakeFromLiteral("8", token.INT, 0)),
		"LinkTypeARCNetLinux":                                     reflect.ValueOf(layers.LinkTypeARCNetLinux),
		"LinkTypeATM_RFC1483":                                     reflect.ValueOf(layers.LinkTypeATM_RFC1483),
		"LinkTypeAX25":                                            reflect.ValueOf(layers.LinkTypeAX25),
		"LinkTypeArcNet":                                          reflect.ValueOf(layers.LinkTypeArcNet),
		"LinkTypeC_HDLC":                                          reflect.ValueOf(layers.LinkTypeC_HDLC),
		"LinkTypeDOCSIS":                                          reflect.ValueOf(layers.LinkTypeDOCSIS),
		"LinkTypeEthernet":                                        reflect.ValueOf(layers.LinkTypeEthernet),
		"LinkTypeFC2":                                             reflect.ValueOf(layers.LinkTypeFC2),
		"LinkTypeFC2Framed":                                       reflect.ValueOf(layers.LinkTypeFC2Framed),
		"LinkTypeFDDI":                                            reflect.ValueOf(layers.LinkTypeFDDI),
		"LinkTypeFRelay":                                          reflect.ValueOf(layers.LinkTypeFRelay),
		"LinkTypeIEEE80211Radio":                                  reflect.ValueOf(layers.LinkTypeIEEE80211Radio),
		"LinkTypeIEEE802_11":                                      reflect.ValueOf(layers.LinkTypeIEEE802_11),
		"LinkTypeIPOver1394":                                      reflect.ValueOf(layers.LinkTypeIPOver1394),
		"LinkTypeIPOverFC":                                        reflect.ValueOf(layers.LinkTypeIPOverFC),
		"LinkTypeIPv4":                                            reflect.ValueOf(layers.LinkTypeIPv4),
		"LinkTypeIPv6":                                            reflect.ValueOf(layers.LinkTypeIPv6),
		"LinkTypeLTalk":                                           reflect.ValueOf(layers.LinkTypeLTalk),
		"LinkTypeLinuxIRDA":                                       reflect.ValueOf(layers.LinkTypeLinuxIRDA),
		"LinkTypeLinuxLAPD":                                       reflect.ValueOf(layers.LinkTypeLinuxLAPD),
		"LinkTypeLinuxSLL":                                        reflect.ValueOf(layers.LinkTypeLinuxSLL),
		"LinkTypeLinuxUSB":                                        reflect.ValueOf(layers.LinkTypeLinuxUSB),
		"LinkTypeLoop":                                            reflect.ValueOf(layers.LinkTypeLoop),
		"LinkTypeMTP2":                                            reflect.ValueOf(layers.LinkTypeMTP2),
		"LinkTypeMTP2Phdr":                                        reflect.ValueOf(layers.LinkTypeMTP2Phdr),
		"LinkTypeMTP3":                                            reflect.ValueOf(layers.LinkTypeMTP3),
		"LinkTypeMetadata":                                        reflect.ValueOf(&layers.LinkTypeMetadata).Elem(),
		"LinkTypeNull":                                            reflect.ValueOf(layers.LinkTypeNull),
		"LinkTypePFLog":                                           reflect.ValueOf(layers.LinkTypePFLog),
		"LinkTypePPP":                                             reflect.ValueOf(layers.LinkTypePPP),
		"LinkTypePPPEthernet":                                     reflect.ValueOf(layers.LinkTypePPPEthernet),
		"LinkTypePPP_HDLC":                                        reflect.ValueOf(layers.LinkTypePPP_HDLC),
		"LinkTypePrismHeader":                                     reflect.ValueOf(layers.LinkTypePrismHeader),
		"LinkTypeRaw":                                             reflect.ValueOf(layers.LinkTypeRaw),
		"LinkTypeSCCP":                                            reflect.ValueOf(layers.LinkTypeSCCP),
		"LinkTypeSLIP":                                            reflect.ValueOf(layers.LinkTypeSLIP),
		"LinkTypeSunATM":                                          reflect.ValueOf(layers.LinkTypeSunATM),
		"LinkTypeTokenRing":                                       reflect.ValueOf(layers.LinkTypeTokenRing),
		"LinuxSLLPacketTypeBroadcast":                             reflect.ValueOf(layers.LinuxSLLPacketTypeBroadcast),
		"LinuxSLLPacketTypeFastroute":                             reflect.ValueOf(layers.LinuxSLLPacketTypeFastroute),
		"LinuxSLLPacketTypeHost":                                  reflect.ValueOf(layers.LinuxSLLPacketTypeHost),
		"LinuxSLLPacketTypeLoopback":                              reflect.ValueOf(layers.LinuxSLLPacketTypeLoopback),
		"LinuxSLLPacketTypeMulticast":                             reflect.ValueOf(layers.LinuxSLLPacketTypeMulticast),
		"LinuxSLLPacketTypeOtherhost":                             reflect.ValueOf(layers.LinuxSLLPacketTypeOtherhost),
		"LinuxSLLPacketTypeOutgoing":                              reflect.ValueOf(layers.LinuxSLLPacketTypeOutgoing),
		"MLDv2MulticastAddressRecordTypeAllowNewSources":          reflect.ValueOf(layers.MLDv2MulticastAddressRecordTypeAllowNewSources),
		"MLDv2MulticastAddressRecordTypeBlockOldSources":          reflect.ValueOf(layers.MLDv2MulticastAddressRecordTypeBlockOldSources),
		"MLDv2MulticastAddressRecordTypeChangeToExcludeMode":      reflect.ValueOf(layers.MLDv2MulticastAddressRecordTypeChangeToExcludeMode),
		"MLDv2MulticastAddressRecordTypeChangeToIncludeMode":      reflect.ValueOf(layers.MLDv2MulticastAddressRecordTypeChangeToIncludeMode),
		"MLDv2MulticastAddressRecordTypeModeIsExcluded":           reflect.ValueOf(layers.MLDv2MulticastAddressRecordTypeModeIsExcluded),
		"MLDv2MulticastAddressRecordTypeModeIsIncluded":           reflect.ValueOf(layers.MLDv2MulticastAddressRecordTypeModeIsIncluded),
		"MPLSPayloadDecoder":                                      reflect.ValueOf(&layers.MPLSPayloadDecoder).Elem(),
		"ModbusProtocolModbus":                                    reflect.ValueOf(layers.ModbusProtocolModbus),
		"NDPBackplaneEthernet":                                    reflect.ValueOf(layers.NDPBackplaneEthernet),
		"NDPBackplaneEthernetFDDI":                                reflect.ValueOf(layers.NDPBackplaneEthernetFDDI),
		"NDPBackplaneEthernetFastEthernet":                        reflect.ValueOf(layers.NDPBackplaneEthernetFastEthernet),
		"NDPBackplaneEthernetFastEthernetGigabitEthernet":         reflect.ValueOf(layers.NDPBackplaneEthernetFastEthernetGigabitEthernet),
		"NDPBackplaneEthernetTokenring":                           reflect.ValueOf(layers.NDPBackplaneEthernetTokenring),
		"NDPBackplaneEthernetTokenringFDDI":                       reflect.ValueOf(layers.NDPBackplaneEthernetTokenringFDDI),
		"NDPBackplaneEthernetTokenringFDDIRedundantPower":         reflect.ValueOf(layers.NDPBackplaneEthernetTokenringFDDIRedundantPower),
		"NDPBackplaneEthernetTokenringFastEthernet":               reflect.ValueOf(layers.NDPBackplaneEthernetTokenringFastEthernet),
		"NDPBackplaneEthernetTokenringFastEthernetRedundantPower": reflect.ValueOf(layers.NDPBackplaneEthernetTokenringFastEthernetRedundantPower),
		"NDPBackplaneEthernetTokenringRedundantPower":             reflect.ValueOf(layers.NDPBackplaneEthernetTokenringRedundantPower),
		"NDPBackplaneOther":                                       reflect.ValueOf(layers.NDPBackplaneOther),
		"NDPBackplaneTokenRing":                                   reflect.ValueOf(layers.NDPBackplaneTokenRing),
		"NDPChassis100BaseTHub":                                   reflect.ValueOf(layers.NDPChassis100BaseTHub),
		"NDPChassis23000series":                                   reflect.ValueOf(layers.NDPChassis23000series),
		"NDPChassis2310":                                          reflect.ValueOf(layers.NDPChassis2310),
		"NDPChassis23100series":                                   reflect.ValueOf(layers.NDPChassis23100series),
		"NDPChassis2486":                                          reflect.ValueOf(layers.NDPChassis2486),
		"NDPChassis24portEthernetSwitch47024TPWR":                 reflect.ValueOf(layers.NDPChassis24portEthernetSwitch47024TPWR),
		"NDPChassis2715SA":                                        reflect.ValueOf(layers.NDPChassis2715SA),
		"NDPChassis271x":                                          reflect.ValueOf(layers.NDPChassis271x),
		"NDPChassis28000series":                                   reflect.ValueOf(layers.NDPChassis28000series),
		"NDPChassis2810":                                          reflect.ValueOf(layers.NDPChassis2810),
		"NDPChassis2813":                                          reflect.ValueOf(layers.NDPChassis2813),
		"NDPChassis2813SA":                                        reflect.ValueOf(layers.NDPChassis2813SA),
		"NDPChassis2814":                                          reflect.ValueOf(layers.NDPChassis2814),
		"NDPChassis2814SA":                                        reflect.ValueOf(layers.NDPChassis2814SA),
		"NDPChassis2912":                                          reflect.ValueOf(layers.NDPChassis2912),
		"NDPChassis2914":                                          reflect.ValueOf(layers.NDPChassis2914),
		"NDPChassis2915":                                          reflect.ValueOf(layers.NDPChassis2915),
		"NDPChassis3000":                                          reflect.ValueOf(layers.NDPChassis3000),
		"NDPChassis3000FastEthernet":                              reflect.ValueOf(layers.NDPChassis3000FastEthernet),
		"NDPChassis3030":                                          reflect.ValueOf(layers.NDPChassis3030),
		"NDPChassis48portEthernetSwitch47048TPWR":                 reflect.ValueOf(layers.NDPChassis48portEthernetSwitch47048TPWR),
		"NDPChassis5000":                                          reflect.ValueOf(layers.NDPChassis5000),
		"NDPChassis5005":                                          reflect.ValueOf(layers.NDPChassis5005),
		"NDPChassis5DN00xseries":                                  reflect.ValueOf(layers.NDPChassis5DN00xseries),
		"NDPChassis810M":                                          reflect.ValueOf(layers.NDPChassis810M),
		"NDPChassisAlcatelEWC":                                    reflect.ValueOf(layers.NDPChassisAlcatelEWC),
		"NDPChassisAlteon180e":                                    reflect.ValueOf(layers.NDPChassisAlteon180e),
		"NDPChassisAlteon184":                                     reflect.ValueOf(layers.NDPChassisAlteon184),
		"NDPChassisAlteonAD3":                                     reflect.ValueOf(layers.NDPChassisAlteonAD3),
		"NDPChassisAlteonAD4":                                     reflect.ValueOf(layers.NDPChassisAlteonAD4),
		"NDPChassisAlteonApplicationSwitch2208":                   reflect.ValueOf(layers.NDPChassisAlteonApplicationSwitch2208),
		"NDPChassisAlteonApplicationSwitch2216":                   reflect.ValueOf(layers.NDPChassisAlteonApplicationSwitch2216),
		"NDPChassisAlteonApplicationSwitch2224":                   reflect.ValueOf(layers.NDPChassisAlteonApplicationSwitch2224),
		"NDPChassisAlteonApplicationSwitch2424":                   reflect.ValueOf(layers.NDPChassisAlteonApplicationSwitch2424),
		"NDPChassisAlteonApplicationSwitch2424SSL":                reflect.ValueOf(layers.NDPChassisAlteonApplicationSwitch2424SSL),
		"NDPChassisAlteonApplicationSwitch3408":                   reflect.ValueOf(layers.NDPChassisAlteonApplicationSwitch3408),
		"NDPChassisAlteonApplicationSwitch3416":                   reflect.ValueOf(layers.NDPChassisAlteonApplicationSwitch3416),
		"NDPChassisAlteonSSL31010100":                             reflect.ValueOf(layers.NDPChassisAlteonSSL31010100),
		"NDPChassisAlteonSSL31010100FIPS":                         reflect.ValueOf(layers.NDPChassisAlteonSSL31010100FIPS),
		"NDPChassisAlteonSSL31010100Fiber":                        reflect.ValueOf(layers.NDPChassisAlteonSSL31010100Fiber),
		"NDPChassisAlteonSSL410101001000":                         reflect.ValueOf(layers.NDPChassisAlteonSSL410101001000),
		"NDPChassisAlteonSSL410101001000Fiber":                    reflect.ValueOf(layers.NDPChassisAlteonSSL410101001000Fiber),
		"NDPChassisAlteonSwitchFamily":                            reflect.ValueOf(layers.NDPChassisAlteonSwitchFamily),
		"NDPChassisBayStack10PowerSupplyUnit":                     reflect.ValueOf(layers.NDPChassisBayStack10PowerSupplyUnit),
		"NDPChassisBayStack150EthernetHub":                        reflect.ValueOf(layers.NDPChassisBayStack150EthernetHub),
		"NDPChassisBayStack200EthernetHub":                        reflect.ValueOf(layers.NDPChassisBayStack200EthernetHub),
		"NDPChassisBayStack25010100EthernetHub":                   reflect.ValueOf(layers.NDPChassisBayStack25010100EthernetHub),
		"NDPChassisBayStack301":                                   reflect.ValueOf(layers.NDPChassisBayStack301),
		"NDPChassisBayStack302Switch":                             reflect.ValueOf(layers.NDPChassisBayStack302Switch),
		"NDPChassisBayStack303304Switches":                        reflect.ValueOf(layers.NDPChassisBayStack303304Switches),
		"NDPChassisBayStack350Switch":                             reflect.ValueOf(layers.NDPChassisBayStack350Switch),
		"NDPChassisBayStack3580GigSwitch":                         reflect.ValueOf(layers.NDPChassisBayStack3580GigSwitch),
		"NDPChassisBayStack380101001000Switch":                    reflect.ValueOf(layers.NDPChassisBayStack380101001000Switch),
		"NDPChassisBayStack38024FFiber1000Switch":                 reflect.ValueOf(layers.NDPChassisBayStack38024FFiber1000Switch),
		"NDPChassisBayStack41010100Switches":                      reflect.ValueOf(layers.NDPChassisBayStack41010100Switches),
		"NDPChassisBayStack42010100Switch":                        reflect.ValueOf(layers.NDPChassisBayStack42010100Switch),
		"NDPChassisBayStack450101001000Switches":                  reflect.ValueOf(layers.NDPChassisBayStack450101001000Switches),
		"NDPChassisBayStack670wirelessaccesspoint":                reflect.ValueOf(layers.NDPChassisBayStack670wirelessaccesspoint),
		"NDPChassisBayStackEthernet":                              reflect.ValueOf(layers.NDPChassisBayStackEthernet),
		"NDPChassisBayStackTokenRingHub":                          reflect.ValueOf(layers.NDPChassisBayStackTokenRingHub),
		"NDPChassisBusinessPolicySwitch200010100Switches":         reflect.ValueOf(layers.NDPChassisBusinessPolicySwitch200010100Switches),
		"NDPChassisCentillion12slot":                              reflect.ValueOf(layers.NDPChassisCentillion12slot),
		"NDPChassisCentillion1slot":                               reflect.ValueOf(layers.NDPChassisCentillion1slot),
		"NDPChassisCentillion50NSwitch":                           reflect.ValueOf(layers.NDPChassisCentillion50NSwitch),
		"NDPChassisCentillion50TSwitch":                           reflect.ValueOf(layers.NDPChassisCentillion50TSwitch),
		"NDPChassisCentillion6slot":                               reflect.ValueOf(layers.NDPChassisCentillion6slot),
		"NDPChassisDDS":                                           reflect.ValueOf(layers.NDPChassisDDS),
		"NDPChassisEthercell":                                     reflect.ValueOf(layers.NDPChassisEthercell),
		"NDPChassisEthernetRoutingSwitch250026T":                  reflect.ValueOf(layers.NDPChassisEthernetRoutingSwitch250026T),
		"NDPChassisEthernetRoutingSwitch250026TPWR":               reflect.ValueOf(layers.NDPChassisEthernetRoutingSwitch250026TPWR),
		"NDPChassisEthernetRoutingSwitch250050T":                  reflect.ValueOf(layers.NDPChassisEthernetRoutingSwitch250050T),
		"NDPChassisEthernetRoutingSwitch250050TPWR":               reflect.ValueOf(layers.NDPChassisEthernetRoutingSwitch250050TPWR),
		"NDPChassisEthernetRoutingSwitch4526FX":                   reflect.ValueOf(layers.NDPChassisEthernetRoutingSwitch4526FX),
		"NDPChassisEthernetRoutingSwitch4548GT":                   reflect.ValueOf(layers.NDPChassisEthernetRoutingSwitch4548GT),
		"NDPChassisEthernetRoutingSwitch4548GTPWR":                reflect.ValueOf(layers.NDPChassisEthernetRoutingSwitch4548GTPWR),
		"NDPChassisEthernetRoutingSwitch4550T":                    reflect.ValueOf(layers.NDPChassisEthernetRoutingSwitch4550T),
		"NDPChassisEthernetRoutingSwitch4550TPWR":                 reflect.ValueOf(layers.NDPChassisEthernetRoutingSwitch4550TPWR),
		"NDPChassisEthernetRoutingSwitch551024T":                  reflect.ValueOf(layers.NDPChassisEthernetRoutingSwitch551024T),
		"NDPChassisEthernetRoutingSwitch551048T":                  reflect.ValueOf(layers.NDPChassisEthernetRoutingSwitch551048T),
		"NDPChassisEthernetRoutingSwitch552024TPWR":               reflect.ValueOf(layers.NDPChassisEthernetRoutingSwitch552024TPWR),
		"NDPChassisEthernetRoutingSwitch552048TPWR":               reflect.ValueOf(layers.NDPChassisEthernetRoutingSwitch552048TPWR),
		"NDPChassisEthernetRoutingSwitch553024TFD":                reflect.ValueOf(layers.NDPChassisEthernetRoutingSwitch553024TFD),
		"NDPChassisEthernetSwitch32524G":                          reflect.ValueOf(layers.NDPChassisEthernetSwitch32524G),
		"NDPChassisEthernetSwitch32524T":                          reflect.ValueOf(layers.NDPChassisEthernetSwitch32524T),
		"NDPChassisEthernetSwitch351024T":                         reflect.ValueOf(layers.NDPChassisEthernetSwitch351024T),
		"NDPChassisEthernetSwitch42524T":                          reflect.ValueOf(layers.NDPChassisEthernetSwitch42524T),
		"NDPChassisEthernetSwitch42548T":                          reflect.ValueOf(layers.NDPChassisEthernetSwitch42548T),
		"NDPChassisEthernetSwitch46024TPWR":                       reflect.ValueOf(layers.NDPChassisEthernetSwitch46024TPWR),
		"NDPChassisEthernetSwitch47024T":                          reflect.ValueOf(layers.NDPChassisEthernetSwitch47024T),
		"NDPChassisEthernetSwitch47048T":                          reflect.ValueOf(layers.NDPChassisEthernetSwitch47048T),
		"NDPChassisFVCMultimediaSwitch":                           reflect.ValueOf(layers.NDPChassisFVCMultimediaSwitch),
		"NDPChassisNortelMetroEthernetServiceUnit12GACL3Switch":   reflect.ValueOf(layers.NDPChassisNortelMetroEthernetServiceUnit12GACL3Switch),
		"NDPChassisNortelMetroEthernetServiceUnit12GDCL3Switch":   reflect.ValueOf(layers.NDPChassisNortelMetroEthernetServiceUnit12GDCL3Switch),
		"NDPChassisNortelMetroEthernetServiceUnit24TLXDCswitch":   reflect.ValueOf(layers.NDPChassisNortelMetroEthernetServiceUnit24TLXDCswitch),
		"NDPChassisNortelMetroEthernetServiceUnit24TSPFswitch":    reflect.ValueOf(layers.NDPChassisNortelMetroEthernetServiceUnit24TSPFswitch),
		"NDPChassisNortelNetworksVPNGateway3050":                  reflect.ValueOf(layers.NDPChassisNortelNetworksVPNGateway3050),
		"NDPChassisNortelNetworksVPNGateway3070":                  reflect.ValueOf(layers.NDPChassisNortelNetworksVPNGateway3070),
		"NDPChassisNortelNetworksWirelessLANAccessPoint2220":      reflect.ValueOf(layers.NDPChassisNortelNetworksWirelessLANAccessPoint2220),
		"NDPChassisNortelNetworksWirelessLANAccessPoint2221":      reflect.ValueOf(layers.NDPChassisNortelNetworksWirelessLANAccessPoint2221),
		"NDPChassisNortelNetworksWirelessLANAccessPoint2225":      reflect.ValueOf(layers.NDPChassisNortelNetworksWirelessLANAccessPoint2225),
		"NDPChassisNortelNetworksWirelessLANSecuritySwitch2250":   reflect.ValueOf(layers.NDPChassisNortelNetworksWirelessLANSecuritySwitch2250),
		"NDPChassisNortelNetworksWirelessLANSecuritySwitch2270":   reflect.ValueOf(layers.NDPChassisNortelNetworksWirelessLANSecuritySwitch2270),
		"NDPChassisNortelSecureAccessSwitch":                      reflect.ValueOf(layers.NDPChassisNortelSecureAccessSwitch),
		"NDPChassisOME6500":                                       reflect.ValueOf(layers.NDPChassisOME6500),
		"NDPChassisOPTera8003":                                    reflect.ValueOf(layers.NDPChassisOPTera8003),
		"NDPChassisOPTera8010co":                                  reflect.ValueOf(layers.NDPChassisOPTera8010co),
		"NDPChassisOPTera8103L2Switch":                            reflect.ValueOf(layers.NDPChassisOPTera8103L2Switch),
		"NDPChassisOPTera8110coL2Switch":                          reflect.ValueOf(layers.NDPChassisOPTera8110coL2Switch),
		"NDPChassisOPTera8603L3Switch":                            reflect.ValueOf(layers.NDPChassisOPTera8603L3Switch),
		"NDPChassisOPTera8610coL3Switch":                          reflect.ValueOf(layers.NDPChassisOPTera8610coL3Switch),
		"NDPChassisOPTeraMetro1200EthernetServiceModule":          reflect.ValueOf(layers.NDPChassisOPTeraMetro1200EthernetServiceModule),
		"NDPChassisOPTeraMetro1400EthernetServiceModule":          reflect.ValueOf(layers.NDPChassisOPTeraMetro1400EthernetServiceModule),
		"NDPChassisOPTeraMetro1450EthernetServiceModule":          reflect.ValueOf(layers.NDPChassisOPTeraMetro1450EthernetServiceModule),
		"NDPChassisOPTeraMetro3500":                               reflect.ValueOf(layers.NDPChassisOPTeraMetro3500),
		"NDPChassisOPTeraMetro8003OPML2Switch":                    reflect.ValueOf(layers.NDPChassisOPTeraMetro8003OPML2Switch),
		"NDPChassisOPTeraMetro8006OPML2Switch":                    reflect.ValueOf(layers.NDPChassisOPTeraMetro8006OPML2Switch),
		"NDPChassisOPTeraMetro8010OPML2Switch":                    reflect.ValueOf(layers.NDPChassisOPTeraMetro8010OPML2Switch),
		"NDPChassisOPTeraMetro8010coOPML2Switch":                  reflect.ValueOf(layers.NDPChassisOPTeraMetro8010coOPML2Switch),
		"NDPChassisOrionSwitch":                                   reflect.ValueOf(layers.NDPChassisOrionSwitch),
		"NDPChassisPassport1050L3Switch":                          reflect.ValueOf(layers.NDPChassisPassport1050L3Switch),
		"NDPChassisPassport1051L3Switch":                          reflect.ValueOf(layers.NDPChassisPassport1051L3Switch),
		"NDPChassisPassport1100L3Switch":                          reflect.ValueOf(layers.NDPChassisPassport1100L3Switch),
		"NDPChassisPassport1150L3Switch":                          reflect.ValueOf(layers.NDPChassisPassport1150L3Switch),
		"NDPChassisPassport1200L3Switch":                          reflect.ValueOf(layers.NDPChassisPassport1200L3Switch),
		"NDPChassisPassport1250L3Switch":                          reflect.ValueOf(layers.NDPChassisPassport1250L3Switch),
		"NDPChassisPassport1424L3Switch":                          reflect.ValueOf(layers.NDPChassisPassport1424L3Switch),
		"NDPChassisPassport1612L3Switch":                          reflect.ValueOf(layers.NDPChassisPassport1612L3Switch),
		"NDPChassisPassport1624L3Switch":                          reflect.ValueOf(layers.NDPChassisPassport1624L3Switch),
		"NDPChassisPassport1648L3Switch":                          reflect.ValueOf(layers.NDPChassisPassport1648L3Switch),
		"NDPChassisPassport740":                                   reflect.ValueOf(layers.NDPChassisPassport740),
		"NDPChassisPassport750":                                   reflect.ValueOf(layers.NDPChassisPassport750),
		"NDPChassisPassport790":                                   reflect.ValueOf(layers.NDPChassisPassport790),
		"NDPChassisPassport8006":                                  reflect.ValueOf(layers.NDPChassisPassport8006),
		"NDPChassisPassport8010":                                  reflect.ValueOf(layers.NDPChassisPassport8010),
		"NDPChassisPassport8106L2Switch":                          reflect.ValueOf(layers.NDPChassisPassport8106L2Switch),
		"NDPChassisPassport8110L2Switch":                          reflect.ValueOf(layers.NDPChassisPassport8110L2Switch),
		"NDPChassisPassport830010slotchassis":                     reflect.ValueOf(layers.NDPChassisPassport830010slotchassis),
		"NDPChassisPassport83006slotchassis":                      reflect.ValueOf(layers.NDPChassisPassport83006slotchassis),
		"NDPChassisPassport8606L3Switch":                          reflect.ValueOf(layers.NDPChassisPassport8606L3Switch),
		"NDPChassisPassport8610L3Switch":                          reflect.ValueOf(layers.NDPChassisPassport8610L3Switch),
		"NDPChassisPassportRBS2402L3Switch":                       reflect.ValueOf(layers.NDPChassisPassportRBS2402L3Switch),
		"NDPChassisSMBBES101024T":                                 reflect.ValueOf(layers.NDPChassisSMBBES101024T),
		"NDPChassisSMBBES101048T":                                 reflect.ValueOf(layers.NDPChassisSMBBES101048T),
		"NDPChassisSMBBES102024TPWR":                              reflect.ValueOf(layers.NDPChassisSMBBES102024TPWR),
		"NDPChassisSMBBES102048TPWR":                              reflect.ValueOf(layers.NDPChassisSMBBES102048TPWR),
		"NDPChassisSMBBES11024T":                                  reflect.ValueOf(layers.NDPChassisSMBBES11024T),
		"NDPChassisSMBBES11048T":                                  reflect.ValueOf(layers.NDPChassisSMBBES11048T),
		"NDPChassisSMBBES12024TPWR":                               reflect.ValueOf(layers.NDPChassisSMBBES12024TPWR),
		"NDPChassisSMBBES12048TPWR":                               reflect.ValueOf(layers.NDPChassisSMBBES12048TPWR),
		"NDPChassisSMBBES201024T":                                 reflect.ValueOf(layers.NDPChassisSMBBES201024T),
		"NDPChassisSMBBES201048T":                                 reflect.ValueOf(layers.NDPChassisSMBBES201048T),
		"NDPChassisSMBBES202024TPWR":                              reflect.ValueOf(layers.NDPChassisSMBBES202024TPWR),
		"NDPChassisSMBBES202048TPWR":                              reflect.ValueOf(layers.NDPChassisSMBBES202048TPWR),
		"NDPChassisSMBBES21024T":                                  reflect.ValueOf(layers.NDPChassisSMBBES21024T),
		"NDPChassisSMBBES21048T":                                  reflect.ValueOf(layers.NDPChassisSMBBES21048T),
		"NDPChassisSMBBES22024TPWR":                               reflect.ValueOf(layers.NDPChassisSMBBES22024TPWR),
		"NDPChassisSMBBES22048TPWR":                               reflect.ValueOf(layers.NDPChassisSMBBES22048TPWR),
		"NDPChassisSwitchNode":                                    reflect.ValueOf(layers.NDPChassisSwitchNode),
		"NDPChassisother":                                         reflect.ValueOf(layers.NDPChassisother),
		"NDPStateHeartbeat":                                       reflect.ValueOf(layers.NDPStateHeartbeat),
		"NDPStateNew":                                             reflect.ValueOf(layers.NDPStateNew),
		"NDPStateTopology":                                        reflect.ValueOf(layers.NDPStateTopology),
		"NSSALSAtype":                                             reflect.ValueOf(constant.MakeFromLiteral("8199", token.INT, 0)),
		"NSSALSAtypeV2":                                           reflect.ValueOf(constant.MakeFromLiteral("7", token.INT, 0)),
		"NetworkLSAtype":                                          reflect.ValueOf(constant.MakeFromLiteral("8194", token.INT, 0)),
		"NetworkLSAtypeV2":                                        reflect.ValueOf(constant.MakeFromLiteral("2", token.INT, 0)),
		"NewDHCPOption":                                           reflect.ValueOf(layers.NewDHCPOption),
		"NewDHCPv6Option":                                         reflect.ValueOf(layers.NewDHCPv6Option),
		"NewIPEndpoint":                                           reflect.ValueOf(layers.NewIPEndpoint),
		"NewMACEndpoint":                                          reflect.ValueOf(layers.NewMACEndpoint),
		"NewRUDPPortEndpoint":                                     reflect.ValueOf(layers.NewRUDPPortEndpoint),
		"NewSCTPPortEndpoint":                                     reflect.ValueOf(layers.NewSCTPPortEndpoint),
		"NewSIP":                                                  reflect.ValueOf(layers.NewSIP),
		"NewTCPPortEndpoint":                                      reflect.ValueOf(layers.NewTCPPortEndpoint),
		"NewUDPLitePortEndpoint":                                  reflect.ValueOf(layers.NewUDPLitePortEndpoint),
		"NewUDPPortEndpoint":                                      reflect.ValueOf(layers.NewUDPPortEndpoint),
		"OSPFDatabaseDescription":                                 reflect.ValueOf(layers.OSPFDatabaseDescription),
		"OSPFHello":                                               reflect.ValueOf(layers.OSPFHello),
		"OSPFLinkStateAcknowledgment":                             reflect.ValueOf(layers.OSPFLinkStateAcknowledgment),
		"OSPFLinkStateRequest":                                    reflect.ValueOf(layers.OSPFLinkStateRequest),
		"OSPFLinkStateUpdate":                                     reflect.ValueOf(layers.OSPFLinkStateUpdate),
		"PFDirectionIn":                                           reflect.ValueOf(layers.PFDirectionIn),
		"PFDirectionInOut":                                        reflect.ValueOf(layers.PFDirectionInOut),
		"PFDirectionOut":                                          reflect.ValueOf(layers.PFDirectionOut),
		"PPPEndpoint":                                             reflect.ValueOf(&layers.PPPEndpoint).Elem(),
		"PPPFlow":                                                 reflect.ValueOf(&layers.PPPFlow).Elem(),
		"PPPTypeIPv4":                                             reflect.ValueOf(layers.PPPTypeIPv4),
		"PPPTypeIPv6":                                             reflect.ValueOf(layers.PPPTypeIPv6),
		"PPPTypeMPLSMulticast":                                    reflect.ValueOf(layers.PPPTypeMPLSMulticast),
		"PPPTypeMPLSUnicast":                                      reflect.ValueOf(layers.PPPTypeMPLSUnicast),
		"PPPTypeMetadata":                                         reflect.ValueOf(&layers.PPPTypeMetadata).Elem(),
		"PPPoECodeMetadata":                                       reflect.ValueOf(&layers.PPPoECodeMetadata).Elem(),
		"PPPoECodePADI":                                           reflect.ValueOf(layers.PPPoECodePADI),
		"PPPoECodePADO":                                           reflect.ValueOf(layers.PPPoECodePADO),
		"PPPoECodePADR":                                           reflect.ValueOf(layers.PPPoECodePADR),
		"PPPoECodePADS":                                           reflect.ValueOf(layers.PPPoECodePADS),
		"PPPoECodePADT":                                           reflect.ValueOf(layers.PPPoECodePADT),
		"PPPoECodeSession":                                        reflect.ValueOf(layers.PPPoECodeSession),
		"PrismDIDType1Channel":                                    reflect.ValueOf(layers.PrismDIDType1Channel),
		"PrismDIDType1FrameLength":                                reflect.ValueOf(layers.PrismDIDType1FrameLength),
		"PrismDIDType1HostTime":                                   reflect.ValueOf(layers.PrismDIDType1HostTime),
		"PrismDIDType1MACTime":                                    reflect.ValueOf(layers.PrismDIDType1MACTime),
		"PrismDIDType1Noise":                                      reflect.ValueOf(layers.PrismDIDType1Noise),
		"PrismDIDType1RSSI":                                       reflect.ValueOf(layers.PrismDIDType1RSSI),
		"PrismDIDType1Rate":                                       reflect.ValueOf(layers.PrismDIDType1Rate),
		"PrismDIDType1Signal":                                     reflect.ValueOf(layers.PrismDIDType1Signal),
		"PrismDIDType1SignalQuality":                              reflect.ValueOf(layers.PrismDIDType1SignalQuality),
		"PrismDIDType1TransmittedFrameIndicator":                  reflect.ValueOf(layers.PrismDIDType1TransmittedFrameIndicator),
		"PrismDIDType2Channel":                                    reflect.ValueOf(layers.PrismDIDType2Channel),
		"PrismDIDType2FrameLength":                                reflect.ValueOf(layers.PrismDIDType2FrameLength),
		"PrismDIDType2HostTime":                                   reflect.ValueOf(layers.PrismDIDType2HostTime),
		"PrismDIDType2MACTime":                                    reflect.ValueOf(layers.PrismDIDType2MACTime),
		"PrismDIDType2Noise":                                      reflect.ValueOf(layers.PrismDIDType2Noise),
		"PrismDIDType2RSSI":                                       reflect.ValueOf(layers.PrismDIDType2RSSI),
		"PrismDIDType2Rate":                                       reflect.ValueOf(layers.PrismDIDType2Rate),
		"PrismDIDType2Signal":                                     reflect.ValueOf(layers.PrismDIDType2Signal),
		"PrismDIDType2SignalQuality":                              reflect.ValueOf(layers.PrismDIDType2SignalQuality),
		"PrismDIDType2TransmittedFrameIndicator":                  reflect.ValueOf(layers.PrismDIDType2TransmittedFrameIndicator),
		"PrismType1MessageCode":                                   reflect.ValueOf(layers.PrismType1MessageCode),
		"PrismType2MessageCode":                                   reflect.ValueOf(layers.PrismType2MessageCode),
		"ProtocolFamilyIPv4":                                      reflect.ValueOf(layers.ProtocolFamilyIPv4),
		"ProtocolFamilyIPv6BSD":                                   reflect.ValueOf(layers.ProtocolFamilyIPv6BSD),
		"ProtocolFamilyIPv6Darwin":                                reflect.ValueOf(layers.ProtocolFamilyIPv6Darwin),
		"ProtocolFamilyIPv6FreeBSD":                               reflect.ValueOf(layers.ProtocolFamilyIPv6FreeBSD),
		"ProtocolFamilyIPv6Linux":                                 reflect.ValueOf(layers.ProtocolFamilyIPv6Linux),
		"ProtocolFamilyMetadata":                                  reflect.ValueOf(&layers.ProtocolFamilyMetadata).Elem(),
		"RADIUSAttributeTypeARAPChallengeResponse":                reflect.ValueOf(layers.RADIUSAttributeTypeARAPChallengeResponse),
		"RADIUSAttributeTypeARAPFeatures":                         reflect.ValueOf(layers.RADIUSAttributeTypeARAPFeatures),
		"RADIUSAttributeTypeARAPPassword":                         reflect.ValueOf(layers.RADIUSAttributeTypeARAPPassword),
		"RADIUSAttributeTypeARAPSecurity":                         reflect.ValueOf(layers.RADIUSAttributeTypeARAPSecurity),
		"RADIUSAttributeTypeARAPSecurityData":                     reflect.ValueOf(layers.RADIUSAttributeTypeARAPSecurityData),
		"RADIUSAttributeTypeARAPZoneAccess":                       reflect.ValueOf(layers.RADIUSAttributeTypeARAPZoneAccess),
		"RADIUSAttributeTypeAcctAuthentic":                        reflect.ValueOf(layers.RADIUSAttributeTypeAcctAuthentic),
		"RADIUSAttributeTypeAcctDelayTime":                        reflect.ValueOf(layers.RADIUSAttributeTypeAcctDelayTime),
		"RADIUSAttributeTypeAcctInputGigawords":                   reflect.ValueOf(layers.RADIUSAttributeTypeAcctInputGigawords),
		"RADIUSAttributeTypeAcctInputOctets":                      reflect.ValueOf(layers.RADIUSAttributeTypeAcctInputOctets),
		"RADIUSAttributeTypeAcctInputPackets":                     reflect.ValueOf(layers.RADIUSAttributeTypeAcctInputPackets),
		"RADIUSAttributeTypeAcctInterimInterval":                  reflect.ValueOf(layers.RADIUSAttributeTypeAcctInterimInterval),
		"RADIUSAttributeTypeAcctLinkCount":                        reflect.ValueOf(layers.RADIUSAttributeTypeAcctLinkCount),
		"RADIUSAttributeTypeAcctMultiSessionId":                   reflect.ValueOf(layers.RADIUSAttributeTypeAcctMultiSessionId),
		"RADIUSAttributeTypeAcctOutputGigawords":                  reflect.ValueOf(layers.RADIUSAttributeTypeAcctOutputGigawords),
		"RADIUSAttributeTypeAcctOutputOctets":                     reflect.ValueOf(layers.RADIUSAttributeTypeAcctOutputOctets),
		"RADIUSAttributeTypeAcctOutputPackets":                    reflect.ValueOf(layers.RADIUSAttributeTypeAcctOutputPackets),
		"RADIUSAttributeTypeAcctSessionId":                        reflect.ValueOf(layers.RADIUSAttributeTypeAcctSessionId),
		"RADIUSAttributeTypeAcctSessionTime":                      reflect.ValueOf(layers.RADIUSAttributeTypeAcctSessionTime),
		"RADIUSAttributeTypeAcctStatusType":                       reflect.ValueOf(layers.RADIUSAttributeTypeAcctStatusType),
		"RADIUSAttributeTypeAcctTerminateCause":                   reflect.ValueOf(layers.RADIUSAttributeTypeAcctTerminateCause),
		"RADIUSAttributeTypeAcctTunnelConnection":                 reflect.ValueOf(layers.RADIUSAttributeTypeAcctTunnelConnection),
		"RADIUSAttributeTypeAcctTunnelPacketsLost":                reflect.ValueOf(layers.RADIUSAttributeTypeAcctTunnelPacketsLost),
		"RADIUSAttributeTypeCHAPChallenge":                        reflect.ValueOf(layers.RADIUSAttributeTypeCHAPChallenge),
		"RADIUSAttributeTypeCHAPPassword":                         reflect.ValueOf(layers.RADIUSAttributeTypeCHAPPassword),
		"RADIUSAttributeTypeCallbackId":                           reflect.ValueOf(layers.RADIUSAttributeTypeCallbackId),
		"RADIUSAttributeTypeCallbackNumber":                       reflect.ValueOf(layers.RADIUSAttributeTypeCallbackNumber),
		"RADIUSAttributeTypeCalledStationId":                      reflect.ValueOf(layers.RADIUSAttributeTypeCalledStationId),
		"RADIUSAttributeTypeCallingStationId":                     reflect.ValueOf(layers.RADIUSAttributeTypeCallingStationId),
		"RADIUSAttributeTypeClass":                                reflect.ValueOf(layers.RADIUSAttributeTypeClass),
		"RADIUSAttributeTypeConfigurationToken":                   reflect.ValueOf(layers.RADIUSAttributeTypeConfigurationToken),
		"RADIUSAttributeTypeConnectInfo":                          reflect.ValueOf(layers.RADIUSAttributeTypeConnectInfo),
		"RADIUSAttributeTypeEAPMessage":                           reflect.ValueOf(layers.RADIUSAttributeTypeEAPMessage),
		"RADIUSAttributeTypeEventTimestamp":                       reflect.ValueOf(layers.RADIUSAttributeTypeEventTimestamp),
		"RADIUSAttributeTypeFilterId":                             reflect.ValueOf(layers.RADIUSAttributeTypeFilterId),
		"RADIUSAttributeTypeFramedAppleTalkLink":                  reflect.ValueOf(layers.RADIUSAttributeTypeFramedAppleTalkLink),
		"RADIUSAttributeTypeFramedAppleTalkNetwork":               reflect.ValueOf(layers.RADIUSAttributeTypeFramedAppleTalkNetwork),
		"RADIUSAttributeTypeFramedAppleTalkZone":                  reflect.ValueOf(layers.RADIUSAttributeTypeFramedAppleTalkZone),
		"RADIUSAttributeTypeFramedCompression":                    reflect.ValueOf(layers.RADIUSAttributeTypeFramedCompression),
		"RADIUSAttributeTypeFramedIPAddress":                      reflect.ValueOf(layers.RADIUSAttributeTypeFramedIPAddress),
		"RADIUSAttributeTypeFramedIPNetmask":                      reflect.ValueOf(layers.RADIUSAttributeTypeFramedIPNetmask),
		"RADIUSAttributeTypeFramedIPXNetwork":                     reflect.ValueOf(layers.RADIUSAttributeTypeFramedIPXNetwork),
		"RADIUSAttributeTypeFramedMTU":                            reflect.ValueOf(layers.RADIUSAttributeTypeFramedMTU),
		"RADIUSAttributeTypeFramedPool":                           reflect.ValueOf(layers.RADIUSAttributeTypeFramedPool),
		"RADIUSAttributeTypeFramedProtocol":                       reflect.ValueOf(layers.RADIUSAttributeTypeFramedProtocol),
		"RADIUSAttributeTypeFramedRoute":                          reflect.ValueOf(layers.RADIUSAttributeTypeFramedRoute),
		"RADIUSAttributeTypeFramedRouting":                        reflect.ValueOf(layers.RADIUSAttributeTypeFramedRouting),
		"RADIUSAttributeTypeIdleTimeout":                          reflect.ValueOf(layers.RADIUSAttributeTypeIdleTimeout),
		"RADIUSAttributeTypeLoginIPHost":                          reflect.ValueOf(layers.RADIUSAttributeTypeLoginIPHost),
		"RADIUSAttributeTypeLoginLATGroup":                        reflect.ValueOf(layers.RADIUSAttributeTypeLoginLATGroup),
		"RADIUSAttributeTypeLoginLATNode":                         reflect.ValueOf(layers.RADIUSAttributeTypeLoginLATNode),
		"RADIUSAttributeTypeLoginLATPort":                         reflect.ValueOf(layers.RADIUSAttributeTypeLoginLATPort),
		"RADIUSAttributeTypeLoginLATService":                      reflect.ValueOf(layers.RADIUSAttributeTypeLoginLATService),
		"RADIUSAttributeTypeLoginService":                         reflect.ValueOf(layers.RADIUSAttributeTypeLoginService),
		"RADIUSAttributeTypeLoginTCPPort":                         reflect.ValueOf(layers.RADIUSAttributeTypeLoginTCPPort),
		"RADIUSAttributeTypeMessageAuthenticator":                 reflect.ValueOf(layers.RADIUSAttributeTypeMessageAuthenticator),
		"RADIUSAttributeTypeNASIPAddress":                         reflect.ValueOf(layers.RADIUSAttributeTypeNASIPAddress),
		"RADIUSAttributeTypeNASIdentifier":                        reflect.ValueOf(layers.RADIUSAttributeTypeNASIdentifier),
		"RADIUSAttributeTypeNASPort":                              reflect.ValueOf(layers.RADIUSAttributeTypeNASPort),
		"RADIUSAttributeTypeNASPortId":                            reflect.ValueOf(layers.RADIUSAttributeTypeNASPortId),
		"RADIUSAttributeTypeNASPortType":                          reflect.ValueOf(layers.RADIUSAttributeTypeNASPortType),
		"RADIUSAttributeTypePasswordRetry":                        reflect.ValueOf(layers.RADIUSAttributeTypePasswordRetry),
		"RADIUSAttributeTypePortLimit":                            reflect.ValueOf(layers.RADIUSAttributeTypePortLimit),
		"RADIUSAttributeTypePrompt":                               reflect.ValueOf(layers.RADIUSAttributeTypePrompt),
		"RADIUSAttributeTypeProxyState":                           reflect.ValueOf(layers.RADIUSAttributeTypeProxyState),
		"RADIUSAttributeTypeReplyMessage":                         reflect.ValueOf(layers.RADIUSAttributeTypeReplyMessage),
		"RADIUSAttributeTypeServiceType":                          reflect.ValueOf(layers.RADIUSAttributeTypeServiceType),
		"RADIUSAttributeTypeSessionTimeout":                       reflect.ValueOf(layers.RADIUSAttributeTypeSessionTimeout),
		"RADIUSAttributeTypeState":                                reflect.ValueOf(layers.RADIUSAttributeTypeState),
		"RADIUSAttributeTypeTerminationAction":                    reflect.ValueOf(layers.RADIUSAttributeTypeTerminationAction),
		"RADIUSAttributeTypeTunnelAssignmentID":                   reflect.ValueOf(layers.RADIUSAttributeTypeTunnelAssignmentID),
		"RADIUSAttributeTypeTunnelClientAuthID":                   reflect.ValueOf(layers.RADIUSAttributeTypeTunnelClientAuthID),
		"RADIUSAttributeTypeTunnelClientEndpoint":                 reflect.ValueOf(layers.RADIUSAttributeTypeTunnelClientEndpoint),
		"RADIUSAttributeTypeTunnelMediumType":                     reflect.ValueOf(layers.RADIUSAttributeTypeTunnelMediumType),
		"RADIUSAttributeTypeTunnelPassword":                       reflect.ValueOf(layers.RADIUSAttributeTypeTunnelPassword),
		"RADIUSAttributeTypeTunnelPreference":                     reflect.ValueOf(layers.RADIUSAttributeTypeTunnelPreference),
		"RADIUSAttributeTypeTunnelPrivateGroupID":                 reflect.ValueOf(layers.RADIUSAttributeTypeTunnelPrivateGroupID),
		"RADIUSAttributeTypeTunnelServerAuthID":                   reflect.ValueOf(layers.RADIUSAttributeTypeTunnelServerAuthID),
		"RADIUSAttributeTypeTunnelServerEndpoint":                 reflect.ValueOf(layers.RADIUSAttributeTypeTunnelServerEndpoint),
		"RADIUSAttributeTypeTunnelType":                           reflect.ValueOf(layers.RADIUSAttributeTypeTunnelType),
		"RADIUSAttributeTypeUserName":                             reflect.ValueOf(layers.RADIUSAttributeTypeUserName),
		"RADIUSAttributeTypeUserPassword":                         reflect.ValueOf(layers.RADIUSAttributeTypeUserPassword),
		"RADIUSAttributeTypeVendorSpecific":                       reflect.ValueOf(layers.RADIUSAttributeTypeVendorSpecific),
		"RADIUSCodeAccessAccept":                                  reflect.ValueOf(layers.RADIUSCodeAccessAccept),
		"RADIUSCodeAccessChallenge":                               reflect.ValueOf(layers.RADIUSCodeAccessChallenge),
		"RADIUSCodeAccessReject":                                  reflect.ValueOf(layers.RADIUSCodeAccessReject),
		"RADIUSCodeAccessRequest":                                 reflect.ValueOf(layers.RADIUSCodeAccessRequest),
		"RADIUSCodeAccountingRequest":                             reflect.ValueOf(layers.RADIUSCodeAccountingRequest),
		"RADIUSCodeAccountingResponse":                            reflect.ValueOf(layers.RADIUSCodeAccountingResponse),
		"RADIUSCodeReserved":                                      reflect.ValueOf(layers.RADIUSCodeReserved),
		"RADIUSCodeStatusClient":                                  reflect.ValueOf(layers.RADIUSCodeStatusClient),
		"RADIUSCodeStatusServer":                                  reflect.ValueOf(layers.RADIUSCodeStatusServer),
		"RMCPAck":                                                 reflect.ValueOf(layers.RMCPAck),
		"RMCPClassASF":                                            reflect.ValueOf(layers.RMCPClassASF),
		"RMCPClassIPMI":                                           reflect.ValueOf(layers.RMCPClassIPMI),
		"RMCPClassOEM":                                            reflect.ValueOf(layers.RMCPClassOEM),
		"RMCPNormal":                                              reflect.ValueOf(layers.RMCPNormal),
		"RMCPVersion1":                                            reflect.ValueOf(layers.RMCPVersion1),
		"RUDPPortNames":                                           reflect.ValueOf(&layers.RUDPPortNames).Elem(),
		"RadioTapAMPDUDelimCRCErr":                                reflect.ValueOf(layers.RadioTapAMPDUDelimCRCErr),
		"RadioTapAMPDUDelimCRCKnown":                              reflect.ValueOf(layers.RadioTapAMPDUDelimCRCKnown),
		"RadioTapAMPDUIsLast":                                     reflect.ValueOf(layers.RadioTapAMPDUIsLast),
		"RadioTapAMPDUIsZerolen":                                  reflect.ValueOf(layers.RadioTapAMPDUIsZerolen),
		"RadioTapAMPDULastKnown":                                  reflect.ValueOf(layers.RadioTapAMPDULastKnown),
		"RadioTapAMPDUStatusFlagsReportZerolen":                   reflect.ValueOf(layers.RadioTapAMPDUStatusFlagsReportZerolen),
		"RadioTapChannelFlagsCCK":                                 reflect.ValueOf(layers.RadioTapChannelFlagsCCK),
		"RadioTapChannelFlagsDynamic":                             reflect.ValueOf(layers.RadioTapChannelFlagsDynamic),
		"RadioTapChannelFlagsGFSK":                                reflect.ValueOf(layers.RadioTapChannelFlagsGFSK),
		"RadioTapChannelFlagsGhz2":                                reflect.ValueOf(layers.RadioTapChannelFlagsGhz2),
		"RadioTapChannelFlagsGhz5":                                reflect.ValueOf(layers.RadioTapChannelFlagsGhz5),
		"RadioTapChannelFlagsOFDM":                                reflect.ValueOf(layers.RadioTapChannelFlagsOFDM),
		"RadioTapChannelFlagsPassive":                             reflect.ValueOf(layers.RadioTapChannelFlagsPassive),
		"RadioTapChannelFlagsTurbo":                               reflect.ValueOf(layers.RadioTapChannelFlagsTurbo),
		"RadioTapFlagsBadFCS":                                     reflect.ValueOf(layers.RadioTapFlagsBadFCS),
		"RadioTapFlagsCFP":                                        reflect.ValueOf(layers.RadioTapFlagsCFP),
		"RadioTapFlagsDatapad":                                    reflect.ValueOf(layers.RadioTapFlagsDatapad),
		"RadioTapFlagsFCS":                                        reflect.ValueOf(layers.RadioTapFlagsFCS),
		"RadioTapFlagsFrag":                                       reflect.ValueOf(layers.RadioTapFlagsFrag),
		"RadioTapFlagsShortGI":                                    reflect.ValueOf(layers.RadioTapFlagsShortGI),
		"RadioTapFlagsShortPreamble":                              reflect.ValueOf(layers.RadioTapFlagsShortPreamble),
		"RadioTapFlagsWEP":                                        reflect.ValueOf(layers.RadioTapFlagsWEP),
		"RadioTapMCSFlagsBandwidthMask":                           reflect.ValueOf(layers.RadioTapMCSFlagsBandwidthMask),
		"RadioTapMCSFlagsFECLDPC":                                 reflect.ValueOf(constant.MakeFromLiteral("16", token.INT, 0)),
		"RadioTapMCSFlagsGreenfield":                              reflect.ValueOf(constant.MakeFromLiteral("8", token.INT, 0)),
		"RadioTapMCSFlagsNESS0":                                   reflect.ValueOf(constant.MakeFromLiteral("128", token.INT, 0)),
		"RadioTapMCSFlagsSTBCMask":                                reflect.ValueOf(constant.MakeFromLiteral("96", token.INT, 0)),
		"RadioTapMCSFlagsShortGI":                                 reflect.ValueOf(constant.MakeFromLiteral("4", token.INT, 0)),
		"RadioTapMCSKnownBandwidth":                               reflect.ValueOf(layers.RadioTapMCSKnownBandwidth),
		"RadioTapMCSKnownFECType":                                 reflect.ValueOf(layers.RadioTapMCSKnownFECType),
		"RadioTapMCSKnownGuardInterval":                           reflect.ValueOf(layers.RadioTapMCSKnownGuardInterval),
		"RadioTapMCSKnownHTFormat":                                reflect.ValueOf(layers.RadioTapMCSKnownHTFormat),
		"RadioTapMCSKnownMCSIndex":                                reflect.ValueOf(layers.RadioTapMCSKnownMCSIndex),
		"RadioTapMCSKnownNESS":                                    reflect.ValueOf(layers.RadioTapMCSKnownNESS),
		"RadioTapMCSKnownNESS1":                                   reflect.ValueOf(layers.RadioTapMCSKnownNESS1),
		"RadioTapMCSKnownSTBC":                                    reflect.ValueOf(layers.RadioTapMCSKnownSTBC),
		"RadioTapPresentAMPDUStatus":                              reflect.ValueOf(layers.RadioTapPresentAMPDUStatus),
		"RadioTapPresentAntenna":                                  reflect.ValueOf(layers.RadioTapPresentAntenna),
		"RadioTapPresentChannel":                                  reflect.ValueOf(layers.RadioTapPresentChannel),
		"RadioTapPresentDBAntennaNoise":                           reflect.ValueOf(layers.RadioTapPresentDBAntennaNoise),
		"RadioTapPresentDBAntennaSignal":                          reflect.ValueOf(layers.RadioTapPresentDBAntennaSignal),
		"RadioTapPresentDBMAntennaNoise":                          reflect.ValueOf(layers.RadioTapPresentDBMAntennaNoise),
		"RadioTapPresentDBMAntennaSignal":                         reflect.ValueOf(layers.RadioTapPresentDBMAntennaSignal),
		"RadioTapPresentDBMTxPower":                               reflect.ValueOf(layers.RadioTapPresentDBMTxPower),
		"RadioTapPresentDBTxAttenuation":                          reflect.ValueOf(layers.RadioTapPresentDBTxAttenuation),
		"RadioTapPresentDataRetries":                              reflect.ValueOf(layers.RadioTapPresentDataRetries),
		"RadioTapPresentEXT":                                      reflect.ValueOf(layers.RadioTapPresentEXT),
		"RadioTapPresentFHSS":                                     reflect.ValueOf(layers.RadioTapPresentFHSS),
		"RadioTapPresentFlags":                                    reflect.ValueOf(layers.RadioTapPresentFlags),
		"RadioTapPresentLockQuality":                              reflect.ValueOf(layers.RadioTapPresentLockQuality),
		"RadioTapPresentMCS":                                      reflect.ValueOf(layers.RadioTapPresentMCS),
		"RadioTapPresentRate":                                     reflect.ValueOf(layers.RadioTapPresentRate),
		"RadioTapPresentRtsRetries":                               reflect.ValueOf(layers.RadioTapPresentRtsRetries),
		"RadioTapPresentRxFlags":                                  reflect.ValueOf(layers.RadioTapPresentRxFlags),
		"RadioTapPresentTSFT":                                     reflect.ValueOf(layers.RadioTapPresentTSFT),
		"RadioTapPresentTxAttenuation":                            reflect.ValueOf(layers.RadioTapPresentTxAttenuation),
		"RadioTapPresentTxFlags":                                  reflect.ValueOf(layers.RadioTapPresentTxFlags),
		"RadioTapPresentVHT":                                      reflect.ValueOf(layers.RadioTapPresentVHT),
		"RadioTapRxFlagsBadPlcp":                                  reflect.ValueOf(layers.RadioTapRxFlagsBadPlcp),
		"RadioTapTxFlagsCTS":                                      reflect.ValueOf(layers.RadioTapTxFlagsCTS),
		"RadioTapTxFlagsFail":                                     reflect.ValueOf(layers.RadioTapTxFlagsFail),
		"RadioTapTxFlagsNoACK":                                    reflect.ValueOf(layers.RadioTapTxFlagsNoACK),
		"RadioTapTxFlagsRTS":                                      reflect.ValueOf(layers.RadioTapTxFlagsRTS),
		"RadioTapVHTFlagsBeamformed":                              reflect.ValueOf(layers.RadioTapVHTFlagsBeamformed),
		"RadioTapVHTFlagsLDPCExtraOFDMSymbol":                     reflect.ValueOf(layers.RadioTapVHTFlagsLDPCExtraOFDMSymbol),
		"RadioTapVHTFlagsSGI":                                     reflect.ValueOf(layers.RadioTapVHTFlagsSGI),
		"RadioTapVHTFlagsSGINSYMMod":                              reflect.ValueOf(layers.RadioTapVHTFlagsSGINSYMMod),
		"RadioTapVHTFlagsSTBC":                                    reflect.ValueOf(layers.RadioTapVHTFlagsSTBC),
		"RadioTapVHTFlagsTXOPPSNotAllowed":                        reflect.ValueOf(layers.RadioTapVHTFlagsTXOPPSNotAllowed),
		"RadioTapVHTKnownBandwidth":                               reflect.ValueOf(layers.RadioTapVHTKnownBandwidth),
		"RadioTapVHTKnownBeamformed":                              reflect.ValueOf(layers.RadioTapVHTKnownBeamformed),
		"RadioTapVHTKnownGI":                                      reflect.ValueOf(layers.RadioTapVHTKnownGI),
		"RadioTapVHTKnownGroupId":                                 reflect.ValueOf(layers.RadioTapVHTKnownGroupId),
		"RadioTapVHTKnownLDPCExtraOFDMSymbol":                     reflect.ValueOf(layers.RadioTapVHTKnownLDPCExtraOFDMSymbol),
		"RadioTapVHTKnownPartialAID":                              reflect.ValueOf(layers.RadioTapVHTKnownPartialAID),
		"RadioTapVHTKnownSGINSYMDisambiguation":                   reflect.ValueOf(layers.RadioTapVHTKnownSGINSYMDisambiguation),
		"RadioTapVHTKnownSTBC":                                    reflect.ValueOf(layers.RadioTapVHTKnownSTBC),
		"RadioTapVHTKnownTXOPPSNotAllowed":                        reflect.ValueOf(layers.RadioTapVHTKnownTXOPPSNotAllowed),
		"RegisterASFLayerType":                                    reflect.ValueOf(layers.RegisterASFLayerType),
		"RegisterLCMLayerType":                                    reflect.ValueOf(layers.RegisterLCMLayerType),
		"RegisterRMCPLayerType":                                   reflect.ValueOf(layers.RegisterRMCPLayerType),
		"RegisterTCPPortLayerType":                                reflect.ValueOf(layers.RegisterTCPPortLayerType),
		"RegisterUDPPortLayerType":                                reflect.ValueOf(layers.RegisterUDPPortLayerType),
		"RouterLSAtype":                                           reflect.ValueOf(constant.MakeFromLiteral("8193", token.INT, 0)),
		"RouterLSAtypeV2":                                         reflect.ValueOf(constant.MakeFromLiteral("1", token.INT, 0)),
		"SCTPChunkTypeAbort":                                      reflect.ValueOf(layers.SCTPChunkTypeAbort),
		"SCTPChunkTypeCookieAck":                                  reflect.ValueOf(layers.SCTPChunkTypeCookieAck),
		"SCTPChunkTypeCookieEcho":                                 reflect.ValueOf(layers.SCTPChunkTypeCookieEcho),
		"SCTPChunkTypeData":                                       reflect.ValueOf(layers.SCTPChunkTypeData),
		"SCTPChunkTypeError":                                      reflect.ValueOf(layers.SCTPChunkTypeError),
		"SCTPChunkTypeHeartbeat":                                  reflect.ValueOf(layers.SCTPChunkTypeHeartbeat),
		"SCTPChunkTypeHeartbeatAck":                               reflect.ValueOf(layers.SCTPChunkTypeHeartbeatAck),
		"SCTPChunkTypeInit":                                       reflect.ValueOf(layers.SCTPChunkTypeInit),
		"SCTPChunkTypeInitAck":                                    reflect.ValueOf(layers.SCTPChunkTypeInitAck),
		"SCTPChunkTypeMetadata":                                   reflect.ValueOf(&layers.SCTPChunkTypeMetadata).Elem(),
		"SCTPChunkTypeSack":                                       reflect.ValueOf(layers.SCTPChunkTypeSack),
		"SCTPChunkTypeShutdown":                                   reflect.ValueOf(layers.SCTPChunkTypeShutdown),
		"SCTPChunkTypeShutdownAck":                                reflect.ValueOf(layers.SCTPChunkTypeShutdownAck),
		"SCTPChunkTypeShutdownComplete":                           reflect.ValueOf(layers.SCTPChunkTypeShutdownComplete),
		"SCTPPayloadASAP":                                         reflect.ValueOf(constant.MakeFromLiteral("11", token.INT, 0)),
		"SCTPPayloadBICC":                                         reflect.ValueOf(constant.MakeFromLiteral("8", token.INT, 0)),
		"SCTPPayloadDDPSegment":                                   reflect.ValueOf(constant.MakeFromLiteral("16", token.INT, 0)),
		"SCTPPayloadDDPStream":                                    reflect.ValueOf(constant.MakeFromLiteral("17", token.INT, 0)),
		"SCTPPayloadDUA":                                          reflect.ValueOf(constant.MakeFromLiteral("10", token.INT, 0)),
		"SCTPPayloadENRP":                                         reflect.ValueOf(constant.MakeFromLiteral("12", token.INT, 0)),
		"SCTPPayloadH248":                                         reflect.ValueOf(constant.MakeFromLiteral("7", token.INT, 0)),
		"SCTPPayloadH323":                                         reflect.ValueOf(constant.MakeFromLiteral("13", token.INT, 0)),
		"SCTPPayloadM2PA":                                         reflect.ValueOf(constant.MakeFromLiteral("5", token.INT, 0)),
		"SCTPPayloadM2UA":                                         reflect.ValueOf(constant.MakeFromLiteral("2", token.INT, 0)),
		"SCTPPayloadM3UA":                                         reflect.ValueOf(constant.MakeFromLiteral("3", token.INT, 0)),
		"SCTPPayloadQIPC":                                         reflect.ValueOf(constant.MakeFromLiteral("14", token.INT, 0)),
		"SCTPPayloadS1AP":                                         reflect.ValueOf(constant.MakeFromLiteral("18", token.INT, 0)),
		"SCTPPayloadSIMCO":                                        reflect.ValueOf(constant.MakeFromLiteral("15", token.INT, 0)),
		"SCTPPayloadSUA":                                          reflect.ValueOf(constant.MakeFromLiteral("4", token.INT, 0)),
		"SCTPPayloadTALI":                                         reflect.ValueOf(constant.MakeFromLiteral("9", token.INT, 0)),
		"SCTPPayloadUIA":                                          reflect.ValueOf(constant.MakeFromLiteral("1", token.INT, 0)),
		"SCTPPayloadV5UA":                                         reflect.ValueOf(constant.MakeFromLiteral("6", token.INT, 0)),
		"SCTPPortNames":                                           reflect.ValueOf(&layers.SCTPPortNames).Elem(),
		"SCTPProtocolReserved":                                    reflect.ValueOf(layers.SCTPProtocolReserved),
		"SFLowTypeAPPRESOURCESCounters":                           reflect.ValueOf(layers.SFLowTypeAPPRESOURCESCounters),
		"SFlowASSequence":                                         reflect.ValueOf(layers.SFlowASSequence),
		"SFlowASSet":                                              reflect.ValueOf(layers.SFlowASSet),
		"SFlowCS50220":                                            reflect.ValueOf(layers.SFlowCS50220),
		"SFlowCSASCII":                                            reflect.ValueOf(layers.SFlowCSASCII),
		"SFlowCSAdobeStandardEncoding":                            reflect.ValueOf(layers.SFlowCSAdobeStandardEncoding),
		"SFlowCSAmiga1251":                                        reflect.ValueOf(layers.SFlowCSAmiga1251),
		"SFlowCSBOCU1":                                            reflect.ValueOf(layers.SFlowCSBOCU1),
		"SFlowCSBRF":                                              reflect.ValueOf(layers.SFlowCSBRF),
		"SFlowCSBig5":                                             reflect.ValueOf(layers.SFlowCSBig5),
		"SFlowCSBig5HKSCS":                                        reflect.ValueOf(layers.SFlowCSBig5HKSCS),
		"SFlowCSCESU8":                                            reflect.ValueOf(layers.SFlowCSCESU8),
		"SFlowCSCP51932":                                          reflect.ValueOf(layers.SFlowCSCP51932),
		"SFlowCSDECMCS":                                           reflect.ValueOf(layers.SFlowCSDECMCS),
		"SFlowCSDKUS":                                             reflect.ValueOf(layers.SFlowCSDKUS),
		"SFlowCSEBCDICATDEA":                                      reflect.ValueOf(layers.SFlowCSEBCDICATDEA),
		"SFlowCSEBCDICCAFR":                                       reflect.ValueOf(layers.SFlowCSEBCDICCAFR),
		"SFlowCSEBCDICDKNO":                                       reflect.ValueOf(layers.SFlowCSEBCDICDKNO),
		"SFlowCSEBCDICDKNOA":                                      reflect.ValueOf(layers.SFlowCSEBCDICDKNOA),
		"SFlowCSEBCDICES":                                         reflect.ValueOf(layers.SFlowCSEBCDICES),
		"SFlowCSEBCDICESA":                                        reflect.ValueOf(layers.SFlowCSEBCDICESA),
		"SFlowCSEBCDICESS":                                        reflect.ValueOf(layers.SFlowCSEBCDICESS),
		"SFlowCSEBCDICFISE":                                       reflect.ValueOf(layers.SFlowCSEBCDICFISE),
		"SFlowCSEBCDICFISEA":                                      reflect.ValueOf(layers.SFlowCSEBCDICFISEA),
		"SFlowCSEBCDICFR":                                         reflect.ValueOf(layers.SFlowCSEBCDICFR),
		"SFlowCSEBCDICIT":                                         reflect.ValueOf(layers.SFlowCSEBCDICIT),
		"SFlowCSEBCDICPT":                                         reflect.ValueOf(layers.SFlowCSEBCDICPT),
		"SFlowCSEBCDICUK":                                         reflect.ValueOf(layers.SFlowCSEBCDICUK),
		"SFlowCSEBCDICUS":                                         reflect.ValueOf(layers.SFlowCSEBCDICUS),
		"SFlowCSEUCFixWidJapanese":                                reflect.ValueOf(layers.SFlowCSEUCFixWidJapanese),
		"SFlowCSEUCKR":                                            reflect.ValueOf(layers.SFlowCSEUCKR),
		"SFlowCSEUCPkdFmtJapanese":                                reflect.ValueOf(layers.SFlowCSEUCPkdFmtJapanese),
		"SFlowCSGB18030":                                          reflect.ValueOf(layers.SFlowCSGB18030),
		"SFlowCSGB2312":                                           reflect.ValueOf(layers.SFlowCSGB2312),
		"SFlowCSGBK":                                              reflect.ValueOf(layers.SFlowCSGBK),
		"SFlowCSHPDesktop":                                        reflect.ValueOf(layers.SFlowCSHPDesktop),
		"SFlowCSHPLegal":                                          reflect.ValueOf(layers.SFlowCSHPLegal),
		"SFlowCSHPMath8":                                          reflect.ValueOf(layers.SFlowCSHPMath8),
		"SFlowCSHPPSMath":                                         reflect.ValueOf(layers.SFlowCSHPPSMath),
		"SFlowCSHPPiFont":                                         reflect.ValueOf(layers.SFlowCSHPPiFont),
		"SFlowCSHPRoman8":                                         reflect.ValueOf(layers.SFlowCSHPRoman8),
		"SFlowCSHZGB2312":                                         reflect.ValueOf(layers.SFlowCSHZGB2312),
		"SFlowCSHalfWidthKatakana":                                reflect.ValueOf(layers.SFlowCSHalfWidthKatakana),
		"SFlowCSIBBM904":                                          reflect.ValueOf(layers.SFlowCSIBBM904),
		"SFlowCSIBM00858":                                         reflect.ValueOf(layers.SFlowCSIBM00858),
		"SFlowCSIBM00924":                                         reflect.ValueOf(layers.SFlowCSIBM00924),
		"SFlowCSIBM01140":                                         reflect.ValueOf(layers.SFlowCSIBM01140),
		"SFlowCSIBM01141":                                         reflect.ValueOf(layers.SFlowCSIBM01141),
		"SFlowCSIBM01142":                                         reflect.ValueOf(layers.SFlowCSIBM01142),
		"SFlowCSIBM01143":                                         reflect.ValueOf(layers.SFlowCSIBM01143),
		"SFlowCSIBM01144":                                         reflect.ValueOf(layers.SFlowCSIBM01144),
		"SFlowCSIBM01145":                                         reflect.ValueOf(layers.SFlowCSIBM01145),
		"SFlowCSIBM01146":                                         reflect.ValueOf(layers.SFlowCSIBM01146),
		"SFlowCSIBM01147":                                         reflect.ValueOf(layers.SFlowCSIBM01147),
		"SFlowCSIBM01148":                                         reflect.ValueOf(layers.SFlowCSIBM01148),
		"SFlowCSIBM01149":                                         reflect.ValueOf(layers.SFlowCSIBM01149),
		"SFlowCSIBM037":                                           reflect.ValueOf(layers.SFlowCSIBM037),
		"SFlowCSIBM038":                                           reflect.ValueOf(layers.SFlowCSIBM038),
		"SFlowCSIBM1026":                                          reflect.ValueOf(layers.SFlowCSIBM1026),
		"SFlowCSIBM1047":                                          reflect.ValueOf(layers.SFlowCSIBM1047),
		"SFlowCSIBM273":                                           reflect.ValueOf(layers.SFlowCSIBM273),
		"SFlowCSIBM274":                                           reflect.ValueOf(layers.SFlowCSIBM274),
		"SFlowCSIBM275":                                           reflect.ValueOf(layers.SFlowCSIBM275),
		"SFlowCSIBM277":                                           reflect.ValueOf(layers.SFlowCSIBM277),
		"SFlowCSIBM278":                                           reflect.ValueOf(layers.SFlowCSIBM278),
		"SFlowCSIBM280":                                           reflect.ValueOf(layers.SFlowCSIBM280),
		"SFlowCSIBM281":                                           reflect.ValueOf(layers.SFlowCSIBM281),
		"SFlowCSIBM284":                                           reflect.ValueOf(layers.SFlowCSIBM284),
		"SFlowCSIBM285":                                           reflect.ValueOf(layers.SFlowCSIBM285),
		"SFlowCSIBM290":                                           reflect.ValueOf(layers.SFlowCSIBM290),
		"SFlowCSIBM297":                                           reflect.ValueOf(layers.SFlowCSIBM297),
		"SFlowCSIBM420":                                           reflect.ValueOf(layers.SFlowCSIBM420),
		"SFlowCSIBM423":                                           reflect.ValueOf(layers.SFlowCSIBM423),
		"SFlowCSIBM424":                                           reflect.ValueOf(layers.SFlowCSIBM424),
		"SFlowCSIBM500":                                           reflect.ValueOf(layers.SFlowCSIBM500),
		"SFlowCSIBM851":                                           reflect.ValueOf(layers.SFlowCSIBM851),
		"SFlowCSIBM855":                                           reflect.ValueOf(layers.SFlowCSIBM855),
		"SFlowCSIBM857":                                           reflect.ValueOf(layers.SFlowCSIBM857),
		"SFlowCSIBM860":                                           reflect.ValueOf(layers.SFlowCSIBM860),
		"SFlowCSIBM861":                                           reflect.ValueOf(layers.SFlowCSIBM861),
		"SFlowCSIBM863":                                           reflect.ValueOf(layers.SFlowCSIBM863),
		"SFlowCSIBM864":                                           reflect.ValueOf(layers.SFlowCSIBM864),
		"SFlowCSIBM865":                                           reflect.ValueOf(layers.SFlowCSIBM865),
		"SFlowCSIBM866":                                           reflect.ValueOf(layers.SFlowCSIBM866),
		"SFlowCSIBM868":                                           reflect.ValueOf(layers.SFlowCSIBM868),
		"SFlowCSIBM869":                                           reflect.ValueOf(layers.SFlowCSIBM869),
		"SFlowCSIBM870":                                           reflect.ValueOf(layers.SFlowCSIBM870),
		"SFlowCSIBM871":                                           reflect.ValueOf(layers.SFlowCSIBM871),
		"SFlowCSIBM880":                                           reflect.ValueOf(layers.SFlowCSIBM880),
		"SFlowCSIBM891":                                           reflect.ValueOf(layers.SFlowCSIBM891),
		"SFlowCSIBM903":                                           reflect.ValueOf(layers.SFlowCSIBM903),
		"SFlowCSIBM905":                                           reflect.ValueOf(layers.SFlowCSIBM905),
		"SFlowCSIBM918":                                           reflect.ValueOf(layers.SFlowCSIBM918),
		"SFlowCSIBMEBCDICATDE":                                    reflect.ValueOf(layers.SFlowCSIBMEBCDICATDE),
		"SFlowCSIBMSymbols":                                       reflect.ValueOf(layers.SFlowCSIBMSymbols),
		"SFlowCSIBMThai":                                          reflect.ValueOf(layers.SFlowCSIBMThai),
		"SFlowCSINVARIANT":                                        reflect.ValueOf(layers.SFlowCSINVARIANT),
		"SFlowCSISO102T617bit":                                    reflect.ValueOf(layers.SFlowCSISO102T617bit),
		"SFlowCSISO10367Box":                                      reflect.ValueOf(layers.SFlowCSISO10367Box),
		"SFlowCSISO103T618bit":                                    reflect.ValueOf(layers.SFlowCSISO103T618bit),
		"SFlowCSISO10646UTF1":                                     reflect.ValueOf(layers.SFlowCSISO10646UTF1),
		"SFlowCSISO10Swedish":                                     reflect.ValueOf(layers.SFlowCSISO10Swedish),
		"SFlowCSISO111ECMACyrillic":                               reflect.ValueOf(layers.SFlowCSISO111ECMACyrillic),
		"SFlowCSISO115481":                                        reflect.ValueOf(layers.SFlowCSISO115481),
		"SFlowCSISO11SwedishForNames":                             reflect.ValueOf(layers.SFlowCSISO11SwedishForNames),
		"SFlowCSISO123CSAZ24341985gr":                             reflect.ValueOf(layers.SFlowCSISO123CSAZ24341985gr),
		"SFlowCSISO128T101G2":                                     reflect.ValueOf(layers.SFlowCSISO128T101G2),
		"SFlowCSISO139CSN369103":                                  reflect.ValueOf(layers.SFlowCSISO139CSN369103),
		"SFlowCSISO13JISC6220jp":                                  reflect.ValueOf(layers.SFlowCSISO13JISC6220jp),
		"SFlowCSISO141JUSIB1002":                                  reflect.ValueOf(layers.SFlowCSISO141JUSIB1002),
		"SFlowCSISO143IECP271":                                    reflect.ValueOf(layers.SFlowCSISO143IECP271),
		"SFlowCSISO146Serbian":                                    reflect.ValueOf(layers.SFlowCSISO146Serbian),
		"SFlowCSISO147Macedonian":                                 reflect.ValueOf(layers.SFlowCSISO147Macedonian),
		"SFlowCSISO14JISC6220ro":                                  reflect.ValueOf(layers.SFlowCSISO14JISC6220ro),
		"SFlowCSISO150":                                           reflect.ValueOf(layers.SFlowCSISO150),
		"SFlowCSISO151Cuba":                                       reflect.ValueOf(layers.SFlowCSISO151Cuba),
		"SFlowCSISO153GOST1976874":                                reflect.ValueOf(layers.SFlowCSISO153GOST1976874),
		"SFlowCSISO158Lap":                                        reflect.ValueOf(layers.SFlowCSISO158Lap),
		"SFlowCSISO159JISX02121990":                               reflect.ValueOf(layers.SFlowCSISO159JISX02121990),
		"SFlowCSISO15Italian":                                     reflect.ValueOf(layers.SFlowCSISO15Italian),
		"SFlowCSISO16Portuguese":                                  reflect.ValueOf(layers.SFlowCSISO16Portuguese),
		"SFlowCSISO17Spanish":                                     reflect.ValueOf(layers.SFlowCSISO17Spanish),
		"SFlowCSISO18Greek7Old":                                   reflect.ValueOf(layers.SFlowCSISO18Greek7Old),
		"SFlowCSISO19LatinGreek":                                  reflect.ValueOf(layers.SFlowCSISO19LatinGreek),
		"SFlowCSISO2022CN":                                        reflect.ValueOf(layers.SFlowCSISO2022CN),
		"SFlowCSISO2022CNEXT":                                     reflect.ValueOf(layers.SFlowCSISO2022CNEXT),
		"SFlowCSISO2022JP":                                        reflect.ValueOf(layers.SFlowCSISO2022JP),
		"SFlowCSISO2022JP2":                                       reflect.ValueOf(layers.SFlowCSISO2022JP2),
		"SFlowCSISO2022KR":                                        reflect.ValueOf(layers.SFlowCSISO2022KR),
		"SFlowCSISO2033":                                          reflect.ValueOf(layers.SFlowCSISO2033),
		"SFlowCSISO21German":                                      reflect.ValueOf(layers.SFlowCSISO21German),
		"SFlowCSISO25French":                                      reflect.ValueOf(layers.SFlowCSISO25French),
		"SFlowCSISO27LatinGreek1":                                 reflect.ValueOf(layers.SFlowCSISO27LatinGreek1),
		"SFlowCSISO2IntlRefVersion":                               reflect.ValueOf(layers.SFlowCSISO2IntlRefVersion),
		"SFlowCSISO42JISC62261978":                                reflect.ValueOf(layers.SFlowCSISO42JISC62261978),
		"SFlowCSISO47BSViewdata":                                  reflect.ValueOf(layers.SFlowCSISO47BSViewdata),
		"SFlowCSISO49INIS":                                        reflect.ValueOf(layers.SFlowCSISO49INIS),
		"SFlowCSISO4UnitedKingdom":                                reflect.ValueOf(layers.SFlowCSISO4UnitedKingdom),
		"SFlowCSISO50INIS8":                                       reflect.ValueOf(layers.SFlowCSISO50INIS8),
		"SFlowCSISO51INISCyrillic":                                reflect.ValueOf(layers.SFlowCSISO51INISCyrillic),
		"SFlowCSISO54271981":                                      reflect.ValueOf(layers.SFlowCSISO54271981),
		"SFlowCSISO5427Cyrillic":                                  reflect.ValueOf(layers.SFlowCSISO5427Cyrillic),
		"SFlowCSISO5428Greek":                                     reflect.ValueOf(layers.SFlowCSISO5428Greek),
		"SFlowCSISO57GB1988":                                      reflect.ValueOf(layers.SFlowCSISO57GB1988),
		"SFlowCSISO58GB231280":                                    reflect.ValueOf(layers.SFlowCSISO58GB231280),
		"SFlowCSISO60DanishNorwegian":                             reflect.ValueOf(layers.SFlowCSISO60DanishNorwegian),
		"SFlowCSISO61Norwegian2":                                  reflect.ValueOf(layers.SFlowCSISO61Norwegian2),
		"SFlowCSISO646Danish":                                     reflect.ValueOf(layers.SFlowCSISO646Danish),
		"SFlowCSISO646basic1983":                                  reflect.ValueOf(layers.SFlowCSISO646basic1983),
		"SFlowCSISO6937Add":                                       reflect.ValueOf(layers.SFlowCSISO6937Add),
		"SFlowCSISO69French":                                      reflect.ValueOf(layers.SFlowCSISO69French),
		"SFlowCSISO70VideotexSupp1":                               reflect.ValueOf(layers.SFlowCSISO70VideotexSupp1),
		"SFlowCSISO84Portuguese2":                                 reflect.ValueOf(layers.SFlowCSISO84Portuguese2),
		"SFlowCSISO85Spanish2":                                    reflect.ValueOf(layers.SFlowCSISO85Spanish2),
		"SFlowCSISO86Hungarian":                                   reflect.ValueOf(layers.SFlowCSISO86Hungarian),
		"SFlowCSISO87JISX0208":                                    reflect.ValueOf(layers.SFlowCSISO87JISX0208),
		"SFlowCSISO885913":                                        reflect.ValueOf(layers.SFlowCSISO885913),
		"SFlowCSISO885914":                                        reflect.ValueOf(layers.SFlowCSISO885914),
		"SFlowCSISO885915":                                        reflect.ValueOf(layers.SFlowCSISO885915),
		"SFlowCSISO885916":                                        reflect.ValueOf(layers.SFlowCSISO885916),
		"SFlowCSISO88596E":                                        reflect.ValueOf(layers.SFlowCSISO88596E),
		"SFlowCSISO88596I":                                        reflect.ValueOf(layers.SFlowCSISO88596I),
		"SFlowCSISO88598E":                                        reflect.ValueOf(layers.SFlowCSISO88598E),
		"SFlowCSISO88598I":                                        reflect.ValueOf(layers.SFlowCSISO88598I),
		"SFlowCSISO8859Supp":                                      reflect.ValueOf(layers.SFlowCSISO8859Supp),
		"SFlowCSISO88Greek7":                                      reflect.ValueOf(layers.SFlowCSISO88Greek7),
		"SFlowCSISO89ASMO449":                                     reflect.ValueOf(layers.SFlowCSISO89ASMO449),
		"SFlowCSISO90":                                            reflect.ValueOf(layers.SFlowCSISO90),
		"SFlowCSISO91JISC62291984a":                               reflect.ValueOf(layers.SFlowCSISO91JISC62291984a),
		"SFlowCSISO92JISC62991984b":                               reflect.ValueOf(layers.SFlowCSISO92JISC62991984b),
		"SFlowCSISO93JIS62291984badd":                             reflect.ValueOf(layers.SFlowCSISO93JIS62291984badd),
		"SFlowCSISO94JIS62291984hand":                             reflect.ValueOf(layers.SFlowCSISO94JIS62291984hand),
		"SFlowCSISO95JIS62291984handadd":                          reflect.ValueOf(layers.SFlowCSISO95JIS62291984handadd),
		"SFlowCSISO96JISC62291984kana":                            reflect.ValueOf(layers.SFlowCSISO96JISC62291984kana),
		"SFlowCSISO99NAPLPS":                                      reflect.ValueOf(layers.SFlowCSISO99NAPLPS),
		"SFlowCSISOLatin1":                                        reflect.ValueOf(layers.SFlowCSISOLatin1),
		"SFlowCSISOLatin2":                                        reflect.ValueOf(layers.SFlowCSISOLatin2),
		"SFlowCSISOLatin3":                                        reflect.ValueOf(layers.SFlowCSISOLatin3),
		"SFlowCSISOLatin4":                                        reflect.ValueOf(layers.SFlowCSISOLatin4),
		"SFlowCSISOLatin5":                                        reflect.ValueOf(layers.SFlowCSISOLatin5),
		"SFlowCSISOLatin6":                                        reflect.ValueOf(layers.SFlowCSISOLatin6),
		"SFlowCSISOLatinArabic":                                   reflect.ValueOf(layers.SFlowCSISOLatinArabic),
		"SFlowCSISOLatinCyrillic":                                 reflect.ValueOf(layers.SFlowCSISOLatinCyrillic),
		"SFlowCSISOLatinGreek":                                    reflect.ValueOf(layers.SFlowCSISOLatinGreek),
		"SFlowCSISOLatinHebrew":                                   reflect.ValueOf(layers.SFlowCSISOLatinHebrew),
		"SFlowCSISOTextComm":                                      reflect.ValueOf(layers.SFlowCSISOTextComm),
		"SFlowCSJISEncoding":                                      reflect.ValueOf(layers.SFlowCSJISEncoding),
		"SFlowCSKOI7switched":                                     reflect.ValueOf(layers.SFlowCSKOI7switched),
		"SFlowCSKOI8R":                                            reflect.ValueOf(layers.SFlowCSKOI8R),
		"SFlowCSKOI8U":                                            reflect.ValueOf(layers.SFlowCSKOI8U),
		"SFlowCSKSC56011987":                                      reflect.ValueOf(layers.SFlowCSKSC56011987),
		"SFlowCSKSC5636":                                          reflect.ValueOf(layers.SFlowCSKSC5636),
		"SFlowCSKZ1048":                                           reflect.ValueOf(layers.SFlowCSKZ1048),
		"SFlowCSMacintosh":                                        reflect.ValueOf(layers.SFlowCSMacintosh),
		"SFlowCSMicrosoftPublishing":                              reflect.ValueOf(layers.SFlowCSMicrosoftPublishing),
		"SFlowCSMnem":                                             reflect.ValueOf(layers.SFlowCSMnem),
		"SFlowCSMnemonic":                                         reflect.ValueOf(layers.SFlowCSMnemonic),
		"SFlowCSNATSDANO":                                         reflect.ValueOf(layers.SFlowCSNATSDANO),
		"SFlowCSNATSDANOADD":                                      reflect.ValueOf(layers.SFlowCSNATSDANOADD),
		"SFlowCSNATSSEFI":                                         reflect.ValueOf(layers.SFlowCSNATSSEFI),
		"SFlowCSNATSSEFIADD":                                      reflect.ValueOf(layers.SFlowCSNATSSEFIADD),
		"SFlowCSOSDEBCDICDF03IRV":                                 reflect.ValueOf(layers.SFlowCSOSDEBCDICDF03IRV),
		"SFlowCSOSDEBCDICDF041":                                   reflect.ValueOf(layers.SFlowCSOSDEBCDICDF041),
		"SFlowCSOSDEBCDICDF0415":                                  reflect.ValueOf(layers.SFlowCSOSDEBCDICDF0415),
		"SFlowCSPC775Baltic":                                      reflect.ValueOf(layers.SFlowCSPC775Baltic),
		"SFlowCSPC850Multilingual":                                reflect.ValueOf(layers.SFlowCSPC850Multilingual),
		"SFlowCSPC862LatinHebrew":                                 reflect.ValueOf(layers.SFlowCSPC862LatinHebrew),
		"SFlowCSPC8CodePage437":                                   reflect.ValueOf(layers.SFlowCSPC8CodePage437),
		"SFlowCSPC8DanishNorwegian":                               reflect.ValueOf(layers.SFlowCSPC8DanishNorwegian),
		"SFlowCSPC8Turkish":                                       reflect.ValueOf(layers.SFlowCSPC8Turkish),
		"SFlowCSPCp852":                                           reflect.ValueOf(layers.SFlowCSPCp852),
		"SFlowCSPTCP154":                                          reflect.ValueOf(layers.SFlowCSPTCP154),
		"SFlowCSSCSU":                                             reflect.ValueOf(layers.SFlowCSSCSU),
		"SFlowCSShiftJIS":                                         reflect.ValueOf(layers.SFlowCSShiftJIS),
		"SFlowCSTIS620":                                           reflect.ValueOf(layers.SFlowCSTIS620),
		"SFlowCSTSCII":                                            reflect.ValueOf(layers.SFlowCSTSCII),
		"SFlowCSUCS4":                                             reflect.ValueOf(layers.SFlowCSUCS4),
		"SFlowCSUSDK":                                             reflect.ValueOf(layers.SFlowCSUSDK),
		"SFlowCSUTF16":                                            reflect.ValueOf(layers.SFlowCSUTF16),
		"SFlowCSUTF16BE":                                          reflect.ValueOf(layers.SFlowCSUTF16BE),
		"SFlowCSUTF16LE":                                          reflect.ValueOf(layers.SFlowCSUTF16LE),
		"SFlowCSUTF32":                                            reflect.ValueOf(layers.SFlowCSUTF32),
		"SFlowCSUTF32BE":                                          reflect.ValueOf(layers.SFlowCSUTF32BE),
		"SFlowCSUTF32LE":                                          reflect.ValueOf(layers.SFlowCSUTF32LE),
		"SFlowCSUTF7":                                             reflect.ValueOf(layers.SFlowCSUTF7),
		"SFlowCSUTF8":                                             reflect.ValueOf(layers.SFlowCSUTF8),
		"SFlowCSUnicode":                                          reflect.ValueOf(layers.SFlowCSUnicode),
		"SFlowCSUnicode11":                                        reflect.ValueOf(layers.SFlowCSUnicode11),
		"SFlowCSUnicode11UTF7":                                    reflect.ValueOf(layers.SFlowCSUnicode11UTF7),
		"SFlowCSUnicodeASCII":                                     reflect.ValueOf(layers.SFlowCSUnicodeASCII),
		"SFlowCSUnicodeIBM1261":                                   reflect.ValueOf(layers.SFlowCSUnicodeIBM1261),
		"SFlowCSUnicodeIBM1264":                                   reflect.ValueOf(layers.SFlowCSUnicodeIBM1264),
		"SFlowCSUnicodeIBM1265":                                   reflect.ValueOf(layers.SFlowCSUnicodeIBM1265),
		"SFlowCSUnicodeIBM1268":                                   reflect.ValueOf(layers.SFlowCSUnicodeIBM1268),
		"SFlowCSUnicodeIBM1276":                                   reflect.ValueOf(layers.SFlowCSUnicodeIBM1276),
		"SFlowCSUnicodeJapanese":                                  reflect.ValueOf(layers.SFlowCSUnicodeJapanese),
		"SFlowCSUnicodeLatin1":                                    reflect.ValueOf(layers.SFlowCSUnicodeLatin1),
		"SFlowCSUnknown8BiT":                                      reflect.ValueOf(layers.SFlowCSUnknown8BiT),
		"SFlowCSVIQR":                                             reflect.ValueOf(layers.SFlowCSVIQR),
		"SFlowCSVISCII":                                           reflect.ValueOf(layers.SFlowCSVISCII),
		"SFlowCSVenturaInternational":                             reflect.ValueOf(layers.SFlowCSVenturaInternational),
		"SFlowCSVenturaMath":                                      reflect.ValueOf(layers.SFlowCSVenturaMath),
		"SFlowCSVenturaUS":                                        reflect.ValueOf(layers.SFlowCSVenturaUS),
		"SFlowCSWindows1250":                                      reflect.ValueOf(layers.SFlowCSWindows1250),
		"SFlowCSWindows1251":                                      reflect.ValueOf(layers.SFlowCSWindows1251),
		"SFlowCSWindows1252":                                      reflect.ValueOf(layers.SFlowCSWindows1252),
		"SFlowCSWindows1253":                                      reflect.ValueOf(layers.SFlowCSWindows1253),
		"SFlowCSWindows1254":                                      reflect.ValueOf(layers.SFlowCSWindows1254),
		"SFlowCSWindows1255":                                      reflect.ValueOf(layers.SFlowCSWindows1255),
		"SFlowCSWindows1256":                                      reflect.ValueOf(layers.SFlowCSWindows1256),
		"SFlowCSWindows1257":                                      reflect.ValueOf(layers.SFlowCSWindows1257),
		"SFlowCSWindows1258":                                      reflect.ValueOf(layers.SFlowCSWindows1258),
		"SFlowCSWindows30Latin1":                                  reflect.ValueOf(layers.SFlowCSWindows30Latin1),
		"SFlowCSWindows31J":                                       reflect.ValueOf(layers.SFlowCSWindows31J),
		"SFlowCSWindows31Latin1":                                  reflect.ValueOf(layers.SFlowCSWindows31Latin1),
		"SFlowCSWindows31Latin2":                                  reflect.ValueOf(layers.SFlowCSWindows31Latin2),
		"SFlowCSWindows31Latin5":                                  reflect.ValueOf(layers.SFlowCSWindows31Latin5),
		"SFlowCSWindows874":                                       reflect.ValueOf(layers.SFlowCSWindows874),
		"SFlowCSa71":                                              reflect.ValueOf(layers.SFlowCSa71),
		"SFlowCSa72":                                              reflect.ValueOf(layers.SFlowCSa72),
		"SFlowCSreserved":                                         reflect.ValueOf(layers.SFlowCSreserved),
		"SFlowCSunknown":                                          reflect.ValueOf(layers.SFlowCSunknown),
		"SFlowIPv4":                                               reflect.ValueOf(layers.SFlowIPv4),
		"SFlowIPv6":                                               reflect.ValueOf(layers.SFlowIPv6),
		"SFlowProtoAAL5":                                          reflect.ValueOf(layers.SFlowProtoAAL5),
		"SFlowProtoAAL5_IP":                                       reflect.ValueOf(layers.SFlowProtoAAL5_IP),
		"SFlowProtoEthernet":                                      reflect.ValueOf(layers.SFlowProtoEthernet),
		"SFlowProtoFDDI":                                          reflect.ValueOf(layers.SFlowProtoFDDI),
		"SFlowProtoFrameRelay":                                    reflect.ValueOf(layers.SFlowProtoFrameRelay),
		"SFlowProtoIPv4":                                          reflect.ValueOf(layers.SFlowProtoIPv4),
		"SFlowProtoIPv6":                                          reflect.ValueOf(layers.SFlowProtoIPv6),
		"SFlowProtoISO88024":                                      reflect.ValueOf(layers.SFlowProtoISO88024),
		"SFlowProtoISO88025":                                      reflect.ValueOf(layers.SFlowProtoISO88025),
		"SFlowProtoMPLS":                                          reflect.ValueOf(layers.SFlowProtoMPLS),
		"SFlowProtoPOS":                                           reflect.ValueOf(layers.SFlowProtoPOS),
		"SFlowProtoPPP":                                           reflect.ValueOf(layers.SFlowProtoPPP),
		"SFlowProtoSMDS":                                          reflect.ValueOf(layers.SFlowProtoSMDS),
		"SFlowProtoX25":                                           reflect.ValueOf(layers.SFlowProtoX25),
		"SFlowStandard":                                           reflect.ValueOf(layers.SFlowStandard),
		"SFlowType100BaseVGInterfaceCounters":                     reflect.ValueOf(layers.SFlowType100BaseVGInterfaceCounters),
		"SFlowTypeCounterSample":                                  reflect.ValueOf(layers.SFlowTypeCounterSample),
		"SFlowTypeEthernetFrameFlow":                              reflect.ValueOf(layers.SFlowTypeEthernetFrameFlow),
		"SFlowTypeEthernetInterfaceCounters":                      reflect.ValueOf(layers.SFlowTypeEthernetInterfaceCounters),
		"SFlowTypeExpandedCounterSample":                          reflect.ValueOf(layers.SFlowTypeExpandedCounterSample),
		"SFlowTypeExpandedFlowSample":                             reflect.ValueOf(layers.SFlowTypeExpandedFlowSample),
		"SFlowTypeExtendedDecapsulateEgressFlow":                  reflect.ValueOf(layers.SFlowTypeExtendedDecapsulateEgressFlow),
		"SFlowTypeExtendedDecapsulateIngressFlow":                 reflect.ValueOf(layers.SFlowTypeExtendedDecapsulateIngressFlow),
		"SFlowTypeExtendedGatewayFlow":                            reflect.ValueOf(layers.SFlowTypeExtendedGatewayFlow),
		"SFlowTypeExtendedIpv4TunnelEgressFlow":                   reflect.ValueOf(layers.SFlowTypeExtendedIpv4TunnelEgressFlow),
		"SFlowTypeExtendedIpv4TunnelIngressFlow":                  reflect.ValueOf(layers.SFlowTypeExtendedIpv4TunnelIngressFlow),
		"SFlowTypeExtendedIpv6TunnelEgressFlow":                   reflect.ValueOf(layers.SFlowTypeExtendedIpv6TunnelEgressFlow),
		"SFlowTypeExtendedIpv6TunnelIngressFlow":                  reflect.ValueOf(layers.SFlowTypeExtendedIpv6TunnelIngressFlow),
		"SFlowTypeExtendedMlpsFecFlow":                            reflect.ValueOf(layers.SFlowTypeExtendedMlpsFecFlow),
		"SFlowTypeExtendedMlpsFlow":                               reflect.ValueOf(layers.SFlowTypeExtendedMlpsFlow),
		"SFlowTypeExtendedMlpsLvpFecFlow":                         reflect.ValueOf(layers.SFlowTypeExtendedMlpsLvpFecFlow),
		"SFlowTypeExtendedMlpsTunnelFlow":                         reflect.ValueOf(layers.SFlowTypeExtendedMlpsTunnelFlow),
		"SFlowTypeExtendedMlpsVcFlow":                             reflect.ValueOf(layers.SFlowTypeExtendedMlpsVcFlow),
		"SFlowTypeExtendedNatFlow":                                reflect.ValueOf(layers.SFlowTypeExtendedNatFlow),
		"SFlowTypeExtendedRouterFlow":                             reflect.ValueOf(layers.SFlowTypeExtendedRouterFlow),
		"SFlowTypeExtendedSwitchFlow":                             reflect.ValueOf(layers.SFlowTypeExtendedSwitchFlow),
		"SFlowTypeExtendedUrlFlow":                                reflect.ValueOf(layers.SFlowTypeExtendedUrlFlow),
		"SFlowTypeExtendedUserFlow":                               reflect.ValueOf(layers.SFlowTypeExtendedUserFlow),
		"SFlowTypeExtendedVlanFlow":                               reflect.ValueOf(layers.SFlowTypeExtendedVlanFlow),
		"SFlowTypeExtendedVniEgressFlow":                          reflect.ValueOf(layers.SFlowTypeExtendedVniEgressFlow),
		"SFlowTypeExtendedVniIngressFlow":                         reflect.ValueOf(layers.SFlowTypeExtendedVniIngressFlow),
		"SFlowTypeFlowSample":                                     reflect.ValueOf(layers.SFlowTypeFlowSample),
		"SFlowTypeGenericInterfaceCounters":                       reflect.ValueOf(layers.SFlowTypeGenericInterfaceCounters),
		"SFlowTypeIpv4Flow":                                       reflect.ValueOf(layers.SFlowTypeIpv4Flow),
		"SFlowTypeIpv6Flow":                                       reflect.ValueOf(layers.SFlowTypeIpv6Flow),
		"SFlowTypeLACPCounters":                                   reflect.ValueOf(layers.SFlowTypeLACPCounters),
		"SFlowTypeMultipleDestinations":                           reflect.ValueOf(layers.SFlowTypeMultipleDestinations),
		"SFlowTypeOVSDPCounters":                                  reflect.ValueOf(layers.SFlowTypeOVSDPCounters),
		"SFlowTypeOpenflowPortCounters":                           reflect.ValueOf(layers.SFlowTypeOpenflowPortCounters),
		"SFlowTypePORTNAMECounters":                               reflect.ValueOf(layers.SFlowTypePORTNAMECounters),
		"SFlowTypePacketDiscarded":                                reflect.ValueOf(layers.SFlowTypePacketDiscarded),
		"SFlowTypeProcessorCounters":                              reflect.ValueOf(layers.SFlowTypeProcessorCounters),
		"SFlowTypeRawPacketFlow":                                  reflect.ValueOf(layers.SFlowTypeRawPacketFlow),
		"SFlowTypeSingleInterface":                                reflect.ValueOf(layers.SFlowTypeSingleInterface),
		"SFlowTypeTokenRingInterfaceCounters":                     reflect.ValueOf(layers.SFlowTypeTokenRingInterfaceCounters),
		"SFlowTypeVLANCounters":                                   reflect.ValueOf(layers.SFlowTypeVLANCounters),
		"SFlowURLdst":                                             reflect.ValueOf(layers.SFlowURLdst),
		"SFlowURLsrc":                                             reflect.ValueOf(layers.SFlowURLsrc),
		"SIPMethodAck":                                            reflect.ValueOf(layers.SIPMethodAck),
		"SIPMethodBye":                                            reflect.ValueOf(layers.SIPMethodBye),
		"SIPMethodCancel":                                         reflect.ValueOf(layers.SIPMethodCancel),
		"SIPMethodInfo":                                           reflect.ValueOf(layers.SIPMethodInfo),
		"SIPMethodInvite":                                         reflect.ValueOf(layers.SIPMethodInvite),
		"SIPMethodMessage":                                        reflect.ValueOf(layers.SIPMethodMessage),
		"SIPMethodNotify":                                         reflect.ValueOf(layers.SIPMethodNotify),
		"SIPMethodOptions":                                        reflect.ValueOf(layers.SIPMethodOptions),
		"SIPMethodPing":                                           reflect.ValueOf(layers.SIPMethodPing),
		"SIPMethodPrack":                                          reflect.ValueOf(layers.SIPMethodPrack),
		"SIPMethodPublish":                                        reflect.ValueOf(layers.SIPMethodPublish),
		"SIPMethodRefer":                                          reflect.ValueOf(layers.SIPMethodRefer),
		"SIPMethodRegister":                                       reflect.ValueOf(layers.SIPMethodRegister),
		"SIPMethodSubscribe":                                      reflect.ValueOf(layers.SIPMethodSubscribe),
		"SIPMethodUpdate":                                         reflect.ValueOf(layers.SIPMethodUpdate),
		"SIPVersion1":                                             reflect.ValueOf(layers.SIPVersion1),
		"SIPVersion2":                                             reflect.ValueOf(layers.SIPVersion2),
		"SummaryLSAASBRtypeV2":                                    reflect.ValueOf(constant.MakeFromLiteral("4", token.INT, 0)),
		"SummaryLSANetworktypeV2":                                 reflect.ValueOf(constant.MakeFromLiteral("3", token.INT, 0)),
		"SupportedLCMFingerprints":                                reflect.ValueOf(layers.SupportedLCMFingerprints),
		"TCPOptionKindAltChecksum":                                reflect.ValueOf(constant.MakeFromLiteral("14", token.INT, 0)),
		"TCPOptionKindAltChecksumData":                            reflect.ValueOf(constant.MakeFromLiteral("15", token.INT, 0)),
		"TCPOptionKindCC":                                         reflect.ValueOf(constant.MakeFromLiteral("11", token.INT, 0)),
		"TCPOptionKindCCEcho":                                     reflect.ValueOf(constant.MakeFromLiteral("13", token.INT, 0)),
		"TCPOptionKindCCNew":                                      reflect.ValueOf(constant.MakeFromLiteral("12", token.INT, 0)),
		"TCPOptionKindEcho":                                       reflect.ValueOf(constant.MakeFromLiteral("6", token.INT, 0)),
		"TCPOptionKindEchoReply":                                  reflect.ValueOf(constant.MakeFromLiteral("7", token.INT, 0)),
		"TCPOptionKindEndList":                                    reflect.ValueOf(constant.MakeFromLiteral("0", token.INT, 0)),
		"TCPOptionKindMSS":                                        reflect.ValueOf(constant.MakeFromLiteral("2", token.INT, 0)),
		"TCPOptionKindNop":                                        reflect.ValueOf(constant.MakeFromLiteral("1", token.INT, 0)),
		"TCPOptionKindPartialOrderConnectionPermitted":            reflect.ValueOf(constant.MakeFromLiteral("9", token.INT, 0)),
		"TCPOptionKindPartialOrderServiceProfile":                 reflect.ValueOf(constant.MakeFromLiteral("10", token.INT, 0)),
		"TCPOptionKindSACK":                                       reflect.ValueOf(constant.MakeFromLiteral("5", token.INT, 0)),
		"TCPOptionKindSACKPermitted":                              reflect.ValueOf(constant.MakeFromLiteral("4", token.INT, 0)),
		"TCPOptionKindTimestamps":                                 reflect.ValueOf(constant.MakeFromLiteral("8", token.INT, 0)),
		"TCPOptionKindWindowScale":                                reflect.ValueOf(constant.MakeFromLiteral("3", token.INT, 0)),
		"TCPPortNames":                                            reflect.ValueOf(&layers.TCPPortNames).Elem(),
		"TLSAlert":                                                reflect.ValueOf(layers.TLSAlert),
		"TLSAlertAccessDenied":                                    reflect.ValueOf(layers.TLSAlertAccessDenied),
		"TLSAlertBadCertificate":                                  reflect.ValueOf(layers.TLSAlertBadCertificate),
		"TLSAlertBadRecordMac":                                    reflect.ValueOf(layers.TLSAlertBadRecordMac),
		"TLSAlertCertificateExpired":                              reflect.ValueOf(layers.TLSAlertCertificateExpired),
		"TLSAlertCertificateRevoked":                              reflect.ValueOf(layers.TLSAlertCertificateRevoked),
		"TLSAlertCertificateUnknown":                              reflect.ValueOf(layers.TLSAlertCertificateUnknown),
		"TLSAlertCloseNotify":                                     reflect.ValueOf(layers.TLSAlertCloseNotify),
		"TLSAlertDecodeError":                                     reflect.ValueOf(layers.TLSAlertDecodeError),
		"TLSAlertDecompressionFailure":                            reflect.ValueOf(layers.TLSAlertDecompressionFailure),
		"TLSAlertDecryptError":                                    reflect.ValueOf(layers.TLSAlertDecryptError),
		"TLSAlertDecryptionFailedRESERVED":                        reflect.ValueOf(layers.TLSAlertDecryptionFailedRESERVED),
		"TLSAlertExportRestrictionRESERVED":                       reflect.ValueOf(layers.TLSAlertExportRestrictionRESERVED),
		"TLSAlertFatal":                                           reflect.ValueOf(layers.TLSAlertFatal),
		"TLSAlertHandshakeFailure":                                reflect.ValueOf(layers.TLSAlertHandshakeFailure),
		"TLSAlertIllegalParameter":                                reflect.ValueOf(layers.TLSAlertIllegalParameter),
		"TLSAlertInsufficientSecurity":                            reflect.ValueOf(layers.TLSAlertInsufficientSecurity),
		"TLSAlertInternalError":                                   reflect.ValueOf(layers.TLSAlertInternalError),
		"TLSAlertNoCertificateRESERVED":                           reflect.ValueOf(layers.TLSAlertNoCertificateRESERVED),
		"TLSAlertNoRenegotiation":                                 reflect.ValueOf(layers.TLSAlertNoRenegotiation),
		"TLSAlertProtocolVersion":                                 reflect.ValueOf(layers.TLSAlertProtocolVersion),
		"TLSAlertRecordOverflow":                                  reflect.ValueOf(layers.TLSAlertRecordOverflow),
		"TLSAlertUnexpectedMessage":                               reflect.ValueOf(layers.TLSAlertUnexpectedMessage),
		"TLSAlertUnknownCa":                                       reflect.ValueOf(layers.TLSAlertUnknownCa),
		"TLSAlertUnknownDescription":                              reflect.ValueOf(layers.TLSAlertUnknownDescription),
		"TLSAlertUnknownLevel":                                    reflect.ValueOf(layers.TLSAlertUnknownLevel),
		"TLSAlertUnsupportedCertificate":                          reflect.ValueOf(layers.TLSAlertUnsupportedCertificate),
		"TLSAlertUnsupportedExtension":                            reflect.ValueOf(layers.TLSAlertUnsupportedExtension),
		"TLSAlertUserCanceled":                                    reflect.ValueOf(layers.TLSAlertUserCanceled),
		"TLSAlertWarning":                                         reflect.ValueOf(layers.TLSAlertWarning),
		"TLSApplicationData":                                      reflect.ValueOf(layers.TLSApplicationData),
		"TLSChangeCipherSpec":                                     reflect.ValueOf(layers.TLSChangeCipherSpec),
		"TLSChangecipherspecMessage":                              reflect.ValueOf(layers.TLSChangecipherspecMessage),
		"TLSChangecipherspecUnknown":                              reflect.ValueOf(layers.TLSChangecipherspecUnknown),
		"TLSHandshake":                                            reflect.ValueOf(layers.TLSHandshake),
		"TLSUnknown":                                              reflect.ValueOf(layers.TLSUnknown),
		"UDPLitePortNames":                                        reflect.ValueOf(&layers.UDPLitePortNames).Elem(),
		"UDPPortNames":                                            reflect.ValueOf(&layers.UDPPortNames).Elem(),
		"USBDirectionTypeIn":                                      reflect.ValueOf(layers.USBDirectionTypeIn),
		"USBDirectionTypeOut":                                     reflect.ValueOf(layers.USBDirectionTypeOut),
		"USBDirectionTypeUnknown":                                 reflect.ValueOf(layers.USBDirectionTypeUnknown),
		"USBEventTypeComplete":                                    reflect.ValueOf(layers.USBEventTypeComplete),
		"USBEventTypeError":                                       reflect.ValueOf(layers.USBEventTypeError),
		"USBEventTypeSubmit":                                      reflect.ValueOf(layers.USBEventTypeSubmit),
		"USBRequestBlockSetupRequestClearFeature":                 reflect.ValueOf(layers.USBRequestBlockSetupRequestClearFeature),
		"USBRequestBlockSetupRequestGetConfiguration":             reflect.ValueOf(layers.USBRequestBlockSetupRequestGetConfiguration),
		"USBRequestBlockSetupRequestGetDescriptor":                reflect.ValueOf(layers.USBRequestBlockSetupRequestGetDescriptor),
		"USBRequestBlockSetupRequestGetStatus":                    reflect.ValueOf(layers.USBRequestBlockSetupRequestGetStatus),
		"USBRequestBlockSetupRequestSetAddress":                   reflect.ValueOf(layers.USBRequestBlockSetupRequestSetAddress),
		"USBRequestBlockSetupRequestSetConfiguration":             reflect.ValueOf(layers.USBRequestBlockSetupRequestSetConfiguration),
		"USBRequestBlockSetupRequestSetDescriptor":                reflect.ValueOf(layers.USBRequestBlockSetupRequestSetDescriptor),
		"USBRequestBlockSetupRequestSetFeature":                   reflect.ValueOf(layers.USBRequestBlockSetupRequestSetFeature),
		"USBRequestBlockSetupRequestSetIdle":                      reflect.ValueOf(layers.USBRequestBlockSetupRequestSetIdle),
		"USBTransportTypeBulk":                                    reflect.ValueOf(layers.USBTransportTypeBulk),
		"USBTransportTypeControl":                                 reflect.ValueOf(layers.USBTransportTypeControl),
		"USBTransportTypeInterrupt":                               reflect.ValueOf(layers.USBTransportTypeInterrupt),
		"USBTransportTypeIsochronous":                             reflect.ValueOf(layers.USBTransportTypeIsochronous),
		"USBTransportTypeMetadata":                                reflect.ValueOf(&layers.USBTransportTypeMetadata).Elem(),
		"USBTransportTypeTransferIn":                              reflect.ValueOf(layers.USBTransportTypeTransferIn),
		"VRRPv2Advertisement":                                     reflect.ValueOf(layers.VRRPv2Advertisement),
		"VRRPv2AuthNoAuth":                                        reflect.ValueOf(layers.VRRPv2AuthNoAuth),
		"VRRPv2AuthReserved1":                                     reflect.ValueOf(layers.VRRPv2AuthReserved1),
		"VRRPv2AuthReserved2":                                     reflect.ValueOf(layers.VRRPv2AuthReserved2),

		// type definitions
		"ARP":                                   reflect.ValueOf((*layers.ARP)(nil)),
		"ASExternalLSA":                         reflect.ValueOf((*layers.ASExternalLSA)(nil)),
		"ASExternalLSAV2":                       reflect.ValueOf((*layers.ASExternalLSAV2)(nil)),
		"ASF":                                   reflect.ValueOf((*layers.ASF)(nil)),
		"ASFDataIdentifier":                     reflect.ValueOf((*layers.ASFDataIdentifier)(nil)),
		"ASFEntity":                             reflect.ValueOf((*layers.ASFEntity)(nil)),
		"ASFInteraction":                        reflect.ValueOf((*layers.ASFInteraction)(nil)),
		"ASFPresencePong":                       reflect.ValueOf((*layers.ASFPresencePong)(nil)),
		"BFD":                                   reflect.ValueOf((*layers.BFD)(nil)),
		"BFDAuthData":                           reflect.ValueOf((*layers.BFDAuthData)(nil)),
		"BFDAuthHeader":                         reflect.ValueOf((*layers.BFDAuthHeader)(nil)),
		"BFDAuthKeyID":                          reflect.ValueOf((*layers.BFDAuthKeyID)(nil)),
		"BFDAuthSequenceNumber":                 reflect.ValueOf((*layers.BFDAuthSequenceNumber)(nil)),
		"BFDAuthType":                           reflect.ValueOf((*layers.BFDAuthType)(nil)),
		"BFDDetectMultiplier":                   reflect.ValueOf((*layers.BFDDetectMultiplier)(nil)),
		"BFDDiagnostic":                         reflect.ValueOf((*layers.BFDDiagnostic)(nil)),
		"BFDDiscriminator":                      reflect.ValueOf((*layers.BFDDiscriminator)(nil)),
		"BFDState":                              reflect.ValueOf((*layers.BFDState)(nil)),
		"BFDTimeInterval":                       reflect.ValueOf((*layers.BFDTimeInterval)(nil)),
		"BFDVersion":                            reflect.ValueOf((*layers.BFDVersion)(nil)),
		"BaseLayer":                             reflect.ValueOf((*layers.BaseLayer)(nil)),
		"CDPAddressType":                        reflect.ValueOf((*layers.CDPAddressType)(nil)),
		"CDPCapabilities":                       reflect.ValueOf((*layers.CDPCapabilities)(nil)),
		"CDPCapability":                         reflect.ValueOf((*layers.CDPCapability)(nil)),
		"CDPEnergyWise":                         reflect.ValueOf((*layers.CDPEnergyWise)(nil)),
		"CDPEnergyWiseSubtype":                  reflect.ValueOf((*layers.CDPEnergyWiseSubtype)(nil)),
		"CDPHello":                              reflect.ValueOf((*layers.CDPHello)(nil)),
		"CDPLocation":                           reflect.ValueOf((*layers.CDPLocation)(nil)),
		"CDPPowerDialogue":                      reflect.ValueOf((*layers.CDPPowerDialogue)(nil)),
		"CDPSparePairPoE":                       reflect.ValueOf((*layers.CDPSparePairPoE)(nil)),
		"CDPTLVType":                            reflect.ValueOf((*layers.CDPTLVType)(nil)),
		"CDPVLANDialogue":                       reflect.ValueOf((*layers.CDPVLANDialogue)(nil)),
		"CiscoDiscovery":                        reflect.ValueOf((*layers.CiscoDiscovery)(nil)),
		"CiscoDiscoveryInfo":                    reflect.ValueOf((*layers.CiscoDiscoveryInfo)(nil)),
		"CiscoDiscoveryValue":                   reflect.ValueOf((*layers.CiscoDiscoveryValue)(nil)),
		"DHCPMsgType":                           reflect.ValueOf((*layers.DHCPMsgType)(nil)),
		"DHCPOp":                                reflect.ValueOf((*layers.DHCPOp)(nil)),
		"DHCPOpt":                               reflect.ValueOf((*layers.DHCPOpt)(nil)),
		"DHCPOption":                            reflect.ValueOf((*layers.DHCPOption)(nil)),
		"DHCPOptions":                           reflect.ValueOf((*layers.DHCPOptions)(nil)),
		"DHCPv4":                                reflect.ValueOf((*layers.DHCPv4)(nil)),
		"DHCPv4Error":                           reflect.ValueOf((*layers.DHCPv4Error)(nil)),
		"DHCPv6":                                reflect.ValueOf((*layers.DHCPv6)(nil)),
		"DHCPv6DUID":                            reflect.ValueOf((*layers.DHCPv6DUID)(nil)),
		"DHCPv6DUIDType":                        reflect.ValueOf((*layers.DHCPv6DUIDType)(nil)),
		"DHCPv6MsgType":                         reflect.ValueOf((*layers.DHCPv6MsgType)(nil)),
		"DHCPv6Opt":                             reflect.ValueOf((*layers.DHCPv6Opt)(nil)),
		"DHCPv6Option":                          reflect.ValueOf((*layers.DHCPv6Option)(nil)),
		"DHCPv6Options":                         reflect.ValueOf((*layers.DHCPv6Options)(nil)),
		"DHCPv6StatusCode":                      reflect.ValueOf((*layers.DHCPv6StatusCode)(nil)),
		"DNS":                                   reflect.ValueOf((*layers.DNS)(nil)),
		"DNSClass":                              reflect.ValueOf((*layers.DNSClass)(nil)),
		"DNSMX":                                 reflect.ValueOf((*layers.DNSMX)(nil)),
		"DNSOPT":                                reflect.ValueOf((*layers.DNSOPT)(nil)),
		"DNSOpCode":                             reflect.ValueOf((*layers.DNSOpCode)(nil)),
		"DNSOptionCode":                         reflect.ValueOf((*layers.DNSOptionCode)(nil)),
		"DNSQuestion":                           reflect.ValueOf((*layers.DNSQuestion)(nil)),
		"DNSResourceRecord":                     reflect.ValueOf((*layers.DNSResourceRecord)(nil)),
		"DNSResponseCode":                       reflect.ValueOf((*layers.DNSResponseCode)(nil)),
		"DNSSOA":                                reflect.ValueOf((*layers.DNSSOA)(nil)),
		"DNSSRV":                                reflect.ValueOf((*layers.DNSSRV)(nil)),
		"DNSType":                               reflect.ValueOf((*layers.DNSType)(nil)),
		"DNSURI":                                reflect.ValueOf((*layers.DNSURI)(nil)),
		"DbDescPkg":                             reflect.ValueOf((*layers.DbDescPkg)(nil)),
		"Dot11":                                 reflect.ValueOf((*layers.Dot11)(nil)),
		"Dot11ASEL":                             reflect.ValueOf((*layers.Dot11ASEL)(nil)),
		"Dot11AckPolicy":                        reflect.ValueOf((*layers.Dot11AckPolicy)(nil)),
		"Dot11Algorithm":                        reflect.ValueOf((*layers.Dot11Algorithm)(nil)),
		"Dot11CodingType":                       reflect.ValueOf((*layers.Dot11CodingType)(nil)),
		"Dot11Ctrl":                             reflect.ValueOf((*layers.Dot11Ctrl)(nil)),
		"Dot11CtrlAck":                          reflect.ValueOf((*layers.Dot11CtrlAck)(nil)),
		"Dot11CtrlBlockAck":                     reflect.ValueOf((*layers.Dot11CtrlBlockAck)(nil)),
		"Dot11CtrlBlockAckReq":                  reflect.ValueOf((*layers.Dot11CtrlBlockAckReq)(nil)),
		"Dot11CtrlCFEnd":                        reflect.ValueOf((*layers.Dot11CtrlCFEnd)(nil)),
		"Dot11CtrlCFEndAck":                     reflect.ValueOf((*layers.Dot11CtrlCFEndAck)(nil)),
		"Dot11CtrlCTS":                          reflect.ValueOf((*layers.Dot11CtrlCTS)(nil)),
		"Dot11CtrlPowersavePoll":                reflect.ValueOf((*layers.Dot11CtrlPowersavePoll)(nil)),
		"Dot11CtrlRTS":                          reflect.ValueOf((*layers.Dot11CtrlRTS)(nil)),
		"Dot11Data":                             reflect.ValueOf((*layers.Dot11Data)(nil)),
		"Dot11DataCFAck":                        reflect.ValueOf((*layers.Dot11DataCFAck)(nil)),
		"Dot11DataCFAckNoData":                  reflect.ValueOf((*layers.Dot11DataCFAckNoData)(nil)),
		"Dot11DataCFAckPoll":                    reflect.ValueOf((*layers.Dot11DataCFAckPoll)(nil)),
		"Dot11DataCFAckPollNoData":              reflect.ValueOf((*layers.Dot11DataCFAckPollNoData)(nil)),
		"Dot11DataCFPoll":                       reflect.ValueOf((*layers.Dot11DataCFPoll)(nil)),
		"Dot11DataCFPollNoData":                 reflect.ValueOf((*layers.Dot11DataCFPollNoData)(nil)),
		"Dot11DataNull":                         reflect.ValueOf((*layers.Dot11DataNull)(nil)),
		"Dot11DataQOS":                          reflect.ValueOf((*layers.Dot11DataQOS)(nil)),
		"Dot11DataQOSCFAckPollNoData":           reflect.ValueOf((*layers.Dot11DataQOSCFAckPollNoData)(nil)),
		"Dot11DataQOSCFPollNoData":              reflect.ValueOf((*layers.Dot11DataQOSCFPollNoData)(nil)),
		"Dot11DataQOSData":                      reflect.ValueOf((*layers.Dot11DataQOSData)(nil)),
		"Dot11DataQOSDataCFAck":                 reflect.ValueOf((*layers.Dot11DataQOSDataCFAck)(nil)),
		"Dot11DataQOSDataCFAckPoll":             reflect.ValueOf((*layers.Dot11DataQOSDataCFAckPoll)(nil)),
		"Dot11DataQOSDataCFPoll":                reflect.ValueOf((*layers.Dot11DataQOSDataCFPoll)(nil)),
		"Dot11DataQOSNull":                      reflect.ValueOf((*layers.Dot11DataQOSNull)(nil)),
		"Dot11Flags":                            reflect.ValueOf((*layers.Dot11Flags)(nil)),
		"Dot11HTControl":                        reflect.ValueOf((*layers.Dot11HTControl)(nil)),
		"Dot11HTControlHT":                      reflect.ValueOf((*layers.Dot11HTControlHT)(nil)),
		"Dot11HTControlMFB":                     reflect.ValueOf((*layers.Dot11HTControlMFB)(nil)),
		"Dot11HTControlVHT":                     reflect.ValueOf((*layers.Dot11HTControlVHT)(nil)),
		"Dot11InformationElement":               reflect.ValueOf((*layers.Dot11InformationElement)(nil)),
		"Dot11InformationElementID":             reflect.ValueOf((*layers.Dot11InformationElementID)(nil)),
		"Dot11LinkAdapationControl":             reflect.ValueOf((*layers.Dot11LinkAdapationControl)(nil)),
		"Dot11Mgmt":                             reflect.ValueOf((*layers.Dot11Mgmt)(nil)),
		"Dot11MgmtATIM":                         reflect.ValueOf((*layers.Dot11MgmtATIM)(nil)),
		"Dot11MgmtAction":                       reflect.ValueOf((*layers.Dot11MgmtAction)(nil)),
		"Dot11MgmtActionNoAck":                  reflect.ValueOf((*layers.Dot11MgmtActionNoAck)(nil)),
		"Dot11MgmtArubaWLAN":                    reflect.ValueOf((*layers.Dot11MgmtArubaWLAN)(nil)),
		"Dot11MgmtAssociationReq":               reflect.ValueOf((*layers.Dot11MgmtAssociationReq)(nil)),
		"Dot11MgmtAssociationResp":              reflect.ValueOf((*layers.Dot11MgmtAssociationResp)(nil)),
		"Dot11MgmtAuthentication":               reflect.ValueOf((*layers.Dot11MgmtAuthentication)(nil)),
		"Dot11MgmtBeacon":                       reflect.ValueOf((*layers.Dot11MgmtBeacon)(nil)),
		"Dot11MgmtDeauthentication":             reflect.ValueOf((*layers.Dot11MgmtDeauthentication)(nil)),
		"Dot11MgmtDisassociation":               reflect.ValueOf((*layers.Dot11MgmtDisassociation)(nil)),
		"Dot11MgmtMeasurementPilot":             reflect.ValueOf((*layers.Dot11MgmtMeasurementPilot)(nil)),
		"Dot11MgmtProbeReq":                     reflect.ValueOf((*layers.Dot11MgmtProbeReq)(nil)),
		"Dot11MgmtProbeResp":                    reflect.ValueOf((*layers.Dot11MgmtProbeResp)(nil)),
		"Dot11MgmtReassociationReq":             reflect.ValueOf((*layers.Dot11MgmtReassociationReq)(nil)),
		"Dot11MgmtReassociationResp":            reflect.ValueOf((*layers.Dot11MgmtReassociationResp)(nil)),
		"Dot11QOS":                              reflect.ValueOf((*layers.Dot11QOS)(nil)),
		"Dot11Reason":                           reflect.ValueOf((*layers.Dot11Reason)(nil)),
		"Dot11Status":                           reflect.ValueOf((*layers.Dot11Status)(nil)),
		"Dot11Type":                             reflect.ValueOf((*layers.Dot11Type)(nil)),
		"Dot11WEP":                              reflect.ValueOf((*layers.Dot11WEP)(nil)),
		"Dot1Q":                                 reflect.ValueOf((*layers.Dot1Q)(nil)),
		"EAP":                                   reflect.ValueOf((*layers.EAP)(nil)),
		"EAPCode":                               reflect.ValueOf((*layers.EAPCode)(nil)),
		"EAPOL":                                 reflect.ValueOf((*layers.EAPOL)(nil)),
		"EAPOLKey":                              reflect.ValueOf((*layers.EAPOLKey)(nil)),
		"EAPOLKeyDescriptorType":                reflect.ValueOf((*layers.EAPOLKeyDescriptorType)(nil)),
		"EAPOLKeyDescriptorVersion":             reflect.ValueOf((*layers.EAPOLKeyDescriptorVersion)(nil)),
		"EAPOLKeyType":                          reflect.ValueOf((*layers.EAPOLKeyType)(nil)),
		"EAPOLType":                             reflect.ValueOf((*layers.EAPOLType)(nil)),
		"EAPType":                               reflect.ValueOf((*layers.EAPType)(nil)),
		"ERSPANII":                              reflect.ValueOf((*layers.ERSPANII)(nil)),
		"EnumMetadata":                          reflect.ValueOf((*layers.EnumMetadata)(nil)),
		"EtherIP":                               reflect.ValueOf((*layers.EtherIP)(nil)),
		"Ethernet":                              reflect.ValueOf((*layers.Ethernet)(nil)),
		"EthernetCTP":                           reflect.ValueOf((*layers.EthernetCTP)(nil)),
		"EthernetCTPForwardData":                reflect.ValueOf((*layers.EthernetCTPForwardData)(nil)),
		"EthernetCTPFunction":                   reflect.ValueOf((*layers.EthernetCTPFunction)(nil)),
		"EthernetCTPReply":                      reflect.ValueOf((*layers.EthernetCTPReply)(nil)),
		"EthernetType":                          reflect.ValueOf((*layers.EthernetType)(nil)),
		"FDDI":                                  reflect.ValueOf((*layers.FDDI)(nil)),
		"FDDIFrameControl":                      reflect.ValueOf((*layers.FDDIFrameControl)(nil)),
		"GRE":                                   reflect.ValueOf((*layers.GRE)(nil)),
		"GRERouting":                            reflect.ValueOf((*layers.GRERouting)(nil)),
		"GTPExtensionHeader":                    reflect.ValueOf((*layers.GTPExtensionHeader)(nil)),
		"GTPv1U":                                reflect.ValueOf((*layers.GTPv1U)(nil)),
		"Geneve":                                reflect.ValueOf((*layers.Geneve)(nil)),
		"GeneveOption":                          reflect.ValueOf((*layers.GeneveOption)(nil)),
		"HelloPkg":                              reflect.ValueOf((*layers.HelloPkg)(nil)),
		"HelloPkgV2":                            reflect.ValueOf((*layers.HelloPkgV2)(nil)),
		"IANAAddressFamily":                     reflect.ValueOf((*layers.IANAAddressFamily)(nil)),
		"ICMPv4":                                reflect.ValueOf((*layers.ICMPv4)(nil)),
		"ICMPv4TypeCode":                        reflect.ValueOf((*layers.ICMPv4TypeCode)(nil)),
		"ICMPv6":                                reflect.ValueOf((*layers.ICMPv6)(nil)),
		"ICMPv6Echo":                            reflect.ValueOf((*layers.ICMPv6Echo)(nil)),
		"ICMPv6NeighborAdvertisement":           reflect.ValueOf((*layers.ICMPv6NeighborAdvertisement)(nil)),
		"ICMPv6NeighborSolicitation":            reflect.ValueOf((*layers.ICMPv6NeighborSolicitation)(nil)),
		"ICMPv6Opt":                             reflect.ValueOf((*layers.ICMPv6Opt)(nil)),
		"ICMPv6Option":                          reflect.ValueOf((*layers.ICMPv6Option)(nil)),
		"ICMPv6Options":                         reflect.ValueOf((*layers.ICMPv6Options)(nil)),
		"ICMPv6Redirect":                        reflect.ValueOf((*layers.ICMPv6Redirect)(nil)),
		"ICMPv6RouterAdvertisement":             reflect.ValueOf((*layers.ICMPv6RouterAdvertisement)(nil)),
		"ICMPv6RouterSolicitation":              reflect.ValueOf((*layers.ICMPv6RouterSolicitation)(nil)),
		"ICMPv6TypeCode":                        reflect.ValueOf((*layers.ICMPv6TypeCode)(nil)),
		"IEEEOUI":                               reflect.ValueOf((*layers.IEEEOUI)(nil)),
		"IGMP":                                  reflect.ValueOf((*layers.IGMP)(nil)),
		"IGMPType":                              reflect.ValueOf((*layers.IGMPType)(nil)),
		"IGMPv1or2":                             reflect.ValueOf((*layers.IGMPv1or2)(nil)),
		"IGMPv3GroupRecord":                     reflect.ValueOf((*layers.IGMPv3GroupRecord)(nil)),
		"IGMPv3GroupRecordType":                 reflect.ValueOf((*layers.IGMPv3GroupRecordType)(nil)),
		"IPProtocol":                            reflect.ValueOf((*layers.IPProtocol)(nil)),
		"IPSecAH":                               reflect.ValueOf((*layers.IPSecAH)(nil)),
		"IPSecESP":                              reflect.ValueOf((*layers.IPSecESP)(nil)),
		"IPv4":                                  reflect.ValueOf((*layers.IPv4)(nil)),
		"IPv4Flag":                              reflect.ValueOf((*layers.IPv4Flag)(nil)),
		"IPv4Option":                            reflect.ValueOf((*layers.IPv4Option)(nil)),
		"IPv6":                                  reflect.ValueOf((*layers.IPv6)(nil)),
		"IPv6Destination":                       reflect.ValueOf((*layers.IPv6Destination)(nil)),
		"IPv6DestinationOption":                 reflect.ValueOf((*layers.IPv6DestinationOption)(nil)),
		"IPv6ExtensionSkipper":                  reflect.ValueOf((*layers.IPv6ExtensionSkipper)(nil)),
		"IPv6Fragment":                          reflect.ValueOf((*layers.IPv6Fragment)(nil)),
		"IPv6HopByHop":                          reflect.ValueOf((*layers.IPv6HopByHop)(nil)),
		"IPv6HopByHopOption":                    reflect.ValueOf((*layers.IPv6HopByHopOption)(nil)),
		"IPv6Routing":                           reflect.ValueOf((*layers.IPv6Routing)(nil)),
		"InterAreaPrefixLSA":                    reflect.ValueOf((*layers.InterAreaPrefixLSA)(nil)),
		"InterAreaRouterLSA":                    reflect.ValueOf((*layers.InterAreaRouterLSA)(nil)),
		"IntraAreaPrefixLSA":                    reflect.ValueOf((*layers.IntraAreaPrefixLSA)(nil)),
		"LCM":                                   reflect.ValueOf((*layers.LCM)(nil)),
		"LCMFingerprint":                        reflect.ValueOf((*layers.LCMFingerprint)(nil)),
		"LLC":                                   reflect.ValueOf((*layers.LLC)(nil)),
		"LLDPApplicationType":                   reflect.ValueOf((*layers.LLDPApplicationType)(nil)),
		"LLDPCapabilities":                      reflect.ValueOf((*layers.LLDPCapabilities)(nil)),
		"LLDPChassisID":                         reflect.ValueOf((*layers.LLDPChassisID)(nil)),
		"LLDPChassisIDSubType":                  reflect.ValueOf((*layers.LLDPChassisIDSubType)(nil)),
		"LLDPCisco2Subtype":                     reflect.ValueOf((*layers.LLDPCisco2Subtype)(nil)),
		"LLDPEVBCapabilities":                   reflect.ValueOf((*layers.LLDPEVBCapabilities)(nil)),
		"LLDPEVBSettings":                       reflect.ValueOf((*layers.LLDPEVBSettings)(nil)),
		"LLDPInfo8021":                          reflect.ValueOf((*layers.LLDPInfo8021)(nil)),
		"LLDPInfo8021Qbg":                       reflect.ValueOf((*layers.LLDPInfo8021Qbg)(nil)),
		"LLDPInfo8023":                          reflect.ValueOf((*layers.LLDPInfo8023)(nil)),
		"LLDPInfoCisco2":                        reflect.ValueOf((*layers.LLDPInfoCisco2)(nil)),
		"LLDPInfoMedia":                         reflect.ValueOf((*layers.LLDPInfoMedia)(nil)),
		"LLDPInfoProfinet":                      reflect.ValueOf((*layers.LLDPInfoProfinet)(nil)),
		"LLDPInterfaceSubtype":                  reflect.ValueOf((*layers.LLDPInterfaceSubtype)(nil)),
		"LLDPLinkAggregation":                   reflect.ValueOf((*layers.LLDPLinkAggregation)(nil)),
		"LLDPLocation":                          reflect.ValueOf((*layers.LLDPLocation)(nil)),
		"LLDPLocationAddress":                   reflect.ValueOf((*layers.LLDPLocationAddress)(nil)),
		"LLDPLocationAddressLine":               reflect.ValueOf((*layers.LLDPLocationAddressLine)(nil)),
		"LLDPLocationAddressType":               reflect.ValueOf((*layers.LLDPLocationAddressType)(nil)),
		"LLDPLocationAddressWhat":               reflect.ValueOf((*layers.LLDPLocationAddressWhat)(nil)),
		"LLDPLocationCoordinate":                reflect.ValueOf((*layers.LLDPLocationCoordinate)(nil)),
		"LLDPLocationECS":                       reflect.ValueOf((*layers.LLDPLocationECS)(nil)),
		"LLDPLocationFormat":                    reflect.ValueOf((*layers.LLDPLocationFormat)(nil)),
		"LLDPMACPHYConfigStatus":                reflect.ValueOf((*layers.LLDPMACPHYConfigStatus)(nil)),
		"LLDPMediaCapabilities":                 reflect.ValueOf((*layers.LLDPMediaCapabilities)(nil)),
		"LLDPMediaClass":                        reflect.ValueOf((*layers.LLDPMediaClass)(nil)),
		"LLDPMediaSubtype":                      reflect.ValueOf((*layers.LLDPMediaSubtype)(nil)),
		"LLDPMgmtAddress":                       reflect.ValueOf((*layers.LLDPMgmtAddress)(nil)),
		"LLDPNetworkPolicy":                     reflect.ValueOf((*layers.LLDPNetworkPolicy)(nil)),
		"LLDPOrgSpecificTLV":                    reflect.ValueOf((*layers.LLDPOrgSpecificTLV)(nil)),
		"LLDPPNIODelay":                         reflect.ValueOf((*layers.LLDPPNIODelay)(nil)),
		"LLDPPNIOMRPPortStatus":                 reflect.ValueOf((*layers.LLDPPNIOMRPPortStatus)(nil)),
		"LLDPPNIOPTCPStatus":                    reflect.ValueOf((*layers.LLDPPNIOPTCPStatus)(nil)),
		"LLDPPNIOPortStatus":                    reflect.ValueOf((*layers.LLDPPNIOPortStatus)(nil)),
		"LLDPPortID":                            reflect.ValueOf((*layers.LLDPPortID)(nil)),
		"LLDPPortIDSubType":                     reflect.ValueOf((*layers.LLDPPortIDSubType)(nil)),
		"LLDPPowerPriority":                     reflect.ValueOf((*layers.LLDPPowerPriority)(nil)),
		"LLDPPowerSource":                       reflect.ValueOf((*layers.LLDPPowerSource)(nil)),
		"LLDPPowerType":                         reflect.ValueOf((*layers.LLDPPowerType)(nil)),
		"LLDPPowerViaMDI":                       reflect.ValueOf((*layers.LLDPPowerViaMDI)(nil)),
		"LLDPPowerViaMDI8023":                   reflect.ValueOf((*layers.LLDPPowerViaMDI8023)(nil)),
		"LLDPProfinetSubtype":                   reflect.ValueOf((*layers.LLDPProfinetSubtype)(nil)),
		"LLDPSysCapabilities":                   reflect.ValueOf((*layers.LLDPSysCapabilities)(nil)),
		"LLDPTLVType":                           reflect.ValueOf((*layers.LLDPTLVType)(nil)),
		"LSA":                                   reflect.ValueOf((*layers.LSA)(nil)),
		"LSAheader":                             reflect.ValueOf((*layers.LSAheader)(nil)),
		"LSReq":                                 reflect.ValueOf((*layers.LSReq)(nil)),
		"LSUpdate":                              reflect.ValueOf((*layers.LSUpdate)(nil)),
		"LinkLSA":                               reflect.ValueOf((*layers.LinkLSA)(nil)),
		"LinkLayerDiscovery":                    reflect.ValueOf((*layers.LinkLayerDiscovery)(nil)),
		"LinkLayerDiscoveryInfo":                reflect.ValueOf((*layers.LinkLayerDiscoveryInfo)(nil)),
		"LinkLayerDiscoveryValue":               reflect.ValueOf((*layers.LinkLayerDiscoveryValue)(nil)),
		"LinkType":                              reflect.ValueOf((*layers.LinkType)(nil)),
		"LinuxSLL":                              reflect.ValueOf((*layers.LinuxSLL)(nil)),
		"LinuxSLLPacketType":                    reflect.ValueOf((*layers.LinuxSLLPacketType)(nil)),
		"Loopback":                              reflect.ValueOf((*layers.Loopback)(nil)),
		"MLDv1Message":                          reflect.ValueOf((*layers.MLDv1Message)(nil)),
		"MLDv1MulticastListenerDoneMessage":     reflect.ValueOf((*layers.MLDv1MulticastListenerDoneMessage)(nil)),
		"MLDv1MulticastListenerQueryMessage":    reflect.ValueOf((*layers.MLDv1MulticastListenerQueryMessage)(nil)),
		"MLDv1MulticastListenerReportMessage":   reflect.ValueOf((*layers.MLDv1MulticastListenerReportMessage)(nil)),
		"MLDv2MulticastAddressRecord":           reflect.ValueOf((*layers.MLDv2MulticastAddressRecord)(nil)),
		"MLDv2MulticastAddressRecordType":       reflect.ValueOf((*layers.MLDv2MulticastAddressRecordType)(nil)),
		"MLDv2MulticastListenerQueryMessage":    reflect.ValueOf((*layers.MLDv2MulticastListenerQueryMessage)(nil)),
		"MLDv2MulticastListenerReportMessage":   reflect.ValueOf((*layers.MLDv2MulticastListenerReportMessage)(nil)),
		"MPLS":                                  reflect.ValueOf((*layers.MPLS)(nil)),
		"ModbusProtocol":                        reflect.ValueOf((*layers.ModbusProtocol)(nil)),
		"ModbusTCP":                             reflect.ValueOf((*layers.ModbusTCP)(nil)),
		"NDPBackplaneType":                      reflect.ValueOf((*layers.NDPBackplaneType)(nil)),
		"NDPChassisType":                        reflect.ValueOf((*layers.NDPChassisType)(nil)),
		"NDPState":                              reflect.ValueOf((*layers.NDPState)(nil)),
		"NTP":                                   reflect.ValueOf((*layers.NTP)(nil)),
		"NTPFixed16Seconds":                     reflect.ValueOf((*layers.NTPFixed16Seconds)(nil)),
		"NTPLeapIndicator":                      reflect.ValueOf((*layers.NTPLeapIndicator)(nil)),
		"NTPLog2Seconds":                        reflect.ValueOf((*layers.NTPLog2Seconds)(nil)),
		"NTPMode":                               reflect.ValueOf((*layers.NTPMode)(nil)),
		"NTPReferenceID":                        reflect.ValueOf((*layers.NTPReferenceID)(nil)),
		"NTPStratum":                            reflect.ValueOf((*layers.NTPStratum)(nil)),
		"NTPTimestamp":                          reflect.ValueOf((*layers.NTPTimestamp)(nil)),
		"NTPVersion":                            reflect.ValueOf((*layers.NTPVersion)(nil)),
		"NetworkLSA":                            reflect.ValueOf((*layers.NetworkLSA)(nil)),
		"NetworkLSAV2":                          reflect.ValueOf((*layers.NetworkLSAV2)(nil)),
		"NortelDiscovery":                       reflect.ValueOf((*layers.NortelDiscovery)(nil)),
		"OSPF":                                  reflect.ValueOf((*layers.OSPF)(nil)),
		"OSPFType":                              reflect.ValueOf((*layers.OSPFType)(nil)),
		"OSPFv2":                                reflect.ValueOf((*layers.OSPFv2)(nil)),
		"OSPFv3":                                reflect.ValueOf((*layers.OSPFv3)(nil)),
		"PFDirection":                           reflect.ValueOf((*layers.PFDirection)(nil)),
		"PFLog":                                 reflect.ValueOf((*layers.PFLog)(nil)),
		"PPP":                                   reflect.ValueOf((*layers.PPP)(nil)),
		"PPPType":                               reflect.ValueOf((*layers.PPPType)(nil)),
		"PPPoE":                                 reflect.ValueOf((*layers.PPPoE)(nil)),
		"PPPoECode":                             reflect.ValueOf((*layers.PPPoECode)(nil)),
		"PortProtocolVLANID":                    reflect.ValueOf((*layers.PortProtocolVLANID)(nil)),
		"Prefix":                                reflect.ValueOf((*layers.Prefix)(nil)),
		"PrismDID":                              reflect.ValueOf((*layers.PrismDID)(nil)),
		"PrismHeader":                           reflect.ValueOf((*layers.PrismHeader)(nil)),
		"PrismValue":                            reflect.ValueOf((*layers.PrismValue)(nil)),
		"ProtocolFamily":                        reflect.ValueOf((*layers.ProtocolFamily)(nil)),
		"ProtocolGuessingDecoder":               reflect.ValueOf((*layers.ProtocolGuessingDecoder)(nil)),
		"ProtocolIdentity":                      reflect.ValueOf((*layers.ProtocolIdentity)(nil)),
		"RADIUS":                                reflect.ValueOf((*layers.RADIUS)(nil)),
		"RADIUSAttribute":                       reflect.ValueOf((*layers.RADIUSAttribute)(nil)),
		"RADIUSAttributeLength":                 reflect.ValueOf((*layers.RADIUSAttributeLength)(nil)),
		"RADIUSAttributeType":                   reflect.ValueOf((*layers.RADIUSAttributeType)(nil)),
		"RADIUSAttributeValue":                  reflect.ValueOf((*layers.RADIUSAttributeValue)(nil)),
		"RADIUSAuthenticator":                   reflect.ValueOf((*layers.RADIUSAuthenticator)(nil)),
		"RADIUSCode":                            reflect.ValueOf((*layers.RADIUSCode)(nil)),
		"RADIUSIdentifier":                      reflect.ValueOf((*layers.RADIUSIdentifier)(nil)),
		"RADIUSLength":                          reflect.ValueOf((*layers.RADIUSLength)(nil)),
		"RMCP":                                  reflect.ValueOf((*layers.RMCP)(nil)),
		"RMCPClass":                             reflect.ValueOf((*layers.RMCPClass)(nil)),
		"RUDP":                                  reflect.ValueOf((*layers.RUDP)(nil)),
		"RUDPHeaderEACK":                        reflect.ValueOf((*layers.RUDPHeaderEACK)(nil)),
		"RUDPHeaderSYN":                         reflect.ValueOf((*layers.RUDPHeaderSYN)(nil)),
		"RUDPPort":                              reflect.ValueOf((*layers.RUDPPort)(nil)),
		"RadioTap":                              reflect.ValueOf((*layers.RadioTap)(nil)),
		"RadioTapAMPDUStatus":                   reflect.ValueOf((*layers.RadioTapAMPDUStatus)(nil)),
		"RadioTapAMPDUStatusFlags":              reflect.ValueOf((*layers.RadioTapAMPDUStatusFlags)(nil)),
		"RadioTapChannelFlags":                  reflect.ValueOf((*layers.RadioTapChannelFlags)(nil)),
		"RadioTapChannelFrequency":              reflect.ValueOf((*layers.RadioTapChannelFrequency)(nil)),
		"RadioTapFlags":                         reflect.ValueOf((*layers.RadioTapFlags)(nil)),
		"RadioTapMCS":                           reflect.ValueOf((*layers.RadioTapMCS)(nil)),
		"RadioTapMCSFlags":                      reflect.ValueOf((*layers.RadioTapMCSFlags)(nil)),
		"RadioTapMCSKnown":                      reflect.ValueOf((*layers.RadioTapMCSKnown)(nil)),
		"RadioTapPresent":                       reflect.ValueOf((*layers.RadioTapPresent)(nil)),
		"RadioTapRate":                          reflect.ValueOf((*layers.RadioTapRate)(nil)),
		"RadioTapRxFlags":                       reflect.ValueOf((*layers.RadioTapRxFlags)(nil)),
		"RadioTapTxFlags":                       reflect.ValueOf((*layers.RadioTapTxFlags)(nil)),
		"RadioTapVHT":                           reflect.ValueOf((*layers.RadioTapVHT)(nil)),
		"RadioTapVHTFlags":                      reflect.ValueOf((*layers.RadioTapVHTFlags)(nil)),
		"RadioTapVHTKnown":                      reflect.ValueOf((*layers.RadioTapVHTKnown)(nil)),
		"RadioTapVHTMCSNSS":                     reflect.ValueOf((*layers.RadioTapVHTMCSNSS)(nil)),
		"Router":                                reflect.ValueOf((*layers.Router)(nil)),
		"RouterLSA":                             reflect.ValueOf((*layers.RouterLSA)(nil)),
		"RouterLSAV2":                           reflect.ValueOf((*layers.RouterLSAV2)(nil)),
		"RouterV2":                              reflect.ValueOf((*layers.RouterV2)(nil)),
		"SCTP":                                  reflect.ValueOf((*layers.SCTP)(nil)),
		"SCTPChunk":                             reflect.ValueOf((*layers.SCTPChunk)(nil)),
		"SCTPChunkType":                         reflect.ValueOf((*layers.SCTPChunkType)(nil)),
		"SCTPCookieEcho":                        reflect.ValueOf((*layers.SCTPCookieEcho)(nil)),
		"SCTPData":                              reflect.ValueOf((*layers.SCTPData)(nil)),
		"SCTPEmptyLayer":                        reflect.ValueOf((*layers.SCTPEmptyLayer)(nil)),
		"SCTPError":                             reflect.ValueOf((*layers.SCTPError)(nil)),
		"SCTPErrorParameter":                    reflect.ValueOf((*layers.SCTPErrorParameter)(nil)),
		"SCTPHeartbeat":                         reflect.ValueOf((*layers.SCTPHeartbeat)(nil)),
		"SCTPHeartbeatParameter":                reflect.ValueOf((*layers.SCTPHeartbeatParameter)(nil)),
		"SCTPInit":                              reflect.ValueOf((*layers.SCTPInit)(nil)),
		"SCTPInitParameter":                     reflect.ValueOf((*layers.SCTPInitParameter)(nil)),
		"SCTPParameter":                         reflect.ValueOf((*layers.SCTPParameter)(nil)),
		"SCTPPayloadProtocol":                   reflect.ValueOf((*layers.SCTPPayloadProtocol)(nil)),
		"SCTPPort":                              reflect.ValueOf((*layers.SCTPPort)(nil)),
		"SCTPSack":                              reflect.ValueOf((*layers.SCTPSack)(nil)),
		"SCTPShutdown":                          reflect.ValueOf((*layers.SCTPShutdown)(nil)),
		"SCTPShutdownAck":                       reflect.ValueOf((*layers.SCTPShutdownAck)(nil)),
		"SCTPUnknownChunkType":                  reflect.ValueOf((*layers.SCTPUnknownChunkType)(nil)),
		"SFLLACPPortState":                      reflect.ValueOf((*layers.SFLLACPPortState)(nil)),
		"SFlowASDestination":                    reflect.ValueOf((*layers.SFlowASDestination)(nil)),
		"SFlowASPathType":                       reflect.ValueOf((*layers.SFlowASPathType)(nil)),
		"SFlowAppresourcesCounters":             reflect.ValueOf((*layers.SFlowAppresourcesCounters)(nil)),
		"SFlowBaseCounterRecord":                reflect.ValueOf((*layers.SFlowBaseCounterRecord)(nil)),
		"SFlowBaseFlowRecord":                   reflect.ValueOf((*layers.SFlowBaseFlowRecord)(nil)),
		"SFlowCharSet":                          reflect.ValueOf((*layers.SFlowCharSet)(nil)),
		"SFlowCounterDataFormat":                reflect.ValueOf((*layers.SFlowCounterDataFormat)(nil)),
		"SFlowCounterRecordType":                reflect.ValueOf((*layers.SFlowCounterRecordType)(nil)),
		"SFlowCounterSample":                    reflect.ValueOf((*layers.SFlowCounterSample)(nil)),
		"SFlowDataFormat":                       reflect.ValueOf((*layers.SFlowDataFormat)(nil)),
		"SFlowDataSource":                       reflect.ValueOf((*layers.SFlowDataSource)(nil)),
		"SFlowDataSourceExpanded":               reflect.ValueOf((*layers.SFlowDataSourceExpanded)(nil)),
		"SFlowDatagram":                         reflect.ValueOf((*layers.SFlowDatagram)(nil)),
		"SFlowEnterpriseID":                     reflect.ValueOf((*layers.SFlowEnterpriseID)(nil)),
		"SFlowEthernetCounters":                 reflect.ValueOf((*layers.SFlowEthernetCounters)(nil)),
		"SFlowEthernetFrameFlowRecord":          reflect.ValueOf((*layers.SFlowEthernetFrameFlowRecord)(nil)),
		"SFlowExtendedDecapsulateEgressRecord":  reflect.ValueOf((*layers.SFlowExtendedDecapsulateEgressRecord)(nil)),
		"SFlowExtendedDecapsulateIngressRecord": reflect.ValueOf((*layers.SFlowExtendedDecapsulateIngressRecord)(nil)),
		"SFlowExtendedGatewayFlowRecord":        reflect.ValueOf((*layers.SFlowExtendedGatewayFlowRecord)(nil)),
		"SFlowExtendedIpv4TunnelEgressRecord":   reflect.ValueOf((*layers.SFlowExtendedIpv4TunnelEgressRecord)(nil)),
		"SFlowExtendedIpv4TunnelIngressRecord":  reflect.ValueOf((*layers.SFlowExtendedIpv4TunnelIngressRecord)(nil)),
		"SFlowExtendedIpv6TunnelEgressRecord":   reflect.ValueOf((*layers.SFlowExtendedIpv6TunnelEgressRecord)(nil)),
		"SFlowExtendedIpv6TunnelIngressRecord":  reflect.ValueOf((*layers.SFlowExtendedIpv6TunnelIngressRecord)(nil)),
		"SFlowExtendedRouterFlowRecord":         reflect.ValueOf((*layers.SFlowExtendedRouterFlowRecord)(nil)),
		"SFlowExtendedSwitchFlowRecord":         reflect.ValueOf((*layers.SFlowExtendedSwitchFlowRecord)(nil)),
		"SFlowExtendedURLRecord":                reflect.ValueOf((*layers.SFlowExtendedURLRecord)(nil)),
		"SFlowExtendedUserFlow":                 reflect.ValueOf((*layers.SFlowExtendedUserFlow)(nil)),
		"SFlowExtendedVniEgressRecord":          reflect.ValueOf((*layers.SFlowExtendedVniEgressRecord)(nil)),
		"SFlowExtendedVniIngressRecord":         reflect.ValueOf((*layers.SFlowExtendedVniIngressRecord)(nil)),
		"SFlowFlowDataFormat":                   reflect.ValueOf((*layers.SFlowFlowDataFormat)(nil)),
		"SFlowFlowRecordType":                   reflect.ValueOf((*layers.SFlowFlowRecordType)(nil)),
		"SFlowFlowSample":                       reflect.ValueOf((*layers.SFlowFlowSample)(nil)),
		"SFlowGenericInterfaceCounters":         reflect.ValueOf((*layers.SFlowGenericInterfaceCounters)(nil)),
		"SFlowIPType":                           reflect.ValueOf((*layers.SFlowIPType)(nil)),
		"SFlowIpv4Record":                       reflect.ValueOf((*layers.SFlowIpv4Record)(nil)),
		"SFlowIpv6Record":                       reflect.ValueOf((*layers.SFlowIpv6Record)(nil)),
		"SFlowLACPCounters":                     reflect.ValueOf((*layers.SFlowLACPCounters)(nil)),
		"SFlowOVSDPCounters":                    reflect.ValueOf((*layers.SFlowOVSDPCounters)(nil)),
		"SFlowOpenflowPortCounters":             reflect.ValueOf((*layers.SFlowOpenflowPortCounters)(nil)),
		"SFlowPORTNAME":                         reflect.ValueOf((*layers.SFlowPORTNAME)(nil)),
		"SFlowProcessorCounters":                reflect.ValueOf((*layers.SFlowProcessorCounters)(nil)),
		"SFlowRawHeaderProtocol":                reflect.ValueOf((*layers.SFlowRawHeaderProtocol)(nil)),
		"SFlowRawPacketFlowRecord":              reflect.ValueOf((*layers.SFlowRawPacketFlowRecord)(nil)),
		"SFlowRecord":                           reflect.ValueOf((*layers.SFlowRecord)(nil)),
		"SFlowSampleType":                       reflect.ValueOf((*layers.SFlowSampleType)(nil)),
		"SFlowSourceFormat":                     reflect.ValueOf((*layers.SFlowSourceFormat)(nil)),
		"SFlowSourceValue":                      reflect.ValueOf((*layers.SFlowSourceValue)(nil)),
		"SFlowURLDirection":                     reflect.ValueOf((*layers.SFlowURLDirection)(nil)),
		"SFlowVLANCounters":                     reflect.ValueOf((*layers.SFlowVLANCounters)(nil)),
		"SIP":                                   reflect.ValueOf((*layers.SIP)(nil)),
		"SIPMethod":                             reflect.ValueOf((*layers.SIPMethod)(nil)),
		"SIPVersion":                            reflect.ValueOf((*layers.SIPVersion)(nil)),
		"SNAP":                                  reflect.ValueOf((*layers.SNAP)(nil)),
		"STP":                                   reflect.ValueOf((*layers.STP)(nil)),
		"TCP":                                   reflect.ValueOf((*layers.TCP)(nil)),
		"TCPOption":                             reflect.ValueOf((*layers.TCPOption)(nil)),
		"TCPOptionKind":                         reflect.ValueOf((*layers.TCPOptionKind)(nil)),
		"TCPPort":                               reflect.ValueOf((*layers.TCPPort)(nil)),
		"TLS":                                   reflect.ValueOf((*layers.TLS)(nil)),
		"TLSAlertDescr":                         reflect.ValueOf((*layers.TLSAlertDescr)(nil)),
		"TLSAlertLevel":                         reflect.ValueOf((*layers.TLSAlertLevel)(nil)),
		"TLSAlertRecord":                        reflect.ValueOf((*layers.TLSAlertRecord)(nil)),
		"TLSAppDataRecord":                      reflect.ValueOf((*layers.TLSAppDataRecord)(nil)),
		"TLSChangeCipherSpecRecord":             reflect.ValueOf((*layers.TLSChangeCipherSpecRecord)(nil)),
		"TLSHandshakeRecord":                    reflect.ValueOf((*layers.TLSHandshakeRecord)(nil)),
		"TLSRecordHeader":                       reflect.ValueOf((*layers.TLSRecordHeader)(nil)),
		"TLSType":                               reflect.ValueOf((*layers.TLSType)(nil)),
		"TLSVersion":                            reflect.ValueOf((*layers.TLSVersion)(nil)),
		"TLSchangeCipherSpec":                   reflect.ValueOf((*layers.TLSchangeCipherSpec)(nil)),
		"UDP":                                   reflect.ValueOf((*layers.UDP)(nil)),
		"UDPLite":                               reflect.ValueOf((*layers.UDPLite)(nil)),
		"UDPLitePort":                           reflect.ValueOf((*layers.UDPLitePort)(nil)),
		"UDPPort":                               reflect.ValueOf((*layers.UDPPort)(nil)),
		"USB":                                   reflect.ValueOf((*layers.USB)(nil)),
		"USBBulk":                               reflect.ValueOf((*layers.USBBulk)(nil)),
		"USBControl":                            reflect.ValueOf((*layers.USBControl)(nil)),
		"USBDirectionType":                      reflect.ValueOf((*layers.USBDirectionType)(nil)),
		"USBEventType":                          reflect.ValueOf((*layers.USBEventType)(nil)),
		"USBInterrupt":                          reflect.ValueOf((*layers.USBInterrupt)(nil)),
		"USBRequestBlockSetup":                  reflect.ValueOf((*layers.USBRequestBlockSetup)(nil)),
		"USBRequestBlockSetupRequest":           reflect.ValueOf((*layers.USBRequestBlockSetupRequest)(nil)),
		"USBTransportType":                      reflect.ValueOf((*layers.USBTransportType)(nil)),
		"VLANName":                              reflect.ValueOf((*layers.VLANName)(nil)),
		"VRRPv2":                                reflect.ValueOf((*layers.VRRPv2)(nil)),
		"VRRPv2AuthType":                        reflect.ValueOf((*layers.VRRPv2AuthType)(nil)),
		"VRRPv2Type":                            reflect.ValueOf((*layers.VRRPv2Type)(nil)),
		"VXLAN":                                 reflect.ValueOf((*layers.VXLAN)(nil)),

		// interface wrapper definitions
		"_SFlowRecord": reflect.ValueOf((*_github_com_google_gopacket_layers_SFlowRecord)(nil)),
	}
}

// _github_com_google_gopacket_layers_SFlowRecord is an interface wrapper for SFlowRecord type
type _github_com_google_gopacket_layers_SFlowRecord struct {
	IValue interface{}
}
