// Code generated by 'yaegi extract github.com/sashabaranov/go-openai/jsonschema'. DO NOT EDIT.

package symbol

import (
	"github.com/sashabaranov/go-openai/jsonschema"
	"reflect"
)

func init() {
	Symbols["github.com/sashabaranov/go-openai/jsonschema/jsonschema"] = map[string]reflect.Value{
		// function, constant and variable definitions
		"Array":                    reflect.ValueOf(jsonschema.Array),
		"Boolean":                  reflect.ValueOf(jsonschema.Boolean),
		"GenerateSchemaForType":    reflect.ValueOf(jsonschema.GenerateSchemaForType),
		"Integer":                  reflect.ValueOf(jsonschema.Integer),
		"Null":                     reflect.ValueOf(jsonschema.Null),
		"Number":                   reflect.ValueOf(jsonschema.Number),
		"Object":                   reflect.ValueOf(jsonschema.Object),
		"String":                   reflect.ValueOf(jsonschema.String),
		"Validate":                 reflect.ValueOf(jsonschema.Validate),
		"VerifySchemaAndUnmarshal": reflect.ValueOf(jsonschema.VerifySchemaAndUnmarshal),

		// type definitions
		"DataType":   reflect.ValueOf((*jsonschema.DataType)(nil)),
		"Definition": reflect.ValueOf((*jsonschema.Definition)(nil)),
	}
}
