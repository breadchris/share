// Code generated by 'yaegi extract github.com/google/gopacket/pcapgo'. DO NOT EDIT.

package symbol

import (
	"github.com/google/gopacket/pcapgo"
	"go/constant"
	"go/token"
	"reflect"
)

func init() {
	Symbols["github.com/google/gopacket/pcapgo/pcapgo"] = map[string]reflect.Value{
		// function, constant and variable definitions
		"DefaultNgInterface":     reflect.ValueOf(&pcapgo.DefaultNgInterface).Elem(),
		"DefaultNgReaderOptions": reflect.ValueOf(&pcapgo.DefaultNgReaderOptions).Elem(),
		"DefaultNgWriterOptions": reflect.ValueOf(&pcapgo.DefaultNgWriterOptions).Elem(),
		"ErrNgLinkTypeMismatch":  reflect.ValueOf(&pcapgo.ErrNgLinkTypeMismatch).Elem(),
		"ErrNgVersionMismatch":   reflect.ValueOf(&pcapgo.ErrNgVersionMismatch).Elem(),
		"NewNgReader":            reflect.ValueOf(pcapgo.NewNgReader),
		"NewNgWriter":            reflect.ValueOf(pcapgo.NewNgWriter),
		"NewNgWriterInterface":   reflect.ValueOf(pcapgo.NewNgWriterInterface),
		"NewReader":              reflect.ValueOf(pcapgo.NewReader),
		"NewSnoopReader":         reflect.ValueOf(pcapgo.NewSnoopReader),
		"NewWriter":              reflect.ValueOf(pcapgo.NewWriter),
		"NewWriterNanos":         reflect.ValueOf(pcapgo.NewWriterNanos),
		"NgNoValue64":            reflect.ValueOf(constant.MakeFromLiteral("18446744073709551615", token.INT, 0)),

		// type definitions
		"NgInterface":           reflect.ValueOf((*pcapgo.NgInterface)(nil)),
		"NgInterfaceStatistics": reflect.ValueOf((*pcapgo.NgInterfaceStatistics)(nil)),
		"NgReader":              reflect.ValueOf((*pcapgo.NgReader)(nil)),
		"NgReaderOptions":       reflect.ValueOf((*pcapgo.NgReaderOptions)(nil)),
		"NgResolution":          reflect.ValueOf((*pcapgo.NgResolution)(nil)),
		"NgSectionInfo":         reflect.ValueOf((*pcapgo.NgSectionInfo)(nil)),
		"NgWriter":              reflect.ValueOf((*pcapgo.NgWriter)(nil)),
		"NgWriterOptions":       reflect.ValueOf((*pcapgo.NgWriterOptions)(nil)),
		"Reader":                reflect.ValueOf((*pcapgo.Reader)(nil)),
		"SnoopReader":           reflect.ValueOf((*pcapgo.SnoopReader)(nil)),
		"Writer":                reflect.ValueOf((*pcapgo.Writer)(nil)),
	}
}
