// Code generated by 'yaegi extract syscall/js'. DO NOT EDIT.

//go:build go1.23
// +build go1.23

package symbol

import (
	"reflect"
	"syscall/js"
)

func init() {
	Symbols["syscall/js/js"] = map[string]reflect.Value{
		// function, constant and variable definitions
		"CopyBytesToGo": reflect.ValueOf(js.CopyBytesToGo),
		"CopyBytesToJS": reflect.ValueOf(js.CopyBytesToJS),
		"FuncOf":        reflect.ValueOf(js.FuncOf),
		"Global":        reflect.ValueOf(js.Global),
		"Null":          reflect.ValueOf(js.Null),
		"TypeBoolean":   reflect.ValueOf(js.TypeBoolean),
		"TypeFunction":  reflect.ValueOf(js.TypeFunction),
		"TypeNull":      reflect.ValueOf(js.TypeNull),
		"TypeNumber":    reflect.ValueOf(js.TypeNumber),
		"TypeObject":    reflect.ValueOf(js.TypeObject),
		"TypeString":    reflect.ValueOf(js.TypeString),
		"TypeSymbol":    reflect.ValueOf(js.TypeSymbol),
		"TypeUndefined": reflect.ValueOf(js.TypeUndefined),
		"Undefined":     reflect.ValueOf(js.Undefined),
		"ValueOf":       reflect.ValueOf(js.ValueOf),

		// type definitions
		"Error":      reflect.ValueOf((*js.Error)(nil)),
		"Func":       reflect.ValueOf((*js.Func)(nil)),
		"Type":       reflect.ValueOf((*js.Type)(nil)),
		"Value":      reflect.ValueOf((*js.Value)(nil)),
		"ValueError": reflect.ValueOf((*js.ValueError)(nil)),
	}
}
